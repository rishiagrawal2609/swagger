{"swagger": "2.0", "basePath": "/", "paths": {"/access/posture/governance_summary/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SummaryCountResponse"}}}, "summary": "Get Access Summary Count", "description": "Displays the summary of the violations based on the cloud provider", "operationId": "AccessSummaryCount", "parameters": [{"description": "Supported services for Access Dashboard. Select one from the dropdown to display summary for that particular service", "type": "string", "in": "query", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI"], "x-cs-enum-type": "CloudServiceName", "default": "AWS", "required": true, "name": "services"}], "security": [{"auth_token": []}], "tags": ["Access"]}}, "/access/posture/governance_summary_dashboard": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/AccessSummaryDashboardResponseModel"}}}}, "summary": "Get Access Summary Dashboard Count", "description": "Displays the summary of the violations", "operationId": "AccessSummaryDashboardCount", "parameters": [{"description": "Select one from the supported services to display summary for that particular service", "type": "string", "in": "query", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI"], "x-cs-enum-type": "CloudServiceName", "default": "AWS", "required": false, "name": "services"}, {"description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API.", "type": "string", "required": false, "name": "tenant_id", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Access"]}}, "/access/posture/view_violations": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ViewViolationResponse"}}}, "summary": "Get Access Violations", "description": "Displays the violations based on the cloud provider", "operationId": "AccessViolations", "parameters": [{"description": "Supported services for Access Dashboard. Select one from the dropdown to display violations of all the accounts for that particular service", "type": "string", "in": "query", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI"], "x-cs-enum-type": "CloudServiceName", "default": "AWS", "required": true, "name": "services"}, {"description": "Specify the tenant ID as comma separated. This is a unique ID and can be retrieved using the List Tenants API.", "type": "string", "required": false, "name": "tenant_ids", "in": "query"}, {"description": "Search by account_name wise", "type": "string", "name": "search", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}, {"description": "Limit of the data to be displayed", "type": "integer", "name": "limit", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Access"]}}, "/access/visibility/details": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/DetailsResponse"}}}, "summary": "Get Access Detail", "description": "Displays the details of individual violation", "operationId": "AccessDetails", "parameters": [{"name": "DetailsRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/DetailsRequest"}}, {"description": "Supported services for Access Dashboard. Select one from the dropdown to display details for that particular service", "type": "string", "in": "query", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI"], "x-cs-enum-type": "CloudServiceName", "default": "AWS", "required": true, "name": "services"}, {"description": "Category under which a particular violation falls in a particular cloud account. Please get category from the guardrail of AccessVisibilityFilters in Access Visibility Dashboard", "type": "string", "required": true, "name": "category", "in": "query"}, {"description": "Name of the violation. Please get name from the guardrail of AccessVisibilityFilters in Access Visibility Dashboard", "type": "string", "required": true, "name": "item", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}, {"description": "Limit of the data to be displayed", "type": "integer", "name": "limit", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Access"]}}, "/access/visibility/filter": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/VisibilityFilterResponse"}}}, "summary": "Get Access Visibility Filter", "description": "Displays the filters by tenants, cloud accounts, guardrail", "operationId": "AccessVisibilityFilters", "parameters": [{"description": "Supported services for Access Dashboard. Select one from the dropdown to display filter for that particular service", "type": "string", "in": "query", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI"], "x-cs-enum-type": "CloudServiceName", "default": "AWS", "required": true, "name": "services"}], "security": [{"auth_token": []}], "tags": ["Access"]}}, "/alerts/{tenant_id}/post_configure/{cloud_account_id}/create_alert_configuration": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CreateAlertConfigurationResponse"}}}, "summary": "Create Alert Configuration Post On-Boarding", "description": "Creating Post Onboarding Alert configuration", "operationId": "CreateAlertConfiguration", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the cloud account id to update, cloud account id is unique can be obtained from the list cloud account api. This should be same as the ID of the reference APIFor Azure CSP-Direct subscriptions, this can be fetched from list child accounts api."}, {"name": "CreateAlertConfigurationRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateAlertConfigurationRequest"}}, {"description": "Specify the service name", "type": "string", "in": "query", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI"], "x-cs-enum-type": "CloudServiceName", "default": "AWS", "required": true, "name": "service"}, {"description": "Specify the configuration type. 'existing' is applicable only for Azure.", "enum": ["create_new", "existing"], "default": "create_new", "required": true, "name": "configure_type", "type": "string", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}}, "/alerts/{tenant_id}/post_configure/{cloud_account_id}/delete_configuration": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/DeleteAlertConfiguration"}}}, "summary": "Delete Alert Configuration Post On-Boarding", "description": "Deleting the Post Onboarding Alert configuration", "operationId": "DeleteAlertConfiguration", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the cloud account id to update, cloud account id is unique can be obtained from the list cloud account api. This should be same as the ID of the reference APIFor Azure CSP-Direct subscriptions, this can be fetched from list child accounts api."}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}}, "/alerts/{tenant_id}/post_configure/{cloud_account_id}/get_configurations": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/GetConfigurations"}}}, "summary": "Get Alert Configurations Post On-Boarding", "description": "Get Post Onboarding Configurations", "operationId": "GetPostOnboardingConfigurations", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the cloud account id to update, cloud account id is unique can be obtained from the list cloud account api. This should be same as the ID of the reference APIFor Azure CSP-Direct subscriptions, this can be fetched from list child accounts api."}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}}, "/alerts/{tenant_id}/post_configure/{cloud_account_id}/update_notification_settings": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UpdateNotificationSettingResponse"}}}, "summary": "Update Alert Notification Settings Post On-Boarding", "description": "Updating the notification setting for post onboarding alert configuration except Azure_CSP-Direct and Azure_EA cloud account.", "operationId": "UpdateNotificationSettings", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the cloud account id to update, cloud account id is unique can be obtained from the list cloud account api. This should be same as the ID of the reference APIFor Azure CSP-Direct subscriptions, this can be fetched from list child accounts api."}, {"name": "UpdateNotificationSettingRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateNotificationSettingRequest"}}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}}, "/budget/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/BudgetCreateUpdateResponseModel"}}}, "summary": "Create Budget", "description": "Budget Create", "operationId": "BudgetCreate", "parameters": [{"name": "BudgetCreateUpdateReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BudgetCreateUpdateReqModel"}}], "security": [{"auth_token": []}], "tags": ["Budget V2 Management"]}}, "/budget/dashboard/budget_alert_exceeds_count": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/BudgetAlertsExceedResponseModel"}}}, "summary": "View Count Budget Alert Exceeds Summary", "description": "Budget Alert Exceed Count", "operationId": "BudgetAlertExceedsData", "parameters": [{"name": "BudgetSummaryReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BudgetSummaryReqModel"}}], "security": [{"auth_token": []}], "tags": ["Budget V2 Management"]}}, "/budget/dashboard/budget_summary_count": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/BudgetSummaryResponseModel"}}}, "summary": "View Count Budget Summary", "description": "Budget Summary Count", "operationId": "BudgetSummary", "parameters": [{"name": "BudgetSummaryReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BudgetSummaryReqModel"}}], "security": [{"auth_token": []}], "tags": ["Budget V2 Management"]}}, "/budget/dashboard/list_budgets": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/BudgetListResponseModel"}}}, "summary": "View Budget Dashboard", "description": "List Budget Management", "operationId": "ListBudget", "parameters": [{"name": "BudgetListReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BudgetListReqModel"}}], "security": [{"auth_token": []}], "tags": ["Budget V2 Management"]}}, "/budget/filter_values": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/BudgetListConstraintsResModel"}}}, "summary": "View Create Budget Advanced Filters", "description": "Filter Budget Management", "operationId": "ListBudgetConstraints", "parameters": [{"name": "BudgetListConstraintsReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BudgetListConstraintsReqModel"}}], "security": [{"auth_token": []}], "tags": ["Budget V2 Management"]}}, "/budget/update": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/BudgetCreateUpdateResponseModel"}}}, "summary": "Update Budget", "description": "Budget Update", "operationId": "BudgetUpdate", "parameters": [{"name": "BudgetCreateUpdateReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BudgetCreateUpdateReqModel"}}], "security": [{"auth_token": []}], "tags": ["Budget V2 Management"]}}, "/budget/{tenant_id}/{budget_id}/budget_history": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/BudgetHistoryResModel"}}}, "summary": "List Budget History", "description": "Budget History", "operationId": "BudgetHistory", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID"}, {"name": "budget_id", "in": "path", "required": true, "type": "string", "description": "Specify the budget ID.This is a unique ID and can be retrieved using the create budget"}], "security": [{"auth_token": []}], "tags": ["Budget V2 Management"]}}, "/budget/{tenant_id}/{budget_id}/delete": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/BudgetDeletetResponseModel"}}}, "summary": "Delete Budget", "description": "Delete Budget", "operationId": "Delete Budget", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID and can be retrieved using listTenantAPI"}, {"name": "budget_id", "in": "path", "required": true, "type": "string", "description": "Specify the budget ID.This is a unique ID and can be retrieved using the create budget"}], "security": [{"auth_token": []}], "tags": ["Budget V2 Management"]}}, "/budget/{tenant_id}/{budget_id}/view": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/BudgetViewResModel"}}}, "summary": "List Budget Detail", "description": "View Budget", "operationId": "ViewBudget", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID."}, {"name": "budget_id", "in": "path", "required": true, "type": "string", "description": "Specify the budget ID.This is a unique ID and can be retrieved using the create budget"}], "security": [{"auth_token": []}], "tags": ["Budget V2 Management"]}}, "/compliance/compliance_control_mapping/assessment_summary_by_job": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ComplianceAssessmentHistorySummaryModel"}}}, "summary": "Get compliance assessment summary by assessment job number", "description": "To get the summary of compliance assessment for the given assessment job number.", "operationId": "ComplianceMappingSummary", "parameters": [{"description": "Specify the assessment_job_number.This can be fetched from List Compliance Control Assessment History API.", "required": true, "name": "assessment_job_number", "type": "string", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Compliance"]}}, "/compliance/executive_dashboard/compliance": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/SecurityDashboardComplianceStatus"}}}}, "summary": "Compliance Security Dashboard Summary", "description": "Security Dashboard Compliance", "operationId": "SecurityDashboardByCompliance", "parameters": [{"name": "SecurityDashboardRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SecurityDashboardRequest"}}], "security": [{"auth_token": []}], "tags": ["Compliance"]}}, "/compliance/executive_dashboard/control_health": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/SecurityDashboardComplianceControlHealth"}}}}, "summary": "Compliance Control Health by Control Categories", "description": "Compliance Control Health", "operationId": "ComplianceControlHealth", "parameters": [{"name": "SecurityDashboardRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SecurityDashboardRequest"}}], "security": [{"auth_token": []}], "tags": ["Compliance"]}}, "/compliance/executive_dashboard/risk": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/SecurityDashboardCompliance"}}}}, "summary": "Compliance Risks By Cloud Accounts", "description": "Compliance Risk by Cloud Accounts", "operationId": "ComplianceRiskByCloudAccounts", "parameters": [{"name": "SecurityDashboardRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SecurityDashboardRequest"}}], "security": [{"auth_token": []}], "tags": ["Compliance"]}}, "/compliance/posture_summary/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AssessmentPostureSummaryResponse"}}}, "summary": "Get Compliance assessment posture Summary", "description": "objective is to return the compliance assessment posture summary of all the applicable tenants", "operationId": "ComplianceAssessmentPostureSummaryList", "security": [{"auth_token": []}], "tags": ["Compliance"]}}, "/compliance/{tenant_id}/assessment_history/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AssessmentHistoryResponse"}}}, "summary": "List Compliance Control Assessment History", "description": "objective is to return all of the compliance assessment triggered in the tenant", "operationId": "AssessmentHistoryList", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API. "}, {"description": "Number of records to display", "type": "integer", "enum": ["10", "25", "50", "100"], "name": "limit", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}, {"description": "search assessment", "type": "string", "required": false, "name": "search", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Compliance"]}}, "/compliance/{tenant_id}/compliance_control_mapping/compliance_assessment_summary": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Created", "schema": {"$ref": "#/definitions/ComplianceControlRes"}}}, "summary": "ComplianceControl Mapping Report", "description": "Fetch the compliance control mapping based on cloud account usage", "operationId": "complianceControlMapping", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "ID of the cloud account. This can be fetched from ListCloudAccounts API", "in": "query", "required": true, "name": "service_account_id", "type": "string"}], "security": [{"auth_token": []}], "tags": ["Reports"]}}, "/compliance/{tenant_id}/compliance_control_mapping/get_assessment_job_details": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/PolicyJobExecutionStatusResponseModel"}}}, "summary": "List compliance control mapping, get_assessment_job_details", "description": "objective is to return Policy Job execution status  for given, the tenant,assessment job number, policy id as input", "operationId": "PolicyJobExecutionStatus", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API. "}, {"name": "PolicyJobExecutionStatusRequestModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/PolicyJobExecutionStatusRequestModel"}}], "security": [{"auth_token": []}], "tags": ["Compliance"]}}, "/compliance/{tenant_id}/compliance_control_mapping/get_on_audit_entries": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ComplianceMappingResponseModel"}}}, "summary": "List compliance control mapping, get_on_audit_entries", "description": "objective is to return all of the compliance Mapping get_on_audit_entries given, the tenant,assessment job number as input", "operationId": "ComplianceMapping", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using theList Tenants API. "}, {"description": "Specify the assessment_job_number.This can be fetched from List Compliance Control Assessment History API.", "required": true, "name": "assessment_job_number", "type": "string", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Compliance"]}}, "/compliance/{tenant_id}/compliance_standards/{cloud_account_id}/get_configurations": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ComplianceConfigurationsResponseModel"}}}, "summary": "List Compliance Configurations", "description": "Objective is to return all of the Compliance configurations given, the tenant as input", "operationId": "ComplianceConfigurations", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API. "}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "ID of the cloud account. This can be fetched from ListCloudAccounts API"}], "security": [{"auth_token": []}], "tags": ["Compliance"]}}, "/compliance/{tenant_id}/control_mapping/on_demand_execute_control": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ComplianceControlResponseModel"}}}, "summary": "Compliance On Demand Control_execute", "description": "Compliance On Demand Control_execute", "operationId": "ComplianceOnDemandControl", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "ComplianceControlReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ComplianceControlReqModel"}}], "security": [{"auth_token": []}], "tags": ["Compliance"]}}, "/compliance/{tenant_id}/control_mapping/on_demand_execute_standard": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ComplianceStandardResponseModel"}}}, "summary": "Compliance On Demand Standard_execute", "description": "Compliance On Demand Standard_execute", "operationId": "ComplianceOnDemandStandard", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "ComplianceStandardReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ComplianceStandardReqModel"}}], "security": [{"auth_token": []}], "tags": ["Compliance"]}}, "/compliance/{tenant_id}/controls/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ControlsListResponse"}}}, "summary": "List Compliance Controls", "description": "Objective is to return all of the compliance controls given, the tenant and compliance standard as input", "operationId": "ListControls", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API. "}, {"description": "Number of records to display", "type": "integer", "required": true, "name": "limit", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}, {"description": "uri of compliance standard, This can be fetched from the compliance standards list API call.", "type": "string", "required": true, "name": "compliance_uri", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Compliance"]}}, "/compliance/{tenant_id}/mapping/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ControlsListMappingResponse"}}}, "summary": "List Compliance Control Mappings", "description": "objective is to return all of the compliance control mappings given, the tenant and compliance standard as input", "operationId": "ListControlMappings", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API. "}, {"description": "Number of records to display", "type": "integer", "name": "limit", "in": "query"}, {"default": "control", "description": "type of data requested", "type": "string", "name": "caller", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}, {"description": "uri of compliance standard This can be fetched from the compliance standards list API call.", "type": "string", "name": "compliance_uri", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Compliance"]}}, "/compliance/{tenant_id}/standards": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ComplianceStandardsResponseModel"}}}, "summary": "List Compliance Standards", "description": "Objective is to return all of the compliance standards given, the tenant as input", "operationId": "ListStandards", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API. "}, {"description": "Select the Type of Compliance Standard", "type": "string", "enum": ["marketplace", "my_standard"], "required": true, "name": "type", "in": "query"}, {"description": "Select a Valid Service Type", "type": "string", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP"], "name": "valid_service_type", "in": "query"}, {"description": "Select the scope of Compliance Standard", "type": "string", "enum": ["account", "tenant"], "name": "scope", "in": "query"}, {"description": "true/false flag to fetch framework standards", "type": "boolean", "name": "framework", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Compliance"]}}, "/compliance/{tenant_id}/visibility": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ComplianceVisibilityResponseModel"}}}, "summary": "List Compliance Visibility", "description": "objective is to return all of the compliance visibility given, the tenant as input", "operationId": "ComplianceVisibility", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API. "}, {"description": "ID of the cloud account. This can be fetched from ListCloudAccounts API", "name": "cloud_account_id", "type": "string", "in": "query"}, {"description": "Select a Valid Compliance Type", "type": "string", "enum": ["service", "standard"], "name": "compliance_type", "in": "query"}, {"description": "Specify the service resource type,this can be fetched from the corestack", "name": "service_resource_type", "type": "string", "in": "query"}, {"description": "uri of compliance standard, This can be fetched from the compliance standards list API call.", "type": "string", "name": "compliance_uri", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Compliance"]}}, "/compliance_posture/detail_for_policy/{policy_id}": {"parameters": [{"name": "policy_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ComplianceDetailsForPoliciesResponseModel"}}}, "summary": "List Compliance posture DetailsForPolicies", "description": "Objective is to return all of the compliance posture DetailsForPolicies", "operationId": "DetailsForPolicies", "parameters": [{"name": "ComplianceDetailsForPoliciesReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ComplianceDetailsForPoliciesReqModel"}}, {"description": "status of resource to filter", "type": "string", "name": "status", "in": "query"}, {"description": "Allowed values:resource_type, resource_name, resource_id", "type": "string", "name": "search", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}, {"description": "Number of records to display", "type": "integer", "name": "limit", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Compliance"]}}, "/compliance_posture/filters": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ComplianceFilterResponseModel"}}}, "summary": "List Compliance Filter", "description": "objective is to return all of the compliance Filter given, the tenant as input", "operationId": "ListFilter", "parameters": [{"description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API.", "type": "string", "name": "tenant_id", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Compliance"]}}, "/compliance_posture/filters/by_policy": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ComplianceFilterResModel"}}}, "summary": "List Compliance Filter For Heatstack", "description": "Objective is to return all of the compliance Filter given, the tenant as input", "operationId": "CompliancePostureFilter", "parameters": [{"description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API.", "type": "string", "name": "tenant_id", "in": "query"}, {"description": "true/false flag to get policies filter as well", "type": "boolean", "enum": ["true", "false"], "name": "policy_filters", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Compliance"]}}, "/compliance_posture/policy_filters": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ComplianceFilterPolicyResModel"}}}, "summary": "List Compliance Filter_Policy", "description": "Objective is to return all of the compliance Filter Policy given, the tenant as input", "operationId": "CompliancePostureFilterPolicy", "parameters": [{"description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API.", "type": "string", "required": true, "name": "tenant_id", "in": "query"}, {"description": "compliance standards to filter policies", "type": "string", "name": "standards", "in": "query"}, {"description": "severity filter", "type": "string", "name": "severity", "in": "query"}, {"description": "matches policy name, display_name, engine_type, severity, services, resource_type and service_resource ", "type": "string", "name": "search", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}, {"description": "Number of records to display", "type": "integer", "name": "limit", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Compliance"]}}, "/compliance_posture/summary_by_accounts": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ComplianceSummaryResponseModel"}}}, "summary": "List compliance_posture summary_by_accounts", "description": "objective is to return all of the compliance summary_by_accounts", "operationId": "ComplianceSummaryByAccounts", "parameters": [{"name": "ComplianceSummaryReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ComplianceSummaryReqModel"}}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}, {"description": "Number of records to display", "type": "integer", "enum": ["10", "25", "50", "100"], "name": "limit", "in": "query"}, {"description": "Allowed values:account,standard,service", "type": "string", "name": "search", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Compliance"]}}, "/compliance_posture/summary_by_policies": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ComplianceSummaryByPoliciesResponseModel"}}}, "summary": "List Compliance posture SummaryByPolicies", "description": "Objective is to return all of the compliance posture SummaryByPolicies", "operationId": "SummaryByPolicies", "parameters": [{"name": "ComplianceSummaryByPoliciesReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ComplianceSummaryByPoliciesReqModel"}}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}, {"description": "Number of records to display", "type": "integer", "name": "limit", "in": "query"}, {"description": "Allowed values:account,standard,service", "type": "string", "name": "search", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Compliance"]}}, "/cost/cost_savings/accounts": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/BillingAccountSummaryResponse"}}}, "summary": "List Cost Savings Account Summary", "description": "list account summary", "operationId": "ListAccountSummary", "parameters": [{"name": "BillingAccountSummaryRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BillingAccountSummaryRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/cost_savings/accounts/visibility/{tenant_id}": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListRecommendationsResponse"}}}, "summary": "List Cost Saving Recommendation", "description": "list recommendation", "operationId": "CostSavingListRecommendation", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "ListRecommendationsRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ListRecommendationsRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/cost_savings/accounts/visibility/{tenant_id}/recommendations/{recommendation_id}/view": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListRecommendationsViewResponse"}}}, "summary": "View Cost Saving Recommendation", "description": "view recommendation", "operationId": "CostSavingViewRecommendation", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "recommendation_id", "in": "path", "required": true, "type": "string", "description": "Recommendation Id.Can be fetched from '/cost/cost_savings/accounts/visibility/{tenant_id}' or '/cost/cost_savings/tenants/visibility/{tenant_id}' api"}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/cost_savings/cost_saved_recommendation": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CostSavingsRecommendationsResponse"}}}, "summary": "List Cost Saving Recommendations", "description": "view cost saving recommendation", "operationId": "ListCostSavingRecommendations", "parameters": [{"description": "Currency to fetch the data", "type": "string", "in": "query", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency", "required": false, "name": "currency"}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/cost_savings/tenants": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/BillingTenantSummaryResponse"}}}, "summary": "List Cost Savings Tenant Summary", "description": "list tenant summary", "operationId": "ListTenantSummary", "parameters": [{"name": "BillingAccountSummaryRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BillingAccountSummaryRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/cost_savings/tenants/visibility/{tenant_id}": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListRecommendationsTenantResponse"}}}, "summary": "List Cost Saving Recommendation by Tenant", "description": "list recommendation tenant", "operationId": "CostSavingListRecommendationTenant", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "ListRecommendationsTenantRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ListRecommendationsTenantRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/cost_savings/{tenant_id}/resolve_recommendation/{recommendation_id}": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ResolveRecommendationsResponse"}}}, "summary": "Resolve Cost Savings Recommendations", "description": "Resolve cost savings recommendation", "operationId": "ResolveCostSavingsRecommendation", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "recommendation_id", "in": "path", "required": true, "type": "string", "description": "Recommendation Id.Can be fetched from '/cost/cost_savings/accounts/visibility/{tenant_id}' or '/cost/cost_savings/tenants/visibility/{tenant_id}' api"}, {"name": "ResolveRecommendationsRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ResolveRecommendationsRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/costoptimizer/optimizerate/license_benefit/hub_discounts": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/LicenseBenefitHubDiscountsResponse"}}}, "summary": "License Benefit Hub Discounts", "description": "License Benefit", "operationId": "LicenseBenefitHubDiscounts", "parameters": [{"name": "LicenseBenefitHubDiscountsRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/LicenseBenefitHubDiscountsRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/costoptimizer/optimizerate/license_benefit/saving_summary": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/LicenseBenefitSavingResponse"}}}, "summary": "License Benefit Cost Savings Summary", "description": "License Benefit", "operationId": "LicenseBenefitSavingSummary", "parameters": [{"name": "LicenseBenefitSavingRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/LicenseBenefitSavingRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/costoptimizer/optimizeusage/tenant": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CostOptimizationTenResponse"}}}, "summary": "Tenant Details", "description": "Under cost optimization Tenant ID and Tenant details", "operationId": "TenantDetails", "parameters": [{"description": "select the request type", "type": "string", "in": "query", "enum": ["right_size", "orphaned", "idle", "config"], "required": true, "name": "request_type"}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/costoptimizer/optimizeusage/{tenant_id}/cloud_account_summary": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CostOptimizationCloudAccountSummaryResponse"}}}, "summary": "Overall Cloud Account Summary", "description": "cost optimization overall cloud account summary", "operationId": "costOptimizationCloudAccountSummary", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "CostOptimizationCloudAccountSummaryRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostOptimizationCloudAccountSummaryRequest"}}, {"description": "select the request type", "type": "string", "in": "query", "enum": ["right_size", "orphaned", "idle", "config"], "required": true, "name": "request_type"}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/costoptimizer/optimizeusage/{tenant_id}/cloud_account_type": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CostOptimizationCloudAccTypeResponse"}}}, "summary": "Cloud Account Details", "description": "fetch cloud account details", "operationId": "CostOptimizationCloudAccountType", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "CostOptimizationCloudAccountTypeRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostOptimizationCloudAccountTypeRequest"}}, {"description": "select the request type", "type": "string", "in": "query", "enum": ["right_size", "orphaned", "idle", "config"], "required": true, "name": "request_type"}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/costoptimizer/optimizeusage/{tenant_id}/cloud_accounts": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CloudAccounts"}}}, "summary": "View Cloud Account_ID and Cloud Account Name", "description": "fetch cloud account_id and cloud account name", "operationId": "CostOptimizationCloudAccounts", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "select mode of currency", "type": "string", "in": "query", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency", "required": true, "name": "currency"}, {"description": "select cloud account type", "type": "string", "in": "query", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI"], "x-cs-enum-type": "CloudServiceName", "default": "AWS", "required": true, "name": "service_name"}, {"description": "select the request type", "type": "string", "in": "query", "enum": ["right_size", "orphaned", "idle", "config"], "required": true, "name": "request_type"}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/costoptimizer/optimizeusage/{tenant_id}/filter": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/FilterServices"}}}, "summary": "View Tenant Wise Currency's Or Cloud Account Type", "description": "view tenant wise currency or cloud account type", "operationId": "TenantServicesFilter", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "view cloud account type", "type": "string", "in": "query", "enum": ["true", "false"], "required": false, "name": "services"}, {"description": "view currency", "type": "string", "in": "query", "enum": ["true", "false"], "required": false, "name": "currency"}, {"description": "select the cloud type", "type": "string", "in": "query", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI"], "x-cs-enum-type": "CloudServiceName", "default": "AWS", "required": false, "name": "service_name"}, {"description": "select the request type", "type": "string", "in": "query", "enum": ["right_size", "orphaned", "idle", "config"], "required": true, "name": "request_type"}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/costoptimizer/optimizeusage/{tenant_id}/summary": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/OptimizationSummary"}}}, "summary": "Tenant Wise Cost Summary", "description": "under cost optimization tenant wise summary", "operationId": "TenantCostSummary", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "select the cloud account type", "type": "string", "in": "query", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI"], "x-cs-enum-type": "CloudServiceName", "default": "AWS", "required": false, "name": "service_name"}, {"description": "select the mode of currency", "type": "string", "in": "query", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency", "required": true, "name": "currency"}, {"description": "select the request type", "type": "string", "in": "query", "enum": ["right_size", "orphaned", "idle", "config"], "required": true, "name": "request_type"}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/costoptimizer/optimizeusage/{tenant_id}/top_recommendations": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/TopRecommendations"}}}, "summary": "View Resource Wise Cost Details Under Cloud Account ID", "description": "Fetch Cost Optimization Top Recommendation as per resource IDs", "operationId": "CostOptimizationTopRecommendations", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "provide recommendation_id", "name": "recommendation_id", "type": "string", "in": "query"}, {"description": "provide resource_id", "name": "resource_id", "type": "string", "in": "query"}, {"description": "provide cloud_account_id", "name": "cloud_account_id", "type": "string", "in": "query"}, {"description": "provide resource_type", "name": "resource_type", "type": "string", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/costoptimizer/optimizeusage/{tenant_id}/view_recommendations": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CostOptimizationViewRecommendationResponse"}}}, "summary": "Resource Wise Recommendation(Savings) Data", "description": "Cost Optimization Resource wise Recommendation(saving) data", "operationId": "CostOptimizationViewRecommendations", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "CostOptimizationViewRecommendationRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostOptimizationViewRecommendationRequest"}}, {"description": "resource status", "type": "string", "in": "query", "enum": ["open", "close"], "required": false, "name": "resource_status"}, {"description": "select the request type", "type": "string", "in": "query", "enum": ["right_size", "orphaned", "idle", "config"], "required": true, "name": "request_type"}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/executive_dashboard/budget_drift": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/BudgetDriftResponse"}}}}, "summary": "Get Actual or Forecast Budget Drift", "description": "View Current or Forecast budget drift.", "operationId": "BudgetDrift", "parameters": [{"name": "BudgetDriftRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BudgetDriftRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/executive_dashboard/cloud_forecaster_for_six_months": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/CloudForecasterForSixMonthsResponse"}}}}, "summary": "Get cloud Forecaster for six months", "description": "View Cloud Forecaster for six Months.", "operationId": "CloudForecasterForSixMonths", "parameters": [{"name": "CloudForecasterForSixMonthsRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CloudForecasterForSixMonthsRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/executive_dashboard/cost_anomalies_by_cloud": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/CostAnomalyByCloudResponse"}}}}, "summary": "Get Cost Spend By Cloud and Resource Category", "description": "View Cost Anomalies By Cloud.", "operationId": "CostAnomaliesByCloud", "parameters": [{"name": "CostAnomalyByCloudRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostAnomalyByCloudRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/executive_dashboard/cost_optimization_by_optimization_types": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/CostOptimizationByOptimizationTypesResponse"}}}}, "summary": "cost optimization by optimization type", "description": "View Cost Optimization By Optimization Types.", "operationId": "CostOptimizationByOptimizationTypes", "parameters": [{"name": "CostOptimizationByOptimizationTypesRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostOptimizationByOptimizationTypesRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/executive_dashboard/cost_optimization_trend": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/CostOptimizationTrendResponse"}}}}, "summary": "Get cost optimization trend", "description": "View cost optimization trend.", "operationId": "GetCostOptimizationTrend", "parameters": [{"name": "CostOptimizationTrendRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostOptimizationTrendRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/executive_dashboard/cost_trend_by_cloud": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/CostTrendByCloudResponse"}}}}, "summary": "Get Cost Trend By Cloud", "description": "View Cost Trend By Cloud.", "operationId": "CostTrendByCloud", "parameters": [{"name": "CostTrendByCloudRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostTrendByCloudRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/executive_dashboard/geo_coordinates_for_regions": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/GeoCoordinatesForRegionResponse"}}}}, "summary": "geo coordinates for regions", "description": "View Geo Coordinates For Regions.", "operationId": "GeoCoordinatesForRegions", "parameters": [{"name": "GeoCoordinatesForRegionRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/GeoCoordinatesForRegionRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/executive_dashboard/spend-by-billing-type": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/CostSpendByBillingTypeResponse"}}}}, "summary": "Get Cost Spend By Billing Type", "description": "View Cost Spend By Billing Type.", "operationId": "CostSpendByBillingType", "parameters": [{"name": "CostSpendByBillingTypeRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostSpendByBillingTypeRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/executive_dashboard/spend-by-cloud": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/CostSpendByCloudResponse"}}}}, "summary": "Get Cost Spend By Cloud", "description": "View Cost Spend By Cloud.", "operationId": "CostSpendByCloud", "parameters": [{"name": "CostSpendByCloudRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostSpendByCloudRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/executive_dashboard/spend-by-cloud-account": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/CostSpendByCloudAccountResponse"}}}}, "summary": "Get Cost Spend By Cloud Account", "description": "View Cost Spend By Cloud Account.", "operationId": "CostSpendByCloudAccount", "parameters": [{"name": "CostSpendByCloudAccountRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostSpendByCloudAccountRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/executive_dashboard/spend_by_cloud_resource_category": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/CostSpendByCloudResourceCategoryResponse"}}}}, "summary": "Get Cost Spend By Cloud and Resource Category", "description": "View Cost Spend By Cloud and Resource Category.", "operationId": "CostSpendByCloudResourceCategory", "parameters": [{"name": "CostSpendByCloudResourceCategoryRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostSpendByCloudResourceCategoryRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/executive_dashboard/spend_by_cloud_tenant": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/CostSpendByCloudTenantResponse"}}}}, "summary": "Get Cost Spend By Cloud and Tenant", "description": "View Cost Spend By Cloud and Tenant.", "operationId": "CostSpendByCloudTenant", "parameters": [{"name": "CostSpendByCloudTenantRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostSpendByCloudTenantRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/executive_dashboard/spend_by_region": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/CostSpendByRegionResponse"}}}}, "summary": "Get Cost Spend By Region", "description": "View Cost Spend by Region.", "operationId": "CostSpendByRegion", "parameters": [{"name": "CostSpendByRegionRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostSpendByRegionRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/executive_dashboard/tagged_and_untagged_resources": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/TaggedUntaggedResourcesByProductCategoryResponse"}}}}, "summary": "Get Tagged and Untagged Resources Cost By Product Category", "description": "View Tagged and Untagged Resources By Product Category.", "operationId": "TaggedUntaggedResources", "parameters": [{"name": "TaggedUntaggedResourcesByProductCategoryRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/TaggedUntaggedResourcesByProductCategoryRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/executive_dashboard/tagged_and_untagged_spend_by_cloud": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/TaggedAndUntaggedSpentByCloudResponse"}}}}, "summary": "Get Tagged and Untagged Spend Cloud Wise", "description": "View Tag And Untag Spend By Cloud, Tenant, ProductCategory, or Region", "operationId": "TagAndUntagSpentCloudWise", "parameters": [{"name": "TaggedAndUntaggedResourceByCloudRequestModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/TaggedAndUntaggedResourceByCloudRequestModel"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/executive_dashboard/tagged_untagged_trend_cost_trend": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/TaggedAndUntaggedTrendByCloudResponse"}}}}, "summary": "Get Tag And Untag Cloudwise Trend", "description": "View Tag And Untag Cloud Wise Trend.", "operationId": "TagUntagCloudTrend", "parameters": [{"name": "TaggedAndUntaggedCostTrendRequestModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/TaggedAndUntaggedCostTrendRequestModel"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/executive_dashboard/top_budgets": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/TopBudgetByTenantResponse"}}}}, "summary": "Get Top Budget By Tenant", "description": "View Top Budget By Tenant.", "operationId": "TopBudgetByTenant", "parameters": [{"name": "TopBudgetByTenantRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/TopBudgetByTenantRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/markups_and_discounts/{tenant_id}/create": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CreateMarkupResponse"}}}, "summary": "Create Cost Markup Rule", "description": "create Markup rule", "operationId": "CreateMarkupRule", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "CreateMarkupRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateMarkupRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/markups_and_discounts/{tenant_id}/delete": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/DeleteMarkupResponse"}}}, "summary": "Delete Cost Markup Rule", "description": "delete Markup rule", "operationId": "DeleteMarkupRule", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Specify the rule name to be deleted", "type": "string", "in": "query", "required": true, "name": "rule_name"}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/markups_and_discounts/{tenant_id}/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/MarkupDetails"}}}}, "summary": "List Cost Markup Rules", "description": "list Markup rules", "operationId": "ListMarkupRules", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Specify the action to fetch markup data", "type": "string", "in": "query", "enum": ["list_configured_rules"], "required": true, "name": "action"}, {"description": "Specify the scope to fetch markup data", "type": "string", "in": "query", "enum": ["tenant", "cloud_account"], "name": "scope"}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/markups_and_discounts/{tenant_id}/update": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UpdateMarkupResponse"}}}, "summary": "Update Cost Markup Rule", "description": "update Markup rule", "operationId": "UpdateMarkupRule", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "UpdateMarkupRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateMarkupRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/posture/account_or_tenant/visibility/cloud_usage_summary": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListBarChartResponse"}}}, "summary": "List Visibility Summary by Cloud Account Usage", "description": "view cost trends by date", "operationId": "ListVisibilitySummaryCloudAccountUsage", "parameters": [{"name": "ListIdentifierWiseRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ListIdentifierWiseRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/posture/account_or_tenant/visibility/identifier_wise_cost": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListPieChartResponse"}}}, "summary": "List Visibility Summary by Identifier", "description": "view cost visibility summary data identifier wise", "operationId": "ListVisibilitySummaryIdentifierWise", "parameters": [{"name": "ListIdentifierWiseRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ListIdentifierWiseRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/posture/accounts": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Unknown Path", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CostSummaryResponseAccountForCurrentAndLast3Months"}}}, "summary": "List Dashboard Summary by Account", "description": "view cost summary dashboard account wise, EA wise and CSP wise for current month or yyyy-mm", "operationId": "ListDashboardSummaryAccount", "parameters": [{"name": "CostSummaryReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostSummaryReqModel"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/posture/cost_filter": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CostPostureFilterResponse"}}}, "summary": "Cost Posture Filter", "description": "view cost cost filter", "operationId": "CostPostureFilter", "parameters": [{"name": "CostPostureFilterReq", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostPostureFilterReq"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/posture/dashboard_summary": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Unknown Path", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CostDashboardSummaryResponse"}}}, "summary": "List Dashboard Summary by Account, Tenant, Service type", "description": "view cost summary dashboard", "operationId": "ListDashboardSummary", "parameters": [{"name": "CostDashboardSummaryRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostDashboardSummaryRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/posture/ea_view_or_csp_view": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CostSummaryIdentifierEAOrCSPResponse"}}}, "summary": "List Dashboard by Identifier", "description": "view cost dashboard for enterprise agreement account and csp account", "operationId": "ListDashboardIdentifierWise", "parameters": [{"name": "CostSummaryEAOrCSPReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostSummaryEAOrCSPReqModel"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/posture/ea_view_or_csp_view/visibility": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CostVisibilityEaOrCspViewResponse"}}}, "summary": "List Dashboard by EA or CSP View For Visibility", "description": "view cost visibility dashboard for enterprise agreement account and csp account", "operationId": "ListDashboardEaOrCspViewForVisibility", "parameters": [{"name": "CostSummaryEAOrCSPVisibilityReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostSummaryEAOrCSPVisibilityReqModel"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/posture/service_type": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CostSummaryDataResponseServiceType"}}}, "summary": "List Dashboard Summary by Cloud", "description": "view cost summary dashboard cloud wise", "operationId": "ListDashboardSummaryCloud", "parameters": [{"name": "CostSummaryDataReqServiceType", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostSummaryDataReqServiceType"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/posture/tenants": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Unknown Path", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CostSummaryDataResponseTenantForCurrentAndLast3Months"}}}, "summary": "List Dashboard Summary by Tenant", "description": "view cost summary dashboard tenant wise for current month, previous month or last 3 months", "operationId": "ListDashboardSummaryTenant", "parameters": [{"name": "CostSummaryReqModelTenant", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostSummaryReqModelTenant"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/posture/{tenant_id}/get_cost_hierarchy": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerTotalCostResponse"}}}, "summary": "Get Cost Hierarchy", "description": "View cost Hierarchy dashboard", "operationId": "CostHierarchy", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Currency to fetch the data", "type": "string", "in": "query", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency", "required": true, "name": "currency"}, {"description": "cloud service name", "type": "string", "in": "query", "enum": ["Azure_CSP-Direct", "AWS"], "required": true, "name": "service"}, {"description": "specify the service account id to fetch data", "type": "string", "required": true, "name": "service_account_id", "in": "query"}, {"description": "Date Filter to select", "type": "string", "in": "query", "enum": ["current_month", "current_month_minus_1", "current_month_minus_2", "current_month_minus_3", "current_month_minus_4", "current_month_minus_5", "current_month_minus_6", "current_month_minus_7", "current_month_minus_8", "current_month_minus_9", "current_month_minus_10", "current_month_minus_11", "current_month_minus_12"], "x-cs-enum-type": "DashboardDateFilter", "required": true, "name": "date_filter"}, {"description": "billing frequency is applicable only for last 3 months", "type": "string", "enum": ["True", "False"], "required": true, "name": "by_billing_freq", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/ri/recommendation": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListRIRecommendationsResponse"}}}, "summary": "List Recommendations", "description": "View RI Recommendations Reservations", "operationId": "RIRecommendationsReservations", "parameters": [{"name": "ListRIRecommendationsRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ListRIRecommendationsRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/ri/utilization/reservations": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListReservationsResponse"}}}, "summary": "List Cost Reservations & Utilization", "description": "list reservation utilization", "operationId": "ListReservationsUtilization", "parameters": [{"description": "specify the date filter for which to fetch the data", "type": "string", "in": "query", "enum": ["current_month", "last_3_months"], "x-cs-enum-type": "DateFilter", "required": true, "name": "date_filter"}, {"description": "Currency to fetch the data", "type": "string", "in": "query", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency", "required": true, "name": "currency"}, {"description": "cloud service name", "type": "string", "in": "query", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI"], "x-cs-enum-type": "CloudServiceName", "default": "AWS", "required": false, "name": "service"}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/ri/utilization/{cloud_account_id}/reservations/{reservation_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListReservationsServiceAccountResponse"}}}, "summary": "List Cost Reservations & Utilization by Cloud Account", "description": "list reservation utilization cloud account wise", "operationId": "ListReservationsUtilizationCloudAccount", "parameters": [{"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the Cloud Account ID. This can be fetched from List CloudAccounts API call."}, {"name": "reservation_id", "in": "path", "required": true, "type": "string", "description": "Specify the Reservation ID for the Cloud Account. This can be fetched from List Cost Reservations & Utilizations API call."}, {"description": "specify the date filter for which to fetch the data", "type": "string", "in": "query", "enum": ["current_month", "previous_month", "last_3_months"], "x-cs-enum-type": "DateFilter", "required": true, "name": "date_filter"}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/schedule_recommendation/dashboard/summary": {"post": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/CostOptimizationScheduleRecommendationResponse"}}}, "summary": "List Schedule Recommendation Account Dashboard Summary", "description": "Schedule Dashboard Summary", "operationId": "ScheduleDashboardSummary", "parameters": [{"name": "ScheduleDashboardSummaryRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ScheduleDashboardSummaryRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/schedule_recommendation/resource/{tenant_id}/recommendation_summary": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CostOptimizationScheduleRecommendationResponse"}}}, "summary": "List Schedule Recommendation Resource Dashboard Summary", "description": "Schedule Dashboard Resource Summary", "operationId": "ScheduleDashboardResourceSummary", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API. "}, {"description": "Cloud service name", "type": "string", "in": "query", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI"], "x-cs-enum-type": "CloudServiceName", "default": "AWS", "required": true, "name": "service_name"}, {"description": "Currency to fetch the data", "type": "string", "in": "query", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency", "required": true, "name": "currency"}, {"description": "Specify the Cloud Account ID. This can be fetched from List CloudAccounts API call. ", "required": true, "name": "cloud_account_id", "type": "string", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/service/filters": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CostServiceFilterResponseModel"}}}, "summary": "List Service Filters", "description": "Cost Service Filters", "operationId": "CostServiceFilters", "parameters": [{"name": "CostServiceFilterRequestModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostServiceFilterRequestModel"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/cost/trend_analysis/tag": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Created", "schema": {"$ref": "#/definitions/CostTagReportRes"}}}, "summary": "CostTag Report", "description": "Fetch the cost tag report based on cloud account usage", "operationId": "CreateCostTagReports", "parameters": [{"name": "CostTagReportReq", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostTagReportReq"}}], "security": [{"auth_token": []}], "tags": ["Reports"]}}, "/cost/trend_analysis/trend": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Created", "schema": {"$ref": "#/definitions/CostTrendReportRes"}}}, "summary": "Cost Trend Report", "description": "Fetch the cost trend report based on cloud account usage", "operationId": "CostTrendReports", "parameters": [{"name": "CostTrendReportReq", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostTrendReportReq"}}], "security": [{"auth_token": []}], "tags": ["Reports"]}}, "/cost_anomaly/billing_cost_anomaly": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CostAnomalySummaryResponse"}}}, "summary": "Get Account wise daily Billing Cost Anomaly", "description": "View Billing Cost Anomaly Data.", "operationId": "CostAnomalySummary", "parameters": [{"name": "CostAnomalySummaryRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostAnomalySummaryRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost Anomaly"]}}, "/cost_anomaly/rule_based_cost_anomaly": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CostAnomalyRuleSummaryResponse"}}}, "summary": "Get Account wise daily Rule Cost Anomaly", "description": "View Rule Based Cost Anomaly Data.", "operationId": "CostAnomalyRuleSummary", "parameters": [{"name": "CostAnomalySummaryRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostAnomalySummaryRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost Anomaly"]}}, "/governance/account/cloud_accounts": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CloudAccountListResponse"}}}, "summary": "List Cloud Accounts", "description": "List all cloud accounts for a given tenant,cloud name.", "operationId": "CloudAccountsList", "parameters": [{"name": "CloudAccountListRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CloudAccountListRequest"}}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}}, "/governance/account/monitoring": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/MetricUpdateResponseModel"}}}, "summary": "Update Frequency of Metric Data Collection", "description": "Updates the frequency of metric data collection.", "operationId": "UpdateMetricSyncFrequency", "parameters": [{"name": "MetricUpdateRequestModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/MetricUpdateRequestModel"}}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}}, "/governance/account/settings/access/post/{tenant_id}": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Created", "schema": {"$ref": "#/definitions/AssessmentValidationResponseList"}}}, "summary": "Assessment Validation", "description": "Analyse the access requirements for the given cloud account.", "operationId": "AssessmentValidation", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "AssessmentValidationRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AssessmentValidationRequest"}}], "security": [{"auth_token": []}], "tags": ["Assessment"]}}, "/governance/account/{tenant_id}/cloud_account/{cloud_account_id}/config_validation": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ConfigValidationResponse"}}}, "summary": "Config Validation Details", "description": "Config validation based on the policy engine", "operationId": "CloudAccountConfigValidation", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the cloud account id to update, cloud account id is unique can be obtained from the list cloud account api. This should be same as the ID of the reference APIFor Azure CSP-Direct subscriptions, this can be fetched from list child accounts api."}, {"name": "ConfigValidationRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ConfigValidationRequest"}}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}}, "/governance/account/{tenant_id}/cloud_account/{cloud_account_id}/update_policy_engine": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Updated", "schema": {"type": "boolean"}}}, "summary": "Updating Policy Engine", "description": "Update policy engine for respective cloud accounts", "operationId": "PolicyEngineUpdate", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the cloud account id to update, cloud account id is unique can be obtained from the list cloud account api. This should be same as the ID of the reference APIFor Azure CSP-Direct subscriptions, this can be fetched from list child accounts api."}, {"name": "PolicyEngineUpdateRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/PolicyEngineUpdateRequest"}}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}}, "/governance/account/{tenant_id}/compliance_standards/{cloud_account_id}/get_configurations": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AssessmentComplianceResponse"}}}, "summary": "Assessment Compliance Validation", "description": "Creates a Assessment Validation list for compliance under the tenant.", "operationId": "AssessmentComplianceValidation", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "ID of the cloud account. This can be fetched from ListCloudAccounts API"}], "security": [{"auth_token": []}], "tags": ["Assessment"]}}, "/governance/account/{tenant_id}/create/cloud_accounts": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Success", "schema": {"$ref": "#/definitions/CloudAccountCreateResponse"}}}, "summary": "On-board Cloud Accounts", "description": "On-board cloud accounts by providing the required credentials in order to enable Corestack governance", "operationId": "OnboardCloudAccounts", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "CloudAccountCreateRequestModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CloudAccountCreateRequestModel"}}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}}, "/governance/account/{tenant_id}/create/{cloud_account_id}/assessment_validation_result": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Success", "schema": {"$ref": "#/definitions/AssessmentValidationResponseDataModel"}}}, "summary": "Assessment Validation Details", "description": "Assessment validation for Operations, Cost, Security, Access and Resource.", "operationId": "AssessmentValidationDetails", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the cloud account id to update, cloud account id is unique can be obtained from the list cloud account api. This should be same as the ID of the reference APIFor Azure CSP-Direct subscriptions, this can be fetched from list child accounts api."}, {"name": "AssessmentValidationRequestDataModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AssessmentValidationRequestDataModel"}}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}}, "/governance/account/{tenant_id}/create/{cloud_account_id}/revalidate_assessment": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Success", "schema": {"$ref": "#/definitions/AssessmentReValidationResponseDataModel"}}}, "summary": "Assessment Re-Validation", "description": "Assessment revalidation for Operations, Cost, Security, Access and Resource.", "operationId": "AssessmentReValidation", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the cloud account id to assess a cloud account, cloud account id is unique can be obtained from the list cloud account api. This should be same as the ID of the reference APIFor Azure CSP-Direct subscriptions, this can be fetched from list child accounts api."}, {"name": "AssessmentValidationRequestDataModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AssessmentValidationRequestDataModel"}}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}}, "/governance/account/{tenant_id}/delete/{cloud_account_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CloudAccountDeleteResponse"}}}, "summary": "Delete Cloud Account", "description": "Deletes a specific cloud account. Please note all the configurations, like jobs, templates, schedules will be delete. An attempt will be made to delete the settings made in Native cloud service by the corestack but the credentials has to be correct and the user should have relevant permissions else it will be left unchanged.", "operationId": "DeleteCloudAccount", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the cloud account id to update, cloud account id is unique can be obtained from the list cloud account api. This should be same as the ID of the reference APIFor Azure CSP-Direct subscriptions, this can be fetched from list child accounts api."}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}}, "/governance/account/{tenant_id}/get/cloud_accounts": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CloudAccountListResponse"}}}, "summary": "List Cloud Accounts", "description": "List all cloud accounts for a given tenant.", "operationId": "ListCloudAccounts", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "List cloud accounts based on the cloud provider.", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP"], "name": "service_name", "type": "string", "in": "query"}, {"description": "Type of access enabled for the cloud accounts.(Read refers to Assessment, Write refers to Assessment + Governance)", "enum": ["read", "write"], "name": "access_type", "type": "string", "in": "query"}, {"description": "Status of the cloud accounts.", "enum": ["active", "inactive"], "name": "status", "type": "string", "in": "query"}, {"description": "Type of AWS cloud accounts. Choose one of the below when service_name is chosen as AWS", "enum": ["master_account", "linked_account"], "name": "account_type", "type": "string", "in": "query"}, {"description": "Specify a date like a week ago or a month ago to filter out cloud accounts on-boarded within that specific date. Date format: DD-MM-YYYY", "name": "onboarded_from", "type": "string", "in": "query"}, {"description": "Page number.", "type": "integer", "name": "page", "in": "query"}, {"description": "Number of customers to limit per request.", "type": "integer", "name": "limit", "in": "query"}, {"description": "Search for all the columns displayed in the table", "type": "string", "required": false, "name": "search", "in": "query"}, {"description": "Resource catalog enabled or not", "type": "boolean", "name": "resource_catalog_allowed", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}}, "/governance/account/{tenant_id}/get/list_customers": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CSPCustomerListResponseModel"}}}, "summary": "List Customers", "description": "Lists the customers of one or all CSP accounts onboarded in CoreStack. Customers can also be filtered by CSP account.This is applicable only for Azure_CSP-Direct", "operationId": "ListCustomers", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Specify the cloud account id to update, cloud account id is unique can be obtained from the list cloud account api. This should be same as the ID of the reference APIFor Azure CSP-Direct subscriptions, this can be fetched from list child accounts api.", "name": "cloud_account_id", "type": "string", "in": "query"}, {"description": "Page number.", "type": "integer", "name": "page", "in": "query"}, {"description": "Number of customers to limit per request.", "type": "integer", "name": "limit", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}}, "/governance/account/{tenant_id}/get/{cloud_account_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CloudAccountDescribeResponse"}}}, "summary": "Describe Cloud Account", "description": "Get details of a specific cloud account within a given tenant.", "operationId": "DescribeCloudAccount", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the cloud account id to update, cloud account id is unique can be obtained from the list cloud account api. This should be same as the ID of the reference API"}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}}, "/governance/account/{tenant_id}/get/{cloud_account_id}/assessment_validation_result": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AssessmentResultResponseDataModel"}}}, "summary": "Assessment Results", "description": "Displays the results of assessment with summary and history of the cloud account for OSCAR", "operationId": "AssessmentResults", "security": [{"auth_token": []}], "tags": ["Account Governance"]}, "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string"}]}, "/governance/account/{tenant_id}/get/{cloud_account_id}/list_child_accounts": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ChildCloudAccountsResponseModel"}}}, "summary": "List Child Accounts", "description": "List the accounts linked to a master account in case of AWS or subscriptions under an Azure/EA/CSP account in case of Azure.", "operationId": "ListChildAccounts", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the cloud account id to update, cloud account id is unique can be obtained from the list cloud account api. This should be same as the ID of the reference API"}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}}, "/governance/account/{tenant_id}/monitoring/{cloud_account_id}/get_metric_configuration": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/GetMetricResponseModel"}}}, "summary": "Metric Sync Frequency Summary", "description": "Provides the summary of Metric Sync frequency", "operationId": "GetMetricSyncFrequency", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the cloud account id to update, cloud account id is unique can be obtained from the list cloud account api. This should be same as the ID of the reference APIFor Azure CSP-Direct subscriptions, this can be fetched from list child accounts api."}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}}, "/governance/account/{tenant_id}/status/{cloud_account_id}/{action_name}": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/EnableDisableResponseModel"}}}, "summary": "Enable or Disable Cloud Account", "description": "Enable or disable a specific cloud account.", "operationId": "EnableDisableCloudAccount", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the cloud account id to update, cloud account id is unique can be obtained from the list cloud account API."}, {"name": "action_name", "in": "path", "required": true, "type": "string", "description": "Enable or disable the cloud account", "enum": ["enable", "disable"]}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}}, "/governance/account/{tenant_id}/update/{cloud_account_id}": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CloudAccountUpdateResponse"}}}, "summary": "Update Cloud Account", "description": "UpdateCloudAccount is used to update the already on-boarded cloud account with the necessary changes.", "operationId": "UpdateCloudAccount", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the cloud account id to update, cloud account id is unique can be obtained from the list cloud account api. This should be same as the ID of the reference APIFor Azure CSP-Direct subscriptions, this can be fetched from list child accounts api."}, {"name": "CloudAccountUpdateRequestModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CloudAccountUpdateRequestModel"}}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}}, "/governance/account/{tenant_id}/update/{parent_account_id}/onboard_csp_subscription": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CloudAccountUpdateResponse"}}}, "summary": "On-Boarding CSP Subscription", "description": "Onboards a subscription of a CSP-Direct account.", "operationId": "onboardCspSubscription", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "parent_account_id", "in": "path", "required": true, "type": "string", "description": "ID of the CSP-Direct account available in Corestack."}, {"name": "CSPOnboardSubscriptionRequestModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CSPOnboardSubscriptionRequestModel"}}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}}, "/governance/account/{tenant_id}/validate_summary": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CloudAccountsSummaryResponseModel"}}}, "summary": "Cloud Accounts Summary", "description": "Provides the summary of cloud accounts by cloud service.", "operationId": "CloudAccountsSummary", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}, "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Success", "schema": {"$ref": "#/definitions/ValidateCredentialsResponse"}}}, "summary": "Validate Cloud Account Auth Credentials", "description": "Validate authentication credentials to successfully on-board the cloud account. Response will have the details that needs to be provided during onboarding and it will vary based on cloud.", "operationId": "ValidateCredentials", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "ValidateCredentialsRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ValidateCredentialsRequest"}}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}}, "/governance/account/{tenant_id}/{category}/get/{cloud_account_id}/governance_configuration": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/GovernanceConfigurationResponseDataModel"}}}, "summary": "Governance Configuration", "description": "Displays the results of governance configuration with the required details of the cloud account for OSCAR.", "operationId": "GovernanceConfiguration", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "category", "in": "path", "required": true, "type": "string", "description": "Category for which governance configuration to be displayed", "enum": ["operations", "security"]}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the cloud account id to update, cloud account id is unique can be obtained from the list cloud account api. This should be same as the ID of the reference APIFor Azure CSP-Direct subscriptions, this can be fetched from list child accounts api."}], "security": [{"auth_token": []}], "tags": ["Account Governance"]}}, "/governance/guardrails/policies/{tenant_id}/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CreateScheduleResponse"}}}, "summary": "Create Policy Schedules", "description": "create policy schedules", "operationId": "CreatePolicySchedules", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "UpdateScheduleRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateScheduleRequest"}}], "security": [{"auth_token": []}], "tags": ["Guardrails"]}}, "/governance/guardrails/policies/{tenant_id}/delete/{schedule_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/DeleteScheduleResponse"}}}, "summary": "Delete Policy Schedules", "description": "Delete policy schedules", "operationId": "DeletePolicySchedules", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "schedule_id", "in": "path", "required": true, "type": "string", "description": "Specify the schedule Id to fetch the schedule data"}], "security": [{"auth_token": []}], "tags": ["Guardrails"]}}, "/governance/guardrails/policies/{tenant_id}/get/{schedule_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ViewScheduleResponse"}}}, "summary": "View Policy Schedules", "description": "view policy schedules", "operationId": "ViewPolicySchedules", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "schedule_id", "in": "path", "required": true, "type": "string", "description": "Specify the schedule Id to fetch the schedule data"}], "security": [{"auth_token": []}], "tags": ["Guardrails"]}}, "/governance/guardrails/policies/{tenant_id}/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListScheduleResponse"}}}, "summary": "List Policy Schedules", "description": "list policy schedules", "operationId": "ListPolicySchedules", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}], "security": [{"auth_token": []}], "tags": ["Guardrails"]}}, "/governance/guardrails/policies/{tenant_id}/update/{schedule_id}": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UpdateScheduleResponse"}}}, "summary": "Update Policy Schedules", "description": "update policy schedules", "operationId": "UpdatePolicySchedules", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "schedule_id", "in": "path", "required": true, "type": "string", "description": "Specify the schedule Id to fetch the schedule data"}, {"name": "UpdateScheduleRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateScheduleRequest"}}], "security": [{"auth_token": []}], "tags": ["Guardrails"]}}, "/governance/guardrails/{tenant_id}/policies": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/PolicyListResponse"}}}, "summary": "List Policies", "description": "List all the policies. Global Policies Scope- All user will have access to Corestack Marketplace Policies these policies cannot be updated and deleted can be only describe and executed. Account Scope:- All users under that account will have access to view and execute Only Account admins can update/delete the policies.Tenant Scope - Users with access to the specific tenant will have access to policies who can describe or execute policies. Tenant admins can  only update/delete. Private Scope - User who created will only have access", "operationId": "ListPolicies", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Engine types filter", "in": "query", "type": "string", "enum": ["azure_policy", "aws_config", "chef_inspec", "congress"], "name": "engine_type"}, {"description": "Number of records to display", "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Guardrails"]}, "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Success", "schema": {"$ref": "#/definitions/PolicyData"}}}, "summary": "Create Policy", "description": "Creates a new policy under the tenant which will generate a unique policy id in the response this is can be used to describe details about the policy, update policy, execute or delete policy. However the policy will be accessible based on its scope  Account scope - All users under that account will have access to describe and execute. Only Account admins can update/delete. Tenant - Users with access to the specific tenant will have access scripts to describe and execute. Tenant admins can update/delete. Private - User who created will only have access.", "operationId": "CreatePolicy", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "CreatePolicyRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreatePolicyRequest"}}], "security": [{"auth_token": []}], "tags": ["Guardrails"]}}, "/governance/guardrails/{tenant_id}/policies/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/PolicyDescription"}}}}, "summary": "Batch Policies", "description": "Get a Batch of Policy Details", "operationId": "policies-batch", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "PolicyDescriptionRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/PolicyDescriptionRequest"}}], "security": [{"auth_token": []}], "tags": ["Guardrails"]}}, "/governance/guardrails/{tenant_id}/policies/validate_parameters": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ValidationResults"}}}, "summary": "Validate parameters for a given policy", "description": "Validate a set of parameters for a given policy", "operationId": "policies-validate-parameters", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "PolicyNamedParameterValidationRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/PolicyNamedParameterValidationRequest"}}], "security": [{"auth_token": []}], "tags": ["Guardrails"]}}, "/governance/guardrails/{tenant_id}/policies/{policy_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/PolicyRemovalResponse"}}}, "summary": "Delete Policy", "description": "Delete a policy which is no more required", "operationId": "DeletePolicy", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "policy_id", "in": "path", "required": true, "type": "string", "description": "Specify the policy id to execute, policy id can be obtained from the list policy api"}], "security": [{"auth_token": []}], "tags": ["Guardrails"]}, "get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/PolicyViewResponse"}}}, "summary": "Describe Policy", "description": "Describe the already created Polices", "operationId": "DescribePolicy", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "policy_id", "in": "path", "required": true, "type": "string", "description": "Specify the policy id to execute, policy id can be obtained from the list policy api"}], "security": [{"auth_token": []}], "tags": ["Guardrails"]}, "put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UpdatePolicyRequest"}}}, "summary": "Update Policy", "description": "Update Policy details if required after creation using the api, the update by a user depends on the scope of the policy created check create policy docs for more details on the scope", "operationId": "UpdatePolicy", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "policy_id", "in": "path", "required": true, "type": "string", "description": "Specify the policy id to execute, policy id can be obtained from the list policy api"}, {"name": "UpdatePolicyRequestModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdatePolicyRequestModel"}}], "security": [{"auth_token": []}], "tags": ["Guardrails"]}}, "/governance/guardrails/{tenant_id}/policies/{policy_id}/execute": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/PolicyExecuteResponseModel"}}}, "summary": "Execute Policy", "description": "Execute policy will return a unique job id the status of the policy can be checked using the Job details api where you can pass the unique id generated to get the details or errors if any on execution", "operationId": "ExecutePolicy", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "policy_id", "in": "path", "required": true, "type": "string", "description": "Specify the policy id to execute, policy id can be obtained from the list policy api"}, {"name": "PolicyExecuteRequestModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/PolicyExecuteRequestModel"}}], "security": [{"auth_token": []}], "tags": ["Guardrails"]}}, "/governance/guardrails/{tenant_id}/policy_jobs/{job_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/JobExecutionDetailsResponseModel"}}}, "summary": "Describe Policy Job Details", "description": "Retrieve policy job details using the unique job id, this can be used to check the status of the policy execution or any failure\n:param tenant_id:\n:param job_id:\n:return:", "operationId": "JobDetails", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "job_id", "in": "path", "required": true, "type": "string", "description": "Specify the job id to retrieve details of policy execution, job id is unique can be obtained from the execute policy response"}], "security": [{"auth_token": []}], "tags": ["Guardrails"]}}, "/governance/guardrails/{tenant_id}/recommendations": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/PolicyRecommendationResponseModelList"}}}, "summary": "List Policy Recommendations", "description": "Policy recommendations are the guide line to the users to solve a policy violation by executing the recommendations the this can be a instruction or a combination of multipleinstructions defined to solve a problem", "operationId": "PolicyRecommendations", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Specify the policy id for the recommendations which is a unique id can be obtained from policy listing api", "required": true, "name": "policy_id", "type": "string", "in": "query"}, {"description": "Specify the cloud account id  for the recommendation which is a unique id can be retrieved from the cloud listing api", "name": "cloud_account_id", "type": "string", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Guardrails"]}}, "/governance/guardrails/{tenant_id}/recommendations/{recommendation_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/PolicyRecommendationViewResponseModel"}}}, "summary": "Describe Policy Recommendations", "description": "This is the api to view the recommendation associated with the policy and the resources which will get effected on execution of the recommendations. We can also get a idea on the actions which can be performed", "operationId": "DescribePolicyRecommendations", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "recommendation_id", "in": "path", "required": true, "type": "string", "description": "This is a unique identifier for recommendation, can be obtained from the PolicyRecommendations api response"}], "security": [{"auth_token": []}], "tags": ["Guardrails"]}, "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ExecuteRecommendationResponseModel"}}}, "summary": "Execute Policy Recommendation", "description": "This is the api to execute recommendations for a policy violation, The recommended steps to resolve the violations can be executed with the help of data like action_name, resource_recommendation_id, will be available in Recommendation View API. The Recommendations can be executed with dynamic parameter which may or may not be passed in the input", "operationId": "ExecuteRecommendation", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "recommendation_id", "in": "path", "required": true, "type": "string", "description": "This is a unique identifier for recommendation, can be obtained from the PolicyRecommendations api response"}, {"name": "ExecuteRecommendationRequestModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ExecuteRecommendationRequestModel"}}], "security": [{"auth_token": []}], "tags": ["Guardrails"]}}, "/operation/automation/scripts/{tenant_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ScriptListResponse"}}}, "summary": "List Scripts", "description": "List all the scripts. Global Scripts - All user will have access to Corestack's Marketplace Scripts (Can view and execute). Account - All users under that account will have access (Can view and execute). Only Account admins can update/delete. Tenant - Users with access to the specific tenant will have access scripts (Can view and execute). Tenant admins can update/delete. Private - User who created will only have access.", "operationId": "ListScripts", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Script types to filter. Allowed Values: chef, ansible, puppet, shell", "in": "query", "type": "string", "enum": ["chef", "ansible", "puppet", "shell"], "name": "types"}, {"description": "Script types to filter. Allowed Values: Application, Languages, Database, Security, System, Web Server, Others", "in": "query", "type": "string", "enum": ["Application", "Languages", "Database", "Security", "System", "Web Server", "Others"], "name": "category"}, {"description": "Number of records to display", "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Automation"]}, "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Created", "schema": {"$ref": "#/definitions/CreateScriptResponse"}}}, "summary": "Create Script", "description": "Creates a new script under the tenant. However the script will be accessible based on its scope. Global Scripts - All user will have access to Corestack's Marketplace Scripts (Can view and execute). Account - All users under that account will have access (Can view and execute). Only Account admins can update/delete. Tenant - Users with access to the specific tenant will have access scripts (Can view and execute). Tenant admins can update/delete. Private - User who created will only have access.", "operationId": "CreateScript", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "CreateScriptRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateScriptRequest"}}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operation/automation/scripts/{tenant_id}/execute": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Execution Initiated", "schema": {"$ref": "#/definitions/ExecuteResponse"}}}, "summary": "Execute Script", "description": "Execute scripts. Ansible script supports executing single script in multiple machines. Chef/Puppet/Shell executing multiple scripts against multiple target machines.", "operationId": "ExecuteScript", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "ExecuteScriptRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ExecuteScriptRequest"}}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operation/automation/scripts/{tenant_id}/get/{script_job_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ScriptJobDataView"}}}, "summary": "Describe Script Job", "description": "View script job details.", "operationId": "DescribeScriptJob", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "script_job_id", "in": "path", "required": true, "type": "string", "description": "ID of the script_job. This can be fetched from listScriptJobs API/scriptExecute response"}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operation/automation/scripts/{tenant_id}/jobs/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ScriptJobListResponse"}}}, "summary": "List Script Jobs", "description": "This API will list all script jobs initiated by the logged in user.", "operationId": "ListScriptJobs", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Number of records to display", "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operation/automation/scripts/{tenant_id}/scan": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Scanned successfully", "schema": {"$ref": "#/definitions/ScanScriptResponse"}}}, "summary": "Scan Script", "description": "Scans a script to check if all dependencies(if any) are satisfied. This API will also return parameters available in script for chef and parameter & hosts available in the script for ansible", "operationId": "ScanScript", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "ScriptScanRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ScriptScanRequest"}}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operation/automation/template/{tenant_id}/get/{job_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/TemplateJobUpdateResponse"}}}, "summary": "View Template Job", "description": "View Template job details", "operationId": "ViewTemplateJob", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "job_id", "in": "path", "required": true, "type": "string", "description": "ID of the template_job. This can be fetched from listTemplateJobs API response"}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operation/automation/template/{tenant_id}/jobs/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/TemplateJobListResponse"}}}, "summary": "List Templates Jobs", "description": "Jobs represent an instance of a Template or Script. Every time a Template or Script is executed, a Job is created. Jobs provide a reference of the execution, during and any time after it.", "operationId": "ListTemplatesJobs", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Number of records to display", "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operation/automation/templates/{tenant_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/TemplateListResponse"}}}, "summary": "List Templates", "description": "List all the Templates. Global Scope - All the users will have access to view and execute CoreStack Marketplace Templates will not have access to update/delete the templates. Account Scope - All users under account scope will have access to view and execute the templates, only Account admins can update/delete the templates. Tenant Scope - Users having access to the specific tenant can view or execute templates. Tenant admins can only have the access toupdate/delete the templates. Private Scope - Templates created by the user will only have access for the templates under private scope.", "operationId": "ListTemplates", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "DSL types to filter templates.", "in": "query", "type": "string", "enum": ["arm", "cfn", "heat", "mistral", "terraform"], "name": "dsl"}, {"description": "Services to filter templates.", "in": "query", "type": "string", "enum": ["Openstack", "Azure(public)", "Azure", "Cloudstack", "vCenter", "AWS", "Rackspace", "OpenstackPublic", "GCP"], "name": "services"}, {"description": "Number of records to display", "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Automation"]}, "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Created", "schema": {"$ref": "#/definitions/TemplateCreateResponse"}}}, "summary": "Create Template", "description": "Creates a new Template under the tenant. However the script will be accessible based on its scope. Global Templates - All user will have access to CoreStack's Marketplace Templates (Can view and execute). Account - All users under that account will have access (Can view and execute). Only Account admins can update/delete. Tenant - Users with access to the specific tenant will have access template (Can view and execute). Tenant admins can update/delete. Private - User who created will only have access.", "operationId": "CreateTemplate", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "CreateTemplateReq", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateTemplateReq"}}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operation/automation/{tenant_id}/scripts/{script_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Deleted", "schema": {"$ref": "#/definitions/ScriptDeleteResponse"}}}, "summary": "Delete Script", "description": "Deletes a script. Cannot undo this action, so be cautious when performing this operation. Use updateScript to make the script as inactive if required", "operationId": "DeleteScript", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "script_id", "in": "path", "required": true, "type": "string", "description": "ID of the script. This can be fetched from listScripts API"}], "security": [{"auth_token": []}], "tags": ["Automation"]}, "get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ScriptDataView"}}}, "summary": "Describe Script", "description": "This API will provide detailed information about the script.", "operationId": "DescribeScript", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "script_id", "in": "path", "required": true, "type": "string", "description": "ID of the script. This can be fetched from listScripts API"}], "security": [{"auth_token": []}], "tags": ["Automation"]}, "put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Updated", "schema": {"$ref": "#/definitions/CreateScriptResponse"}}}, "summary": "Update Script", "description": "Updates script details such as name, script path, dependencies etc.,", "operationId": "UpdateScript", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "script_id", "in": "path", "required": true, "type": "string", "description": "ID of the script. This can be fetched from listScripts API"}, {"name": "CreateScriptRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateScriptRequest"}}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operation/automation/{tenant_id}/templates/{template_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/TemplateRemoveResModel"}}}, "summary": "Delete Template", "description": "Delete a Template which is no more required", "operationId": "DeleteTemplate", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "template_id", "in": "path", "required": true, "type": "string", "description": "Specify the template id of the template to delete, template id is unique can be obtained from the list template api"}], "security": [{"auth_token": []}], "tags": ["Automation"]}, "get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/TemplateViewResponse"}}}, "summary": "Describe Template", "description": "Describe the already created Templates", "operationId": "DescribeTemplate", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "template_id", "in": "path", "required": true, "type": "string", "description": "specify the template id to retrieve, which is a unique id can be obtained using list template api"}], "security": [{"auth_token": []}], "tags": ["Automation"]}, "put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/TemplateUpdateResponse"}}}, "summary": "Update Template", "description": "Update Template details if required after creation using the api, the update by a user depends on the scope of the template created check create template docs for more details on the scope", "operationId": "UpdateTemplate", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "template_id", "in": "path", "required": true, "type": "string", "description": "Specify the template id to update which is a unique id can be retrieved using list template api"}, {"name": "CreateTemplateReq", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateTemplateReq"}}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operation/automation/{tenant_id}/templates/{template_id}/execute": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/TemplateExecuteResponse"}}}, "summary": "Execute Template", "description": "Execute template will return a unique job id the status of the template can be checked  using the Job details api where you can pass the unique id generated to get the details or errors if any on execution", "operationId": "ExecuteTemplate", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "template_id", "in": "path", "required": true, "type": "string", "description": "Specify the template id to execute, template id can be obtained from the list template api"}, {"name": "TemplateExecuteReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/TemplateExecuteReqModel"}}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operation/automation/{tenant_id}/templates/{template_id}/get_params": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/TemplateGetParamsResponse"}}}, "summary": "Get Template Params", "description": "Get the parameters required to execute a template", "operationId": "GetTemplateParams", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "template_id", "in": "path", "required": true, "type": "string", "description": "Specify the template id to execute, template id can be obtained from the list template api"}, {"name": "TemplateGetParamsReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/TemplateGetParamsReqModel"}}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operation/automation/{tenant_id}/templates/{template_id}/validate": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/TemplateValidateResponse"}}}, "summary": "Validate Template", "description": "Validates the Cloud Account and the input parameters provided for a template before executing the template", "operationId": "ValidateTemplate", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "template_id", "in": "path", "required": true, "type": "string", "description": "Specify the template id to execute, template id can be obtained from the list template api"}, {"name": "TemplateValidateReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/TemplateValidateReqModel"}}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operation/posture/dashboard_summary": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/OperationPostureResponse"}}}, "summary": "List Operation Posture Details For Mobile Site", "description": "Operation posture dashboard", "operationId": "OperationPostureDashboard", "parameters": [{"name": "OperationPostureRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/OperationPostureRequest"}}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operation/posture/dashboard_summary/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/OperationPostureResponse"}}}, "summary": "List Operation Posture Details", "description": "operation posture dashboard", "operationId": "ListOperationOpsPosture", "parameters": [{"description": "to filter data by cloud provider or cloud account wise.By default tenant wise data displayed", "type": "string", "enum": ["cloud_account", "cloud_provider"], "required": true, "name": "filter_by", "in": "query"}, {"description": "Number of records to display", "type": "integer", "default": 10, "name": "limit", "in": "query"}, {"description": "Page number", "type": "integer", "default": 1, "name": "page", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operation/{tenant_id}/visibility/{cloud}/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/OperationVisibilityResponse"}}}, "summary": "List Operation Visibility Details", "description": "operation visibility dashboard", "operationId": "ListOperationOpsVisibility", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud", "in": "path", "required": true, "type": "string", "description": "Specify the cloud service name to get the visibility details", "enum": ["AWS", "GCP", "Azure"]}, {"description": "to filter operation data count by region, resource or zone or account", "type": "string", "enum": ["resource", "region", "resource_group", "zone", "account"], "default": "account", "required": true, "name": "filter_by", "in": "query"}, {"description": "filter data by alerts or activity", "type": "string", "enum": ["activity", "alerts", "automation_failures"], "default": "activity", "required": true, "name": "visibility_by", "in": "query"}, {"description": "filter data by cloud account.Invalid if filter by value is account", "type": "string", "name": "service_account_id", "in": "query"}, {"description": "enable this option to list the visibility data for alerts or activity or automation failures", "type": "string", "enum": ["true", "false"], "name": "view_list", "in": "query"}, {"description": "to list visibility by  resource. valid if view_list option is true and region/resource_group/zone should be false/empty", "type": "string", "name": "resource", "in": "query"}, {"description": "to list visibility by region.valid if view_list option is true and cloud is AWS and resource/resource_group/zone should be false/empty", "type": "string", "name": "region", "in": "query"}, {"description": "to list visibility by resource group. valid if view_list option is true and cloud is Azure and resource/region/zone should be false/empty", "type": "string", "name": "resource_group", "in": "query"}, {"description": "to list visibility by zone.valid if view_list option is true and cloud is GCP and resource/region/resource_group should be false/empty", "type": "string", "name": "zone", "in": "query"}, {"description": "Number of records to display", "type": "integer", "default": 10, "name": "limit", "in": "query"}, {"description": "Page number", "type": "integer", "default": 1, "name": "page", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/activity/{cloud_name}/get_resource_detail": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/GetResourceDetailsResponse"}}}, "summary": "Get Operations Resource Details", "description": "Get the resource details for the specified cloud service name", "operationId": "GetResourceDetails", "parameters": [{"name": "cloud_name", "in": "path", "required": true, "type": "string", "description": "Specify the cloud service name to get the resource details. Allowed Values - AWS, Azure, GCP"}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/activity/{tenant_id}/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Success", "schema": {"$ref": "#/definitions/CreateActivityResponseModel"}}}, "summary": "Create New Activity Configuration", "description": "Creates a new activity for a particular cloud account/account/tenant with the specified resource type, resource and operation.", "operationId": "CreateNewActivity", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "CreateActivityRequestModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateActivityRequestModel"}}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/activity/{tenant_id}/get_configuration_summary": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SummaryResponseDataModel"}}}, "summary": "Get Activity Configuration Summary", "description": "Summary of activity configurations for various cloud accounts segregated by cloud providers.", "operationId": "ActivityConfigurationSummary", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"default": "summary", "required": true, "name": "action", "type": "string", "in": "query"}, {"description": "Service by which the cloud accounts and their configurations are segregated.", "type": "string", "in": "query", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI"], "x-cs-enum-type": "CloudServiceName", "default": "AWS", "required": true, "name": "service"}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/activity/{tenant_id}/get_notification/{cloud_account_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/NotificationActivityResponseDataModel"}}}, "summary": "Get Notification Based on Activity Configuration", "description": "Notifications for the configured activities listed.", "operationId": "GetNotification", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the cloud account id to get notifications for the configured activities, cloud account id is unique can be obtained from the list cloud account api. This should be same as the ID of the reference APIFor Azure CSP-Direct subscriptions, this can be fetched from list child accounts api."}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/activity/{tenant_id}/list/{cloud_account_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListActivitiesResponseDataModel"}}}, "summary": "List Activities Based on Activity Configuration", "description": "Lists the Configured Activities of a particular cloud account.", "operationId": "ListActivities", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the cloud account id to list configured activities, cloud account id is unique can be obtained from the list cloud account api. This should be same as the ID of the reference APIFor Azure CSP-Direct subscriptions, this can be fetched from list child accounts api."}, {"description": "Number of records to display", "type": "integer", "in": "query", "name": "limit"}, {"description": "Page number", "type": "integer", "in": "query", "name": "page"}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/activity/{tenant_id}/list_activity_operations": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListOperationsResponse"}}}, "summary": "List Operations Activity Details by Resource & Resource Type", "description": "List the operations based on resource and resource_type specified", "operationId": "ListActivityOperations", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"default": "list_operations", "required": true, "name": "action", "type": "string", "in": "query"}, {"description": "Service by which the cloud accounts and their configurations are segregated.", "type": "string", "in": "query", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI"], "x-cs-enum-type": "CloudServiceName", "default": "AWS", "required": true, "name": "service"}, {"description": "Resource name of the corresponding cloud service. Resource can be fetched from Get Resource Detail API ", "type": "string", "required": true, "name": "resource", "in": "query"}, {"description": "Resource type of the corresponding cloud service. Resource Type can be obtained from List Operation Visibility Details", "type": "string", "required": true, "name": "resource_type", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/activity/{tenant_id}/update/{cloud_account_id}/{action_name}": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Updated", "schema": {"$ref": "#/definitions/UpdateActivityResponseModel"}}}, "summary": "Update Activity Configuration", "description": "Enables or disables one or more activities", "operationId": "UpdateActivities", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the cloud account id to update configured activities, cloud account id is unique can be obtained from the list cloud account api. This should be same as the ID of the reference APIFor Azure CSP-Direct subscriptions, this can be fetched from list child accounts api."}, {"name": "action_name", "in": "path", "required": true, "type": "string", "description": "Update action to be performed on the configured activities.", "enum": ["enable_activities", "disable_activities"]}, {"name": "UpdateActivityRequestModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateActivityRequestModel"}}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/activity/{tenant_id}/{cloud_account_id}/update/{activity_id}/{action_name}": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Updated", "schema": {"$ref": "#/definitions/UpdateActivityResponseModel"}}}, "summary": "Update Activity Configuration Details", "description": "Enables or disables one activity", "operationId": "UpdateActivity", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the cloud account id to update configured activities, cloud account id is unique can be obtained from the list cloud account api. This should be same as the ID of the reference APIFor Azure CSP-Direct subscriptions, this can be fetched from list child accounts api."}, {"name": "activity_id", "in": "path", "required": true, "type": "string", "description": "ID of the configured activity. Can be obtained as id of the ListActivities response"}, {"name": "action_name", "in": "path", "required": true, "type": "string", "description": "Update action to be performed on the configured activity.", "enum": ["enable", "disable"]}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/anomaly_detector/activity_insights/{tenant_id}/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListActivityInsightsResponse"}}}, "summary": "List Anomaly Activity Insights", "description": "List activity insights", "operationId": "ListActivityInsights", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "ListActivityInsightsRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ListActivityInsightsRequest"}}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/anomaly_detector/activity_insights/{tenant_id}/list_category": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListCategoryActivityInsights"}}}, "summary": "List Activity Insights by Category", "description": "List activity insights category", "operationId": "ListActivityInsightsCategory", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Specify the action name to fetch data", "type": "string", "in": "query", "enum": ["list_category"], "required": true, "name": "action_name"}, {"description": "Specify the Cloud account ID. This is a unique ID and can be retrieved from the 'List Metric Anomalies by Cloud Account' API.", "type": "string", "in": "query", "required": true, "name": "cloud_account_id"}, {"description": "Specify the user name. This can be retrieved using List Activity Insights by User API.", "type": "string", "in": "query", "required": true, "name": "user_name"}, {"description": "Specify the granularity to fetch data", "type": "string", "in": "query", "enum": ["weekly", "daily", "monthly"], "x-cs-enum-type": "Granularity", "name": "granularity"}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/anomaly_detector/activity_insights/{tenant_id}/list_user": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListUserActivityInsights"}}}, "summary": "List Activity Insights by User", "description": "List activity insights user", "operationId": "ListActivityInsightsUser", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Specify the action name to fetch data", "type": "string", "in": "query", "enum": ["list_users"], "required": true, "name": "action_name"}, {"description": "Specify the Cloud account ID. This is a unique ID and can be retrieved from the 'List Metric Anomalies by Cloud Account' API.", "type": "string", "in": "query", "required": true, "name": "cloud_account_id"}, {"description": "Specify the granularity to fetch data", "type": "string", "in": "query", "enum": ["weekly", "daily", "monthly"], "x-cs-enum-type": "Granularity", "name": "granularity"}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/anomaly_detector/metric_anomalies/{tenant_id}/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListMetricAnomaliesResponse"}}}, "summary": "List Metric Anomalies", "description": "List metric anomalies", "operationId": "ListMetricAnomalies", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "ListMetricAnomaliesRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ListMetricAnomaliesRequest"}}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/anomaly_detector/metric_anomalies/{tenant_id}/list_category": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListCategoryMetricAnomalies"}}}, "summary": "List Metric Anomalies Category", "description": "List metric anomalies category", "operationId": "ListMetricAnomaliesCategory", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/anomaly_detector/metric_anomalies/{tenant_id}/list_cloud_account": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListCloudAccountMetricAnomalies"}}}, "summary": "List Metric Anomalies by Cloud Account", "description": "List metric anomalies cloud account", "operationId": "ListMetricAnomaliesCloudAccount", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/anomaly_detector/recommendations/{tenant_id}/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListAnomalyRecommendationsResponse"}}}, "summary": "List Anomalies Recommendation", "description": "List recommendations", "operationId": "ListRecommendation", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "ListAnomalyRecommendationsRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ListAnomalyRecommendationsRequest"}}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/anomaly_detector/recommendations/{tenant_id}/list_impacted_resources": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AnomalyListPolicyRecommendationsResponse"}}}, "summary": "List Anomalies Impacted Resources", "description": "list impacted resources\n:param tenant_id:\n:return:", "operationId": "ListImpactedResources", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "specify the action name", "in": "query", "enum": ["list_impacted_resources"], "required": true, "name": "action_name", "type": "string"}, {"description": "Specify the recommendation ID. This is a unique ID and can be retrieved using the 'List recommendations by Cloud Account' or 'List recommendations by Category' API call.", "in": "query", "required": true, "name": "recommendation_id", "type": "string"}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/anomaly_detector/recommendations/{tenant_id}/resolve": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ActionRecommendationsResponse"}}}, "summary": "Resolve Anomalies Recommendations", "description": "Resolve recommendations", "operationId": "ResolveRecommendations", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "ResolveRecommendationsReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ResolveRecommendationsReqModel"}}, {"description": "specify the action name", "in": "query", "enum": ["resolve_recommendation"], "required": true, "name": "action_name", "type": "string"}, {"description": "Specify the recommendation ID. This is a unique ID and can be retrieved using the 'List recommendationsby Cloud Account' or 'List recommendations by Category' API call.", "in": "query", "required": true, "name": "recommendation_id", "type": "string"}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/automation/blueprints/{tenant_id}/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CreateBlueprintDetails"}}}, "summary": "Create Blueprints", "description": "create blueprints", "operationId": "CreateBlueprints", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "CreateBlueprintRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateBlueprintRequest"}}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operations/automation/blueprints/{tenant_id}/delete/{blueprint_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/DeleteBlueprintDetails"}}}, "summary": "Delete Blueprints", "description": "delete blueprints", "operationId": "DeleteBlueprints", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "blueprint_id", "in": "path", "required": true, "type": "string", "description": "Specify the blueprint Id to fetch data"}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operations/automation/blueprints/{tenant_id}/get/{blueprint_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ViewBlueprintDetails"}}}, "summary": "View Blueprints", "description": "view blueprints", "operationId": "ViewBlueprints", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "blueprint_id", "in": "path", "required": true, "type": "string", "description": "Specify the blueprint Id to fetch data"}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operations/automation/blueprints/{tenant_id}/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListBlueprintDetails"}}}, "summary": "List Blueprints", "description": "list blueprints", "operationId": "ListBlueprints", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operations/automation/blueprints/{tenant_id}/update/{blueprint_id}": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UpdateBlueprintResponse"}}}, "summary": "Update Blueprints", "description": "update blueprints", "operationId": "UpdateBlueprints", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "blueprint_id", "in": "path", "required": true, "type": "string", "description": "Specify the blueprint Id to fetch data"}, {"name": "CreateBlueprintRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateBlueprintRequest"}}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operations/automation/scripts/{tenant_id}/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CreateScheduleResponse"}}}, "summary": "Create Script Schedules", "description": "create script schedules", "operationId": "CreateScriptSchedules", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "UpdateScheduleRequestScript", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateScheduleRequestScript"}}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operations/automation/scripts/{tenant_id}/update/{schedule_id}": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UpdateScheduleResponse"}}}, "summary": "Update Script Schedules", "description": "update script schedules", "operationId": "UpdateScriptSchedules", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "schedule_id", "in": "path", "required": true, "type": "string", "description": "Specify the schedule Id to fetch the schedule data"}, {"name": "UpdateScheduleRequestScript", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateScheduleRequestScript"}}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operations/automation/templates/{tenant_id}/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CreateScheduleResponse"}}}, "summary": "Create Template Schedules", "description": "create template schedules", "operationId": "CreateTemplateSchedules", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "UpdateScheduleRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateScheduleRequest"}}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operations/automation/templates/{tenant_id}/update/{schedule_id}": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UpdateScheduleResponse"}}}, "summary": "Update Template Schedules", "description": "update template schedules", "operationId": "UpdateTemplateSchedules", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "schedule_id", "in": "path", "required": true, "type": "string", "description": "Specify the schedule Id to fetch the schedule data"}, {"name": "UpdateScheduleRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateScheduleRequest"}}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operations/automation/{tenant_id}/delete/{schedule_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/DeleteScheduleResponse"}}}, "summary": "Delete Template and Script Schedules", "description": "delete template and script schedules", "operationId": "DeleteTemplateAndScriptSchedules", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "schedule_id", "in": "path", "required": true, "type": "string", "description": "Specify the schedule Id to fetch the schedule data"}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operations/automation/{tenant_id}/get/{schedule_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ViewScheduleResponse"}}}, "summary": "View Template and Script Schedules", "description": "view template and script schedules", "operationId": "ViewTemplateAndScriptSchedules", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "schedule_id", "in": "path", "required": true, "type": "string", "description": "Specify the schedule Id to fetch the schedule data"}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operations/automation/{tenant_id}/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListScheduleResponse"}}}, "summary": "List Template and Script Schedules", "description": "list template and script schedules", "operationId": "ListTemplateAndScriptSchedules", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Type of schedule. Choose one of the below.", "enum": ["template", "script"], "required": true, "name": "type", "type": "string", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Automation"]}}, "/operations/monitoring_and_alerts/cloud_accounts/{tenant_id}/apply_template": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ApplyTemplateResponse"}}}, "summary": "Apply Operations Alert Configuration", "description": "Apply Template", "operationId": "ApplyTemplate", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "ApplyTemplateRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ApplyTemplateRequest"}}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/monitoring_and_alerts/cloud_accounts/{tenant_id}/list_cloud_account_configurations": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListCloudAccountConfiguration"}}}, "summary": "List Operations Alert Configuration by Cloud Account", "description": "List cloud account configurations", "operationId": "ListCloudAccountConfigurations", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/monitoring_and_alerts/cloud_accounts/{tenant_id}/list_cloud_account_details": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SetDefaultResponse"}}}, "summary": "Get Service Details For Operations Alert Configuration", "description": "Get Service Details", "operationId": "GetServiceDetails", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/monitoring_and_alerts/cloud_accounts/{tenant_id}/view_applied": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ViewAppliedResponse"}}}, "summary": "View Applied Operations Alert Configuration", "description": "View what is applied", "operationId": "ViewApplied", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "ViewAppliedRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ViewAppliedRequest"}}, {"description": "Number of records to display", "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/monitoring_and_alerts/monitoring_templates/{tenant_id}/clone_template": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CloneTemplateResponse"}}}, "summary": "Clone Operations Alert Configuration Templates", "description": "Clone Template", "operationId": "CloneTemplate", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "CloneTemplateRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CloneTemplateRequest"}}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/monitoring_and_alerts/monitoring_templates/{tenant_id}/create_template": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CreateTemplateResponse"}}}, "summary": "Create Operations Alert Configuration Templates", "description": "Create Template", "operationId": "OperationsAlertConfigurationCreateTemplate", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "CreateTemplateRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateTemplateRequest"}}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/monitoring_and_alerts/monitoring_templates/{tenant_id}/edit_template": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/EditTemplateResponse"}}}, "summary": "Update Operations Alert Configuration Template", "description": "Edit Template", "operationId": "EditTemplate", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "EditTemplateRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/EditTemplateRequest"}}, {"description": "Specify the monitoring_template_uri of the template which the name to be edited", "required": true, "name": "monitoring_template_uri", "type": "string", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/monitoring_and_alerts/monitoring_templates/{tenant_id}/edit_template_name": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/EditTemplateNameResponse"}}}, "summary": "Update Operations Alert Configuration Template Name", "description": "Edit Template Name", "operationId": "EditTemplateName", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "EditTemplateNameRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/EditTemplateNameRequest"}}, {"description": "Specify the monitoring_template_uri of the template which the name to be edited", "required": true, "name": "monitoring_template_uri", "type": "string", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/monitoring_and_alerts/monitoring_templates/{tenant_id}/enable_default_template": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SetDefaultResponse"}}}, "summary": "Set Default Options Operations Alert Configuration", "description": "Option to Set Template as Default", "operationId": "SetDefaultOptions", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "SetDefaultRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SetDefaultRequest"}}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/monitoring_and_alerts/monitoring_templates/{tenant_id}/list_alert_templates": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListAlertTemplates"}}}, "summary": "List Operations Alert Configuration Templates", "description": "List Alert templates", "operationId": "ListAlertTemplates", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/monitoring_and_alerts/monitoring_templates/{tenant_id}/resource_metric_hierarchy_configuration": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ResourceMetricHierarchyResponse"}}}, "summary": "List Operations Resource Metric Hierarchy Configuration", "description": "resource metric hierarchy configuration listing", "operationId": "ResourceMetricHierarchyConfiguration", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "ResourceMetricHierarchyRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ResourceMetricHierarchyRequest"}}, {"description": "Specify the criticality", "enum": ["all", "High", "Medium", "Low"], "required": false, "name": "criticality", "type": "string", "in": "query"}, {"description": "Specify the status", "enum": ["all", "configured", "unconfigured"], "required": false, "name": "status", "type": "string", "in": "query"}, {"description": "Specify the metric_type", "enum": ["all", "Availability", "Capacity", "Failure", "Performance", "Security", "Success", "Utilization"], "required": false, "name": "metric_type", "type": "string", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/monitoring_and_alerts/monitoring_templates/{tenant_id}/view_configuration": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ViewConfigurationResponse"}}}, "summary": "View Operations Configuration Details", "description": "view configuration listing", "operationId": "ViewConfiguration", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "ViewConfigurationRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ViewConfigurationRequest"}}, {"description": "Specify the criticality", "enum": ["all", "High", "Medium", "Low"], "default": "all", "required": true, "name": "criticality", "type": "string", "in": "query"}, {"description": "Specify the status", "enum": ["all", "configured", "unconfigured"], "default": "all", "required": false, "name": "status", "type": "string", "in": "query"}, {"description": "Specify the metric_type", "enum": ["all", "Availability", "Capacity", "Failure", "Performance", "Security", "Success", "Utilization"], "default": "all", "required": true, "name": "metric_type", "type": "string", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Operations"]}}, "/operations/trend_analysis/backup": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Created", "schema": {"$ref": "#/definitions/BackupReportResponse"}}}, "summary": "Backup Report", "description": "Fetch the backup report based on cloud account usage", "operationId": "CreateBackupReport", "parameters": [{"name": "CreateBackupReport", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateBackupReport"}}], "security": [{"auth_token": []}], "tags": ["Reports"]}}, "/operations/trend_analysis/patch_compliance": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Created", "schema": {"$ref": "#/definitions/PatchComplianceReportRes"}}}, "summary": "Patch Compliance Report", "description": "Fetch the patch compliance report based on cloud account usage", "operationId": "PatchComplianceReports", "parameters": [{"name": "PatchComplianceReportReq", "required": true, "in": "body", "schema": {"$ref": "#/definitions/PatchComplianceReportReq"}}], "security": [{"auth_token": []}], "tags": ["Reports"]}}, "/operations/trend_analysis/recovery_service": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Created", "schema": {"$ref": "#/definitions/RecoveryServiceReportRes"}}}, "summary": "RecoveryService Report", "description": "Fetch the recovery service report based on cloud account usage", "operationId": "RecoveryServiceReports", "parameters": [{"name": "RecoveryServiceReportReq", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecoveryServiceReportReq"}}], "security": [{"auth_token": []}], "tags": ["Reports"]}}, "/recommendations/{definition_id}/resolve": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ResolveDefRecommendationRespModel"}}}, "summary": "Resolve Definition Recommendation", "description": "Resolve definition recommendations", "operationId": "ResolveDefRecommendations", "parameters": [{"name": "definition_id", "in": "path", "required": true, "type": "string", "description": "Specify the definition_id it will be fetched from list compliance posture DetailsForPolicies"}, {"name": "ResolveDefRecommendationsReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ResolveDefRecommendationsReqModel"}}], "security": [{"auth_token": []}], "tags": ["Recommendation"]}}, "/recommendations/{definition_id}/resolve_preexecute": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ExecuteActionRecommendationRespModel"}}}, "summary": "Resolve Recommendation Action Preexecute", "description": "Resolve recommendations", "operationId": "ResolveActionRecommendationExecute", "parameters": [{"name": "definition_id", "in": "path", "required": true, "type": "string", "description": "Specify the definition_id it will be fetched from list compliance posture DetailsForPolicies"}, {"name": "ExecuteResolveActionRecommendationsReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ExecuteResolveActionRecommendationsReqModel"}}, {"description": "Specify the action to fetch data", "type": "string", "in": "query", "default": "preexecute", "required": true, "name": "action"}], "security": [{"auth_token": []}], "tags": ["Recommendation"]}}, "/recommendations/{tenant_id}/account/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListRecommendationByAccountResponse"}}}, "summary": "List Recommendations by Account", "description": "List recommendations by account", "operationId": "ListRecommendationsByAccount", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API. "}, {"description": "Specify the Cloud Account ID. It is unique ID and can be retrieved from the List Cloud Accounts API.", "type": "string", "in": "query", "name": "service_account_id"}, {"description": "Specify the policy id to execute, policy id can be obtained from the list policy api ", "type": "string", "in": "query", "name": "policy_id"}], "security": [{"auth_token": []}], "tags": ["Recommendation"]}}, "/recommendations/{tenant_id}/category/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListRecommendationByCategoryResponse"}}}, "summary": "List Recommendations by Category", "description": "list recommendations by category", "operationId": "ListRecommendationsByCategory", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API. "}, {"description": "Specify the Category to fetch the recommendation data.Please enter comma separated values.Allowed values - Cost,Security,Access,Operation,Resource", "type": "string", "in": "query", "name": "classifications"}], "security": [{"auth_token": []}], "tags": ["Recommendation"]}}, "/recommendations/{tenant_id}/get/{recommendation_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListPolicyRecommendationsResponse"}}}, "summary": "List Recommendations", "description": "List recommendations", "operationId": "ListsRecommendations", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API. "}, {"name": "recommendation_id", "in": "path", "required": true, "type": "string", "description": "Specify the recommendation ID. This is a unique ID and can be retrieved using the 'List recommendations by Cloud Account' or 'List recommendations by Category' API call. "}, {"description": "Number of records to display", "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}, {"description": "Select the Status", "enum": ["open"], "name": "resource_status", "type": "string", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Recommendation"]}}, "/recommendations/{tenant_id}/resolve/{recommendation_id}": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ActionRecommendationsResponse"}}}, "summary": "Resolve Recommendation", "description": "Resolve recommendations", "operationId": "ResolveRecommendation", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API. "}, {"name": "recommendation_id", "in": "path", "required": true, "type": "string", "description": "Specify the recommendation ID. This is a unique ID and can be retrieved using the 'List recommendations by Cloud Account' or 'List recommendations by Category' API call. "}, {"name": "ResolveRecommendationsRequestModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ResolveRecommendationsRequestModel"}}], "security": [{"auth_token": []}], "tags": ["Recommendation"]}}, "/recommendations/{tenant_id}/resolve_preexecute/{recommendation_id}": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ExecuteRecommendationRespModel"}}}, "summary": "Resolve PreExecute Recommendation", "description": "Execute resolve recommendations", "operationId": "ResolveRecommendationExecute", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API. "}, {"name": "recommendation_id", "in": "path", "required": true, "type": "string", "description": "Specify the recommendation ID. This is a unique ID and can be retrieved using the 'List recommendations by Cloud Account' or 'List recommendations by Category' API call. "}, {"name": "ExecuteResolveRecommendationsReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ExecuteResolveRecommendationsReqModel"}}, {"description": "Specify the action to fetch data", "type": "string", "in": "query", "default": "preexecute", "required": true, "name": "action"}], "security": [{"auth_token": []}], "tags": ["Recommendation"]}}, "/recommendations/{tenant_id}/service_account/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListRecommendationByAccountResponse"}}}, "summary": "List Recommendations by Cloud Account", "description": "List recommendations by cloud account", "operationId": "ListRecommendationsByCloudAccount", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API. "}, {"description": "Specify the Cloud Account ID. It is unique ID and can be retrieved from the List Cloud Accounts API.", "type": "string", "in": "query", "name": "service_account_id"}], "security": [{"auth_token": []}], "tags": ["Recommendation"]}}, "/resource/business_applications/applications/{tenant_id}/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Created", "schema": {"$ref": "#/definitions/ApplicationsCreateResponse"}}}, "summary": "Create Application in Business Application", "description": "Creates a new Application under the tenant.", "operationId": "CreateApplication", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "CreateApplicationsRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateApplicationsRequest"}}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resource/business_applications/applications/{tenant_id}/delete/{application_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ApplicationsRemoveResponse"}}}, "summary": "Delete Application in Business Application", "description": "Delete a Application which is no more required", "operationId": "DeleteApplication", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant Id to delete Application which is a unique id can be retrieved from the list tenant api"}, {"name": "application_id", "in": "path", "required": true, "type": "string", "description": "Specify the Application id of the Application to delete, Application id is unique can be obtained from the list Application api"}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resource/business_applications/applications/{tenant_id}/get/{application_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ApplicationsViewResponse"}}}, "summary": "View Application in Business Application", "description": "View Application details", "operationId": "ViewApplications", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "application_id", "in": "path", "required": true, "type": "string", "description": "ID of the applications. This can be fetched from ListApplications API response"}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resource/business_applications/applications/{tenant_id}/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ApplicationListResponse"}}}, "summary": "List Business Applications", "description": "This contains the list of applications.", "operationId": "ListApplications", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Number of records to display", "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number", "type": "integer", "required": true, "name": "page", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resource/business_applications/applications/{tenant_id}/update/{application_id}": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ApplicationsUpdateResponse"}}}, "summary": "Update Application in Business Application", "description": "Update Application details if required after creation using the api, the update by a user depends on the scope of the application created check create application docs for more details on the scope", "operationId": "UpdateApplication", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID to update application. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "application_id", "in": "path", "required": true, "type": "string", "description": "Specify the application id to update which is a unique id can be retrieved using list application api"}, {"name": "CreateApplicationsRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateApplicationsRequest"}}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resource/inventory/{tenant_id}/cloud_account": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/RediscoverResponseModel"}}}, "summary": "Getting the resources cloud account details based on the tenant", "description": "Getting the resources cloud account details based on the tenant", "operationId": "FilterCloudAccount", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Cloud Service Name", "type": "string", "in": "query", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI"], "x-cs-enum-type": "CloudServiceName", "default": "AWS", "required": true, "name": "service_name"}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resource/inventory/{tenant_id}/count": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CategoryCountResponse"}}}, "summary": "Get Inventory Count", "description": "Get inventory category count based on the cloud and cloud account will list categories & Get inventory resource count based on the cloud and cloud account will list all resources with resource_category, resource_type, resource and will list only the count on number of resources available in particular category", "operationId": "GetInventoryCount", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID for the inventory. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "CategoryCountRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CategoryCountRequest"}}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resource/inventory/{tenant_id}/filters": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/InventoryResponse"}}}, "summary": "List Inventory Filters", "description": "Get all the available filters for the corresponding cloud.Listing filter attributes will help us in getting resource details with the filters listed can be applied on the resource details call and this api is only to list filtersfor ex: AWS will have regions and tags as filters available and Azure will have resource groups and tags as filters", "operationId": "ListInventoryFilters", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID for the inventory. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "InventoryFilterRequestModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/InventoryFilterRequestModel"}}, {"description": "Name of the cloud", "type": "string", "in": "query", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI"], "x-cs-enum-type": "CloudServiceName", "default": "AWS", "required": true, "name": "service_name"}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resource/inventory/{tenant_id}/rediscover": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/RediscoverResourcesResponseModel"}}}, "summary": "Inventory Trigger Re-discovery", "description": "Trigger Discovery based on cloud account and tenant", "operationId": "InventoryRediscovery", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant Id for the inventory rediscover which is a unique id can be retrieved using the list Tenant API."}, {"description": "Specify cloud account Id for the inventory rediscover which is unique can be obtained from the list cloud account API.", "in": "query", "type": "string", "required": true, "name": "cloud_account_id"}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resource/inventory/{tenant_id}/resource_listing": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/ResourceListingResponse"}}}}, "summary": "Get Resource Listing", "description": "Listing the Resource details", "operationId": "GetResourceList", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID for the Resource. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "ResourceListingRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ResourceListingRequest"}}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resource/inventory/{tenant_id}/resources": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/InventoryResourceDetailsResponse"}}}, "summary": "Get Inventory Details", "description": "Get resource details based on the cloud accounts, category, component, resource and filters can be applied based on the cloud and cloud account for ex: AWS will have regions in filters and Azure will have resource group as filters for listing resources.", "operationId": "GetInventoryDetails", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID for the inventory. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "InventoryResourceDetailsRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/InventoryResourceDetailsRequest"}}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resource/locks/{tenant_id}/list_config_rules": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListLockConfigRuleResponse"}}}, "summary": "List Resource Lock Config Rules", "description": "Resource posture dashboard", "operationId": "ListConfigRules", "parameters": [{"description": "to filter locks by tenant or cloud account wise", "type": "string", "enum": ["cloud_account", "tenant"], "required": true, "name": "scope", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Resource"]}, "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}]}, "/resource/locks/{tenant_id}/lock_config_rule": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Removed", "schema": {"type": "boolean"}}}, "summary": "Delete Resource Lock Config Rule", "description": "Delete a lock config rule under a CoreStack", "operationId": "DeleteLockConfigRule", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "DeleteLockConfigRuleRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/DeleteLockConfigRuleRequest"}}], "security": [{"auth_token": []}], "tags": ["Resource"]}, "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Created", "schema": {"$ref": "#/definitions/CreateLockConfigRuleResponse"}}}, "summary": "Create Resource Lock Config Rule", "description": "Creates a new lock config rule under a CoreStack", "operationId": "createLockConfigRule", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "CreateResourceLockRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateResourceLockRequest"}}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resource/posture/account_or_tenant/visibility": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ResourceVisibilityResponse"}}}, "summary": "List Resource Visibility Count", "description": "Resource visibility dashboard", "operationId": "ListVisibilityCount", "parameters": [{"description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API.", "name": "tenant_id", "type": "string", "in": "query"}, {"description": "to filter resource data count by region, resource or account", "type": "string", "required": true, "enum": ["resource_type", "application", "account", "region", "resource_group", "resource_category"], "name": "sub_category", "in": "query"}, {"description": "filter data by cloud", "type": "string", "in": "query", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI"], "x-cs-enum-type": "CloudServiceName", "default": "AWS", "required": true, "name": "cloud"}, {"description": "filter data by cloud account.Invalid if sub_Category by value is account", "type": "string", "name": "cloud_account_id", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resource/posture/account_or_tenant/visibility/resources_without_locks_or_tags": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ResourceVisibilityListResponse"}}}, "summary": "List Resource Visibility Details", "description": "Resource Visibility dashboard", "operationId": "ListResourceVisibility", "parameters": [{"description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API.", "type": "string", "required": true, "name": "tenant_id", "in": "query"}, {"description": "filter data by cloud", "type": "string", "in": "query", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI"], "x-cs-enum-type": "CloudServiceName", "default": "AWS", "required": true, "name": "cloud"}, {"description": "filter data by cloud account", "type": "string", "name": "cloud_account_id", "in": "query"}, {"description": "to list resource data without tags, locks", "type": "string", "required": true, "enum": ["tags", "locks"], "name": "filter_by", "in": "query"}, {"description": "Number of records to display", "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resource/posture/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ResourcePostureResponse"}}}, "summary": "List Resource Posture Details", "description": "Resource posture dashboard", "operationId": "ListResourcePosture", "parameters": [{"description": "to filter data by cloud provider or cloud account wise.By default tenant wise data displayed", "type": "string", "enum": ["cloud_account", "cloud_provider"], "name": "sub_category", "in": "query"}, {"description": "Specify the tenant ID as comma separated. This is a unique ID and can be retrieved using the List Tenants API.", "required": true, "name": "tenant_ids", "type": "string", "in": "query"}, {"description": "Select one from the supported services to display summary for that particular service", "type": "string", "in": "query", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI"], "x-cs-enum-type": "CloudServiceName", "default": "AWS", "required": false, "name": "service_name"}, {"description": "Search by account_name wise", "type": "string", "name": "search", "in": "query"}, {"description": "Number of records to display", "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resource/tags/get_tag_keys": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListResourceTagKeys"}}}, "summary": "List Tags from Resources", "description": "Tag filters for tenant wise", "operationId": "listTags", "parameters": [{"name": "ResourceTagReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ResourceTagReqModel"}}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resource/tags/{tenant_id}/get_tenant_resources": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListResources"}}}, "summary": "List Resources Tags Filter", "description": "Resources filters for tenant wise", "operationId": "listResources", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "ResourceTagReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ResourceTagReqModel"}}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resource/tags/{tenant_id}/list_tag_config_rules": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListTagConfigRuleResponse"}}}, "summary": "List Resource Tag Config Rules", "description": "Resource tag dashboard", "operationId": "ListConfigRule", "parameters": [{"description": "to filter locks by tenant or cloud account wise", "type": "string", "enum": ["cloud_account", "tenant"], "name": "scope", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Resource"]}, "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}]}, "/resource/tags/{tenant_id}/remediation": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Created", "schema": {"$ref": "#/definitions/CreateRemediationResponse"}}}, "summary": "Create Resource Tag Remediation", "description": "Create Tag Remediation", "operationId": "createRemediation", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "CreateRemediationRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateRemediationRequest"}}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resource/tags/{tenant_id}/remediation_status/{cloud}": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Created", "schema": {"$ref": "#/definitions/GetRemediationStatusResponse"}}}, "summary": "Get Resource Tag Remediation Status", "description": "Tag Remediation Status", "operationId": "getTagRemediationStatus", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud", "in": "path", "required": true, "type": "string", "description": "cloud name like AWS,Azure,GCP"}, {"name": "GetRemediationStatusRequestModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/GetRemediationStatusRequestModel"}}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resource/tags/{tenant_id}/tag_config_rule": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Removed", "schema": {"type": "boolean"}}}, "summary": "Delete Resource Tag Config Rule", "description": "Delete a tag config rule under a CoreStack", "operationId": "DeleteTagConfigRule", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "DeleteConfigTagRuleRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/DeleteConfigTagRuleRequest"}}], "security": [{"auth_token": []}], "tags": ["Resource"]}, "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Created", "schema": {"$ref": "#/definitions/CreateTagConfigRuleResponse"}}}, "summary": "Create Resource Tag Config Rule", "description": "Creates a new tag config rule under a CoreStack", "operationId": "createTagConfigRule", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "CreateResourceTagRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateResourceTagRequest"}}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resource/{tenant_id}/locks/{cloud}/get_filters": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ScopeFilter"}}}, "summary": "List Resource Lock Config Rule Filters", "description": "Resource lock", "operationId": "ListConfigRuleFilters", "parameters": [{"description": "to get tags keys of cloud account", "type": "boolean", "name": "tags", "in": "query"}, {"description": "get resource filters of cloud account", "type": "boolean", "name": "resources", "in": "query"}, {"description": "get filters for tags of cloud account", "type": "boolean", "name": "is_tag_wise", "in": "query"}, {"description": "to list of regions of cloud account", "type": "boolean", "name": "region", "in": "query"}, {"description": "to list resource groups of cloud account", "type": "boolean", "name": "resource_group", "in": "query"}, {"description": "to list zone of cloud account", "type": "boolean", "name": "zone", "in": "query"}, {"description": "to list applicability filters of cloud account", "type": "boolean", "name": "applicability_by", "in": "query"}, {"description": "cloud account id", "type": "string", "name": "service_account_id", "in": "query"}, {"description": "scope", "type": "string", "enum": ["cloud_account", "tenant"], "name": "scope", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Resource"]}, "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}, {"name": "cloud", "in": "path", "required": true, "type": "string"}]}, "/resources/business_applications/application_group/create/{tenant_id}": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Created", "schema": {"$ref": "#/definitions/ApplicationGroupCreateResponse"}}}, "summary": "Create Application Group in Business Application", "description": "Creates a new Application Group under the tenant.", "operationId": "CreateApplicationGroup", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "CreateApplicationGroupRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateApplicationGroupRequest"}}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resources/business_applications/application_group/list/{tenant_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ApplicationGroupListResponse"}}}, "summary": "List Application Group in Business Application", "description": "This contains the Application Group.", "operationId": "ListApplicationGroup", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID to list. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Number of records to display", "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resources/business_applications/application_group/{tenant_id}/delete/{application_group_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ApplicationGroupRemoveResponse"}}}, "summary": "Delete Application Group in Business Application", "description": "Delete a ApplicationGroup which is no more required", "operationId": "DeleteApplicationGroup", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID to delete application_group. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "application_group_id", "in": "path", "required": true, "type": "string", "description": "Specify the ApplicationGroup id of the ApplicationGroup to delete, ApplicationGroup is unique can be obtained from the list ApplicationGroup api"}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resources/business_applications/application_group/{tenant_id}/get/{application_group_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ApplicationGroupViewResponse"}}}, "summary": "View Application Group in Business Application", "description": "View ApplicationGroup details", "operationId": "ViewApplicationGroup", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "application_group_id", "in": "path", "required": true, "type": "string", "description": "ID of the Application group. This can be fetched from ListApplicationGroup API response"}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resources/business_applications/application_group/{tenant_id}/update/{application_group_id}": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ApplicationGroupUpdateResponse"}}}, "summary": "Update Application Group in Business Application", "description": "Update ApplicationGroup details if required after creation using the api, the update by a user depends on the scope of the application group created check create application group docs for more details on the scope", "operationId": "UpdateApplicationGroup", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID to update application_group. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "application_group_id", "in": "path", "required": true, "type": "string", "description": "Specify the application_group id to update which is a unique id can be retrieved using list application_group api"}, {"name": "CreateApplicationGroupRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateApplicationGroupRequest"}}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resources/business_applications/cost_center/create/{tenant_id}": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Created", "schema": {"$ref": "#/definitions/CostCenterCreateResponse"}}}, "summary": "Create Cost Center in Business Application", "description": "Creates a new Cost Center under the tenant.", "operationId": "CreateCostCenter", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "CreateCostCenterRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateCostCenterRequest"}}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resources/business_applications/cost_center/list/{tenant_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CostCenterListResponse"}}}, "summary": "List Cost Center in Business Application", "description": "This contains the Cost Center.", "operationId": "ListCostCenter", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Number of records to display", "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resources/business_applications/cost_center/{tenant_id}/delete/{cost_center_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CostCenterRemoveResModel"}}}, "summary": "Delete Cost Center in Business Application", "description": "Delete a CostCenter which is no more required", "operationId": "DeleteCostCenter", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID to delete cost center. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cost_center_id", "in": "path", "required": true, "type": "string", "description": "Specify the CostCenter id of the CostCenter to delete, CostCenter is unique can be obtained from the list CostCenter api"}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resources/business_applications/cost_center/{tenant_id}/get/{cost_center_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CostCenterViewResponse"}}}, "summary": "View Cost Center in Business Application", "description": "View CostCenter details", "operationId": "ViewCostCenter", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cost_center_id", "in": "path", "required": true, "type": "string", "description": "ID of the Cost Center. This can be fetched from ListCostCenter API response"}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resources/business_applications/cost_center/{tenant_id}/update/{cost_center_id}": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CostCenterUpdateResponse"}}}, "summary": "Update Cost Center in Business Application", "description": "Update CostCenter details if required after creation using the api, the update by a user depends on the scope of the cost center created check create cost center docs for more details on the scope", "operationId": "UpdateCostCenter", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID to update cost center. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cost_center_id", "in": "path", "required": true, "type": "string", "description": "Specify the cost center id to update which is a unique id can be retrieved using list cost center api"}, {"name": "CreateCostCenterRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateCostCenterRequest"}}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resources/business_applications/environment/create/{tenant_id}": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Created", "schema": {"$ref": "#/definitions/EnvironmentCreateResponse"}}}, "summary": "Create Environment in Business Application", "description": "Creates a new environment under the tenant.", "operationId": "CreateEnvironment", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "CreateEnvironmentRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateEnvironmentRequest"}}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resources/business_applications/environment/list/{tenant_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/EnvironmentListResponse"}}}, "summary": "List Environment in Business Application", "description": "This contains the Environments.", "operationId": "ListEnvironment", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Number of records to display", "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resources/business_applications/environment/{tenant_id}/delete/{environment_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/EnvironmentRemoveResponse"}}}, "summary": "Delete Environment in Business Application", "description": "Delete a Environment which is no more required", "operationId": "DeleteEnvironment", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "environment_id", "in": "path", "required": true, "type": "string", "description": "Specify the id of the Environment to delete, Environment is unique can be obtained from the list Environment api"}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resources/business_applications/environment/{tenant_id}/get/{environment_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/EnvironmentViewResponse"}}}, "summary": "View Environment in Business Application", "description": "View Environment details", "operationId": "ViewEnvironment", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "environment_id", "in": "path", "required": true, "type": "string", "description": "ID of the environment. This can be fetched from ListEnvironment API response"}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resources/business_applications/environment/{tenant_id}/update/{environment_id}": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/EnvironmentUpdateResponse"}}}, "summary": "Update Environment in Business Application", "description": "Update Environment details if required after creation using the api, the update by a user depends on the scope of the Environment created check create Environment docs for more details on the scope", "operationId": "UpdateEnvironment", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "environment_id", "in": "path", "required": true, "type": "string", "description": "Specify the Environment id to update which is a unique id can be retrieved using list Environment api"}, {"name": "CreateEnvironmentRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateEnvironmentRequest"}}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resources/business_applications/tag_pattern/create/{tenant_id}": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Created", "schema": {"$ref": "#/definitions/TagPatternsCreateResponse"}}}, "summary": "Create Tag Pattern in Business Application", "description": "Creates a new tag pattern under the selected scope.", "operationId": "CreateTagPatterns", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "ID of the tenant. This can be fetched from listTenants API"}, {"name": "CreateTagPatternsRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateTagPatternsRequest"}}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resources/business_applications/tag_pattern/list/{tenant_id}/": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/TagPatternListResponse"}}}, "summary": "List Tag Pattern in Business Application", "description": "Displays the lis of Tag Patterns.", "operationId": "ListTagPatterns", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Number of records to display", "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resources/business_applications/tag_pattern/{tenant_id}/delete/{tagpattern_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/TagPatternsRemoveResModel"}}}, "summary": "Delete Tag Pattern in Business Application", "description": "Delete a TagPatterns which is no more required", "operationId": "DeleteTagPatterns", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID to delete TagPatterns. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "tagpattern_id", "in": "path", "required": true, "type": "string", "description": "Specify the tagpatterns id of the TagPatterns to delete,TagPatterns is unique can be obtained from the list TagPatterns api"}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resources/business_applications/tag_pattern/{tenant_id}/get/{tagpattern_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/TagPatternUpdateResponse"}}}, "summary": "View Tag Pattern in Business Application", "description": "View a particular tag pattern.", "operationId": "ViewTagPatterns", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "tagpattern_id", "in": "path", "required": true, "type": "string", "description": "ID of the environment. This can be fetched from ListTagPatterns API response"}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/resources/business_applications/tag_pattern/{tenant_id}/update/{tagpattern_id}": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/TagPatternsUpdateResponse"}}}, "summary": "Update Tag Pattern in Business Application", "description": "Update TagPatterns details if required after creation using the api. The update by a user depends on the scope of the TagPatterns created. Check create TagPatterns docs for more details on the scope", "operationId": "UpdateTagPatterns", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID to update TagPatterns. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "tagpattern_id", "in": "path", "required": true, "type": "string", "description": "Specify the tagpatterns id to update which is a unique id can be retrieved using list TagPatterns api"}, {"name": "CreateTagPatternsRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateTagPatternsRequest"}}], "security": [{"auth_token": []}], "tags": ["Resource"]}}, "/secure/{tenant_id}/score": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Mapping", "schema": {"type": "array", "items": {"$ref": "#/definitions/SecureDetails"}}}}, "summary": "SecureScore Mapping Report", "operationId": "getSecureScores", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This needs to fetch from Azure accounts."}], "security": [{"auth_token": []}], "tags": ["Reports"]}}, "/security/executive_dashboard/threats/by_cloud_accounts": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SecurityDashboardThreatsSummaryAccountResponse"}}}, "summary": "Get Threat by Cloud Accounts", "description": "Security Dashboard Threats by Accounts", "operationId": "ThreatByAccounts", "parameters": [{"name": "SecurityDashboardRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SecurityDashboardRequest"}}], "security": [{"auth_token": []}], "tags": ["Security"]}}, "/security/executive_dashboard/threats/by_region": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SecurityDashboardThreatsByRegionResponse"}}}, "summary": "Get Threat by Region", "description": "Security Dashboard Threat by Region", "operationId": "ThreatByRegion", "parameters": [{"name": "SecurityDashboardRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SecurityDashboardRequest"}}], "security": [{"auth_token": []}], "tags": ["Security"]}}, "/security/executive_dashboard/threats/by_resource_category": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SecurityDashboardThreatsByResourceCategoryResponse"}}}, "summary": "Get Threat by Resource Category", "description": "Security Dashboard Threat by Resource Category", "operationId": "ThreatByResourceCategory", "parameters": [{"name": "SecurityDashboardRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SecurityDashboardRequest"}}], "security": [{"auth_token": []}], "tags": ["Security"]}}, "/security/executive_dashboard/threats/trend_by_severity": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SecurityDashboardThreatSummaryMonthResponse"}}}, "summary": "Get Threats by Trend", "description": "Security Dashboard Threats by Trend", "operationId": "ThreatByTrend", "parameters": [{"name": "SecurityDashboardRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SecurityDashboardRequest"}}], "security": [{"auth_token": []}], "tags": ["Security"]}}, "/security/executive_dashboard/violations/by_cloud_account": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SecurityDashboardViolationsByAccountResponse"}}}, "summary": "Get Config Violation by Cloud Account", "description": "Security Dashboard Violations by Cloud Accounts", "operationId": "violationsByCloudAccount", "parameters": [{"name": "SecurityDashboardRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SecurityDashboardRequest"}}], "security": [{"auth_token": []}], "tags": ["Security"]}}, "/security/executive_dashboard/violations/by_region": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SecurityDashboardViolationsByRegionResponse"}}}, "summary": "Get Config Violation By Region", "description": "Security Dashboard Violations by Region", "operationId": "violationsByRegion", "parameters": [{"name": "SecurityDashboardRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SecurityDashboardRequest"}}], "security": [{"auth_token": []}], "tags": ["Security"]}}, "/security/executive_dashboard/violations/by_resource_category": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SecurityDashboardViolationsByResourceCategoryResponse"}}}, "summary": "Get Config Violation by Resource Category", "description": "Security Dashboard Violation by Resource Category", "operationId": "violationsByResourceCategory", "parameters": [{"name": "SecurityDashboardRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SecurityDashboardRequest"}}], "security": [{"auth_token": []}], "tags": ["Security"]}}, "/security/executive_dashboard/violations/trend_by_severity": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SecurityDashboardViolationsByMonthResponse"}}}, "summary": "Get Config Violation trend by severity", "description": "Security Dashboard Config Violation by Trend", "operationId": "violationsTrend", "parameters": [{"name": "SecurityDashboardRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SecurityDashboardRequest"}}], "security": [{"auth_token": []}], "tags": ["Security"]}}, "/security/executive_dashboard/vulnerabilities/by_cloud_account": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SecurityDashboardVulnerabilitySummaryAccountResponse"}}}, "summary": "Get Vulnerability by Cloud Account", "description": "SecOps Dashboard Vulnerabilities by Cloud Account", "operationId": "VulnerabilityByAccount", "parameters": [{"name": "SecurityDashboardRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SecurityDashboardRequest"}}], "security": [{"auth_token": []}], "tags": ["Security"]}}, "/security/executive_dashboard/vulnerabilities/by_region": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SecurityDashboardVulnerabilitySummaryRegionResponse"}}}, "summary": "Get Vulnerability by Region", "description": "SecOps Dashboard Vulnerabilities by Region", "operationId": "VulnerabilityByRegion", "parameters": [{"name": "SecurityDashboardRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SecurityDashboardRequest"}}], "security": [{"auth_token": []}], "tags": ["Security"]}}, "/security/executive_dashboard/vulnerabilities/trend_by_severity": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SecurityVulnerabilitySummaryMonthResponse"}}}, "summary": "Get Vulnerability by Trend", "description": "SecOps Dashboard Vulnerabilities by Trend", "operationId": "VulnerabilityByTrend", "parameters": [{"name": "SecurityDashboardRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SecurityDashboardRequest"}}], "security": [{"auth_token": []}], "tags": ["Security"]}}, "/security/posture/visibility/{tenant_id}/get/vulnerability": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SecurityVulnerabilityResponse"}}}, "summary": "List Security Vulnerability Details", "description": "Security Vulnerability for tenant or cloud account", "operationId": "SecurityVulnerability", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "ID of the service account. This can be fetched from list cloud accounts API.", "name": "accounts", "type": "string", "in": "query"}, {"description": "Cloud service", "type": "string", "in": "query", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI"], "x-cs-enum-type": "CloudServiceName", "default": "AWS", "required": false, "name": "services"}], "security": [{"auth_token": []}], "tags": ["Security"]}}, "/security/posture/visibility/{tenant_id}/get/{action_name}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SecurityVisibilityResponse"}}}, "summary": "List Security Visibility Details", "description": "Security threat and guardrails details for tenant or cloud account", "operationId": "SecurityVisibility", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "action_name", "in": "path", "required": true, "type": "string", "description": "Action name to get visibility data", "enum": ["threats_tenant_summary", "guardrails_tenant_summary"]}, {"description": "ID of the service account. This can be fetched from list cloud accounts API.", "name": "accounts", "type": "string", "in": "query"}, {"description": "Cloud service", "type": "string", "in": "query", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI"], "x-cs-enum-type": "CloudServiceName", "default": "AWS", "required": false, "name": "services"}, {"description": "Number of records to display", "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Security"]}}, "/security/posture/{tenant_id}/get/securityops": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SecurityPostureTenantResponse"}}}, "summary": "Get Security Posture Details By Tenant", "description": "Security posture By Tenant", "operationId": "SecurityPostureByTenant", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Severity of the violations.", "type": "string", "enum": ["threats", "vulnerability", "guardrail"], "name": "category", "in": "query"}, {"description": "Number of records to display", "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}, {"description": "search by tenant_name wise", "type": "string", "name": "search", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Security"]}}, "/security/posture/{tenant_id}/get/securityops/{action_name}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SecurityPostureResponse"}}}, "summary": "Get Security Posture Details by Cloud Account & Cloud Service Provider", "description": "Security posture by Cloud and Cloud Accounts", "operationId": "SecurityPosture", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "action_name", "in": "path", "required": true, "type": "string", "description": "Action name to get posture data by Cloud and Cloud Accounts category", "enum": ["posture_by_cloud", "posture_by_cloud_account"]}, {"description": "Severity of the violations. Choose any of the below when action_name is chosen as posture_by_cloud_account", "type": "string", "enum": ["threats", "vulnerability", "guardrail"], "name": "category", "in": "query"}, {"description": "Select one from the supported services to display summary for that particular service", "type": "string", "in": "query", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI"], "x-cs-enum-type": "CloudServiceName", "default": "AWS", "required": false, "name": "service_name"}, {"description": "Number of records to display", "type": "integer", "name": "limit", "in": "query"}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}, {"description": "Search by account_name wise", "type": "string", "name": "search", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Security"]}}, "/self_service/dashboard/{tenant_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CustomerDashboardReportModel"}}}, "summary": "Self Service Customer Dashboard", "description": "CustomerDashboard", "operationId": "CustomerDashboard", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Select action", "type": "string", "enum": ["consumer_dashboard"], "name": "action", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Self Service"]}}, "/self_service/orders/{tenant_id}/{action}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/OrderHistoryReportModel"}}}, "summary": "Self Service Order History", "description": "OrderHistory", "operationId": "OrderHistory", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "action", "in": "path", "required": true, "type": "string", "description": "Select action", "enum": ["myrequests"]}], "security": [{"auth_token": []}], "tags": ["Self Service"]}}, "/self_service/resource_catalogs/{tenant_id}/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ResourceCatalogCreateDataModel"}}}, "summary": "Create Resource Catalog", "description": "Resource Catalog Create", "operationId": "ResourceCatalogCreate", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "ResourceCatalogServiceLevelDataModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ResourceCatalogServiceLevelDataModel"}}], "security": [{"auth_token": []}], "tags": ["Self Service"]}}, "/self_service/resource_catalogs/{tenant_id}/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ResourceCatalogGetDataModel"}}}, "summary": "List Resource Catalog", "description": "Resource Catalog list", "operationId": "ResourceCatalogList", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}], "security": [{"auth_token": []}], "tags": ["Self Service"]}}, "/self_service/resource_catalogs/{tenant_id}/{catalog_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ResourceCatalogDeleteDataModel"}}}, "summary": "Delete Resource Catalog", "description": "Resource Catalog Delete", "operationId": "ResourceCatalogDelete", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "catalog_id", "in": "path", "required": true, "type": "string", "description": "Catalog ID"}], "security": [{"auth_token": []}], "tags": ["Self Service"]}, "put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ResourceCatalogModifyDataModel"}}}, "summary": "Update Resource Catalog", "description": "Resource Catalog Modify", "operationId": "ResourceCatalogModify", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "catalog_id", "in": "path", "required": true, "type": "string", "description": "Catalog ID"}, {"name": "ResourceCatalogServiceLevelDataModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ResourceCatalogServiceLevelDataModel"}}], "security": [{"auth_token": []}], "tags": ["Self Service"]}}, "/self_service/workspace/{tenant_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/WorkSpaceReportModel"}}}, "summary": "List Workspaces", "description": "WorkSpace", "operationId": "WorkSpace", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Select the action", "type": "string", "enum": ["dashboard"], "name": "action", "in": "query"}, {"description": "Select the request type", "type": "string", "enum": ["myrequest"], "name": "type", "in": "query"}, {"description": "Select to true to display false one also", "type": "string", "enum": ["true", "false"], "name": "show_failed", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Self Service"]}}, "/self_service/{tenant_id}/catalog/{cloud_account_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ServiceCatalogDeleteDataModel"}}}, "summary": "Delete Service Catalog", "description": "Service Catalog list", "operationId": "ServiceCatalogDelete", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Cloud Account ID"}], "security": [{"auth_token": []}], "tags": ["Self Service"]}, "get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ServiceCatalogGetDataModel"}}}, "summary": "Create Service Catalog", "description": "Service Catalog Create", "operationId": "serviceCatalogCreate", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Cloud Account ID"}, {"description": "action", "type": "string", "enum": ["default_values"], "name": "action", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Self Service"]}}, "/tenants": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListTenantResponse"}}}, "summary": "List Tenant", "description": "There can be multiple tenants within a CoreStack account. List all tenants the user is mapped under a CoreStack account. If there are 3 tenants and user performing this operation has access to only 2 tenants then only those 2 tenants will be returned.", "operationId": "listTenant", "security": [{"auth_token": []}], "tags": ["Identity"]}, "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Created", "schema": {"$ref": "#/definitions/TenantCreateResponse"}}}, "summary": "Create Tenant", "description": "Creates a new tenant under a CoreStack account. There can be multiple tenants within a CoreStack account.", "operationId": "createTenant", "parameters": [{"name": "CreateTenantRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateTenantRequest"}}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/tenants/{tenant_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/TenantRemovalResponse"}}}, "summary": "Delete Tenant", "description": "Delete a tenant by its Id. Cannot undo this action, so be cautious when performing this operation. Use updateTenant to make the tenant as suspended if required.", "operationId": "deleteTenant", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Id of the tenant to be deleted."}], "security": [{"auth_token": []}], "tags": ["Identity"]}, "get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/GetTenantResponse"}}}, "summary": "Get Tenant", "description": "Retrieve a tenant by its Id.  If you're unsure of the tenant_id, use listTenant operation to list all tenants under a CoreStack account and fetch the needed tenant_id.", "operationId": "getTenant", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}], "security": [{"auth_token": []}], "tags": ["Identity"]}, "put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/TenantUpdateResponse"}}}, "summary": "Update Tenant", "description": "Update a tenant's status, description & metadata using its id. No operation can be performed when a tenant is made suspended.", "operationId": "updateTenant", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Id of the CoreStack account under which the tenant to be updated."}, {"name": "UpdateTenantRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UpdateTenantRequest"}}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/tenants/{tenant_id}/roles": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/RoleListResponse"}}}, "summary": "List Roles by Tenant", "description": "This GET method is used to retrieve the list of Roles available within a specific tenant.", "operationId": "ListRoles", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/tenants/{tenant_id}/users": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UserTenantResponseList"}}}, "summary": "List Users by Tenant", "description": "List all users within a tenant.", "operationId": "ListTenantUser", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/user_groups/summary/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UserGroupSummaryBatchResponse"}}}, "summary": "User Group Batch", "description": "User Group Batch", "operationId": "UserGroupBatch", "parameters": [{"name": "BatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BatchRequest"}}], "security": [{"auth_token": []}], "tags": ["UserGroups"]}}, "/usergroups/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UserGroupCreateResponse"}}}, "summary": "Create UserGroup", "description": "Creates a user group within a CoreStack tenant and assign different set of roles to different users.There can be multiple user groups within a CoreStack tenant. User group will be created at the tenant level", "operationId": "CreateUserGroup", "parameters": [{"name": "UserGroupCreateRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UserGroupCreateRequest"}}], "security": [{"auth_token": []}], "tags": ["UserGroups"]}}, "/usergroups/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UserGroupListResponse"}}}, "summary": "List User groups", "description": "Lists all User groups in tenant.", "operationId": "ListUserGroup", "security": [{"auth_token": []}], "tags": ["UserGroups"]}}, "/usergroups/view/{group_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UserGroupData"}}}, "summary": "Describe UserGroup", "description": "Describes an User group by ID. This provides detailed information about a user group", "operationId": "ViewUserGroup", "security": [{"auth_token": []}], "tags": ["UserGroups"]}, "parameters": [{"name": "group_id", "in": "path", "required": true, "type": "string"}]}, "/users/change_password/{user_id}": {"parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string"}], "put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ChangePasswordResponse"}}}, "summary": "Change Password", "description": "Update the password of the user. This password will be used for login to portal and it will not affect the Access Key / Secret Key associated with the user. Cannot update password of another user within the same CoreStack account. Can be updated for the user associated with Access Key / Secret Key", "operationId": "ChangePassword", "parameters": [{"name": "ChangePasswordRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ChangePasswordRequest"}}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/users/change_time_zone/{user_id}": {"parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string"}], "put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ChangeTimezoneResponse"}}}, "summary": "Change Timezone", "description": "Update the timezone settings of the user. In CoreStack portal, wherever the datatime is shown it is converted to the timezone set to the user. Cannot update timezone of another user within the same CoreStack account. Can be updated for the user associated with Access Key / Secret Key", "operationId": "ChangeTimezone", "parameters": [{"name": "ChangeTimezoneRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ChangeTimezoneRequest"}}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/users/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UserCreateResponse"}}}, "summary": "Create User", "description": "Creates an user within a CoreStack account and assign different roles for different tenants. There can be multiple tenants within a CoreStack account. User will be created at the account level and mapped to multiple tenants as needed.", "operationId": "CreateUser", "parameters": [{"name": "UserCreateRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UserCreateRequest"}}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/users/delete/{user_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UserDeleteResponse"}}}, "summary": "Delete User", "description": "Deletes the User from CoreStack system. This operation cannot be undone.", "operationId": "DeleteUser", "security": [{"auth_token": []}], "tags": ["Identity"]}, "parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string"}]}, "/users/filter-options": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/FilterOptions"}}}, "summary": "List Users", "description": "List all tenants, cloud providers and cloud accounts available within a CoreStack account.", "operationId": "ListUserFilterOptions", "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/users/forget_password/{user_id}": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ForgetPasswordResponse"}}}, "summary": "Forget Password", "description": "Forget the password of the user. This password will be used for login to portal and it will not affect the Access Key / Secret Key associated with the user", "operationId": "ForgetPassword", "parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string", "description": "User Id fetched from List User API"}, {"name": "ForgetPasswordRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ForgetPasswordRequest"}}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/users/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UserResponseList"}}}, "summary": "List Users", "description": "List all users within a CoreStack account.", "operationId": "ListUser", "parameters": [{"description": "Specify the master account id", "name": "master_account_id", "type": "string", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/users/notifications/{user_id}/{tenant_id}": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CountUserNotificationsResponse"}}}, "summary": "Check notification status", "description": "Check Notification status for user", "operationId": "CountUserNotifications", "parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string", "description": "Id of user"}, {"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Id of active tenant"}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/users/product-bundles": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/ProductBundleOptions"}}}}, "summary": "List Product Bundles and Role Types", "description": "List all product bundles and role types.", "operationId": "ListUserProductBundles", "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/users/profile/active-tenant": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UserProfileActiveTenantResponse"}}}, "summary": "Update active tenant for a user", "description": "Sets the active tenant for the user", "operationId": "UserProfileActiveTenant", "parameters": [{"name": "UserProfileActiveTenantRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UserProfileActiveTenantRequest"}}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/users/profile/{user_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ProfileResponse"}}}, "summary": "View User Profile", "description": "Describes an User by ID. This provides detailed information about a user profile", "operationId": "UserProfile", "parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string", "description": "User Id fetched from List User API"}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/users/resend_token/{user_id}": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ResendTokenResponseModel"}}}, "summary": "Resend User Token for Activation", "description": "Resend User Activation Link", "operationId": "ResendTokenUser", "parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string", "description": "Id of user"}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/users/reset_password": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ResetPasswordResponse"}}}, "summary": "Reset Password", "description": "Reset the password of the user.This password will be used for login to portal and it will not affect the Access Key / Secret Key associated with the user", "operationId": "UsersResetPassword", "parameters": [{"name": "ResetPasswordRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ResetPasswordRequest"}}], "tags": ["Identity"]}}, "/users/summary/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UserSummaryBatchResponse"}}}, "summary": "User Batch", "description": "User Summary Batch", "operationId": "UserSummaryBatch", "parameters": [{"name": "BatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BatchRequest"}}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/users/update/{user_id}": {"parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string"}], "put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UserUpdateResponse"}}}, "summary": "Update User", "description": "Updates a user and their role assignment in multiple tenants.", "operationId": "UpdateUser", "parameters": [{"name": "UserUpdateRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UserUpdateRequest"}}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/users/view/{user_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UserDescribeResponse"}}}, "summary": "Describe User", "description": "Describes an User by ID. This provides detailed information about a user", "operationId": "DescribeUser", "security": [{"auth_token": []}], "tags": ["Identity"]}, "parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string"}]}, "/users/{tenant_id}/notification_message": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/NotificationMessageResponse"}}}, "summary": "List notification message", "description": "This GET method is used to retrieve the Notification, Message a specific tenant.", "operationId": "NotificationMessageResource", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Specify the action name. Allowed values: view_notifications, if require to fetch data with filter wise use view_notifications", "enum": ["view_notifications"], "name": "action", "type": "string", "in": "query"}, {"description": "Specify value for display, if require to fetch data for filter wise use read, unread,all", "enum": ["read", "unread", "all"], "name": "display", "type": "string", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/users/{user_id}/activate_user/{auth_token}": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ActivateUserResponseModel"}}}, "summary": "Activate User", "description": "Activate user using auth token", "operationId": "AuthActivateUser", "parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string", "description": "Id of user"}, {"name": "auth_token", "in": "path", "required": true, "type": "string", "description": "auth_token to activate created user.Can be fetched from the activation email sent"}, {"name": "ActivateRequestModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ActivateRequestModel"}}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/users/{user_id}/verify_user/{auth_token}": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/VerifyUserResponseModel"}}}, "summary": "Verify User", "description": "Verify user using auth token", "operationId": "AuthVerifyUser", "parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string", "description": "Id of user"}, {"name": "auth_token", "in": "path", "required": true, "type": "string", "description": "auth_token to verify created user.Can be fetched from the activation email sent"}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/v1/attachment/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/Attachment"}}}}, "summary": "Get Attachments", "description": "Fetch a batch of Attachments", "operationId": "batch", "parameters": [{"name": "BatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BatchRequest"}}], "security": [{"auth_token": []}], "tags": ["Attachments"]}}, "/v1/attachment/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Created", "schema": {"$ref": "#/definitions/Attachment"}}}, "summary": "Create new Attachment", "description": "Create a new Attachment", "operationId": "create", "parameters": [{"name": "Attachment", "required": true, "in": "body", "schema": {"$ref": "#/definitions/Attachment"}}], "security": [{"auth_token": []}], "tags": ["Attachments"]}}, "/v1/attachment/item/{attachment_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Found", "schema": {"$ref": "#/definitions/Attachment"}}}, "summary": "Get an Attachment", "description": "Get an Attachment", "operationId": "get", "security": [{"auth_token": []}], "tags": ["Attachments"]}, "parameters": [{"name": "attachment_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Created", "schema": {"$ref": "#/definitions/Attachment"}}}, "summary": "Update an Attachment", "description": "Update an Attachment", "operationId": "update", "parameters": [{"name": "Attachment", "required": true, "in": "body", "schema": {"$ref": "#/definitions/Attachment"}}], "security": [{"auth_token": []}], "tags": ["Attachments"]}}, "/v1/attachment/item/{attachment_id}/stream": {"parameters": [{"name": "attachment_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Created", "schema": {"$ref": "#/definitions/Attachment"}}}, "summary": "Upload an Attachment", "description": "Upload an Attachment", "operationId": "upload", "parameters": [{"name": "InputStream", "required": true, "in": "body", "schema": {"$ref": "#/definitions/InputStream"}}], "security": [{"auth_token": []}], "consumes": ["application/octet-stream"], "tags": ["Attachments"]}}, "/v1/attachment/item/{attachment_id}/stream/{file_name}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Found", "schema": {"$ref": "#/definitions/InputStream"}}}, "summary": "Download an Attachment", "description": "Download an Attachment", "operationId": "download", "security": [{"auth_token": []}], "produces": ["application/octet-stream"], "tags": ["Attachments"]}, "parameters": [{"name": "attachment_id", "in": "path", "required": true, "type": "string"}, {"name": "file_name", "in": "path", "required": true, "type": "string"}]}, "/v1/auth/tokens": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Created", "schema": {"$ref": "#/definitions/AuthResponse"}}}, "summary": "Get Access Token", "description": "CoreStack requires Auth token to be passed in all the API headers. Auth token has to be generated and it is valid only for an hour. New token can be generated using this API. Extract Auth-token, Tenant Id & Account Id from the response. This will be required in most of the API calls", "operationId": "authToken", "parameters": [{"name": "AuthRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AuthRequest"}}], "tags": ["Authorization"]}}, "/v1/auth/tokens/refresh": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/RefreshTokenResponseModel"}}}, "summary": "Get Refresh Token", "description": "Token generated in authToken API will be valid for an hour. Post that access_token will automatically expire. When the access_token is expired, there are two options. 1) use the authToken API to generate a new token 2) use refreshToken API to extend the validity of the current token.The refreshed token will also expire after an hour, refer to expires_at in the response for the validity of the token. When the refreshed token also expires, call again the refreshToken API to extend it further. Like wise a token can extended 3 times, refer to refresh_count in the response. After 3 refresh attempts, token will expire and cannot be extended any further. Need to use authToken API to generate a new token.", "operationId": "RefreshToken", "parameters": [{"name": "RefreshTokenRequestModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RefreshTokenRequestModel"}}], "tags": ["Authorization"]}}, "/v1/aws-security-hub/configuration": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AwsSecurityHubConfigurationUpdateResponse"}}}, "summary": "Update AWS Security Hub Configuration", "description": "Update AWS SecurityHub Configuration", "operationId": "update@@@2", "parameters": [{"name": "AwsSecurityHubConfigurationUpdateRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AwsSecurityHubConfigurationUpdateRequest"}}], "security": [{"auth_token": []}], "tags": ["AWS Security Hub"]}}, "/v1/aws-security-hub/dashboard/findings/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/AwsSecurityHubFindingBatchResponse"}}}, "summary": "Returns a batch of Findings", "description": "Get AWS Security hub findings for all ids passed in the request.", "operationId": "FindingsBatch", "parameters": [{"name": "BatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BatchRequest"}}], "security": [{"auth_token": []}], "tags": ["AWS Security Hub"]}}, "/v1/aws-security-hub/dashboard/findings/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListResponse"}}}, "summary": "Returns a list AWS Security Hub Findings ids", "description": "List AWS Security Hub Finding Ids", "operationId": "list", "parameters": [{"name": "AwsSecurityHubFindingListRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AwsSecurityHubFindingListRequest"}}], "security": [{"auth_token": []}], "tags": ["AWS Security Hub"]}}, "/v1/aws-security-hub/findings/filters/product_name": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Finding Product Names Filter", "schema": {"$ref": "#/definitions/AwsSecurityHubFindingProductNameResponse"}}}, "summary": "Returns list of AWS securityhub finding product names with all possible filter values for the given tenant", "description": "Fetch all the product names filter values for the given tenant id", "operationId": "findingFiltersProductName", "parameters": [{"name": "AwsSecurityHubFindingProductNameRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AwsSecurityHubFindingProductNameRequest"}}], "security": [{"auth_token": []}], "tags": ["AWS Security Hub"]}}, "/v1/aws-security-hub/findings/filters/region": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Finding Region Filter", "schema": {"$ref": "#/definitions/AwsSecurityHubFindingRegionResponse"}}}, "summary": "Returns list of AWS securityhub finding Region with all possible filter values for the given cloud accounts", "description": "Fetch all the region filter values for the given tenant id", "operationId": "findingFiltersRegion", "parameters": [{"name": "AwsSecurityHubFindingRegionRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AwsSecurityHubFindingRegionRequest"}}], "security": [{"auth_token": []}], "tags": ["AWS Security Hub"]}}, "/v1/aws-security-hub/findings/filters/resource": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Finding Resource Filter", "schema": {"$ref": "#/definitions/AwsSecurityHubFindingResourcesResponse"}}}, "summary": "Returns list of AWS securityhub finding resource with all possible filter values for the given tenant", "description": "Fetch all the region filter values for the given tenant id", "operationId": "findingFiltersResource", "parameters": [{"name": "AwsSecurityHubFindingResourcesRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AwsSecurityHubFindingResourcesRequest"}}], "security": [{"auth_token": []}], "tags": ["AWS Security Hub"]}}, "/v1/aws-security-hub/findings/filters/severity": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Finding Severity Filter", "schema": {"$ref": "#/definitions/AwsSecurityHubFindingSeverityResponse"}}}, "summary": "Returns list of AWS securityhub finding severity with all possible filter values for the given tenant", "description": "Fetch all the severity filter values for the given tenant id", "operationId": "findingFiltersSeverity", "parameters": [{"name": "AwsSecurityHubFindingSeverityRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AwsSecurityHubFindingSeverityRequest"}}], "security": [{"auth_token": []}], "tags": ["AWS Security Hub"]}}, "/v1/aws-security-hub/{cloud_account_id}/configuration": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AwsSecurityHubConfigurationViewResponse"}}}, "summary": "Get AWS Security  Hub Configuration", "description": "Get AWS SecurityHub Configuration", "operationId": "viewConfiguration", "security": [{"auth_token": []}], "tags": ["AWS Security Hub"]}, "parameters": [{"name": "cloud_account_id", "in": "path", "required": true, "type": "string"}]}, "/v1/aws-security-hub/{cloud_account_id}/permission_validation/check": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AwsSecurityHubPermissionValidationDetailResponse"}}}, "summary": "Get AWS Security Hub Permission Validation Results", "description": "Get AWS SecurityHub Permission Validation Results", "operationId": "PermissionValidationResults", "security": [{"auth_token": []}], "tags": ["AWS Security Hub"]}, "parameters": [{"name": "cloud_account_id", "in": "path", "required": true, "type": "string"}]}, "/v1/aws-security-hub/{cloud_account_id}/permission_validation/start": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AwsSecurityHubPermissionValidationResponse"}}}, "summary": "Trigger AWS Security Hub Permission Validation", "description": "Trigger AWS SecurityHub Permission Validation", "operationId": "ValidatePermission", "security": [{"auth_token": []}], "tags": ["AWS Security Hub"]}, "parameters": [{"name": "cloud_account_id", "in": "path", "required": true, "type": "string"}]}, "/v1/aws-security-hub/{cloud_account_id}/region_details": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/AwsSecurityHubRegionDetail"}}}}, "summary": "Get AWS Security Hub Region Validation Results", "description": "Get AWS SecurityHub Region Results", "operationId": "AwsSecurityHubRegionResults", "security": [{"auth_token": []}], "tags": ["AWS Security Hub"]}, "parameters": [{"name": "cloud_account_id", "in": "path", "required": true, "type": "string"}]}, "/v1/aws-security-hub/{cloud_account_id}/sync": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AwsSecurityHubSyncDetailsResponse"}}}, "summary": "Get AWS Security Hub Sync Details", "description": "Get AWS SecurityHub Configuration", "operationId": "viewSyncDetails", "security": [{"auth_token": []}], "tags": ["AWS Security Hub"]}, "parameters": [{"name": "cloud_account_id", "in": "path", "required": true, "type": "string"}]}, "/v1/azure-devops/dashboard/buildlogs/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AzureDevOpsListBuildLogsResponse"}}}, "summary": "List the available logs associated with build in AzureDevops", "description": "List the available logs associated with build in AzureDevops", "operationId": "ListBuildLogs", "parameters": [{"name": "AzureDevOpsListBuildLogsRequests", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AzureDevOpsListBuildLogsRequests"}}], "security": [{"auth_token": []}], "tags": ["Azure DevOps Pipeline DashBoard"]}}, "/v1/azure-devops/dashboard/builds/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AzureDevOpsListBuildResponse"}}}, "summary": "List the available builds under pipelines in AzureDevops", "description": "List the available builds under pipelines in AzureDevops", "operationId": "ListBuilds", "parameters": [{"name": "AzureDevOpsListBuildRequests", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AzureDevOpsListBuildRequests"}}], "security": [{"auth_token": []}], "tags": ["Azure DevOps Pipeline DashBoard"]}}, "/v1/azure-devops/dashboard/buildworkitems/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AzureDevOpsBuildWorkItemsResponse"}}}, "summary": "List the available workitems associated with build in AzureDevops", "description": "List the available workitems associated with build in AzureDevops", "operationId": "ListBuildWorkItems", "parameters": [{"name": "AzureDevOpsBuildWorkItemsRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AzureDevOpsBuildWorkItemsRequest"}}], "security": [{"auth_token": []}], "tags": ["Azure DevOps Pipeline DashBoard"]}}, "/v1/azure-devops/dashboard/pipelines/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AzureDevOpsListPipelinesResponse"}}}, "summary": "List the available projects under account in AzureDevops", "description": "List the available projects under account in AzureDevops", "operationId": "ListPipelines", "parameters": [{"name": "AzureDevOpsListPipelinesRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AzureDevOpsListPipelinesRequest"}}], "security": [{"auth_token": []}], "tags": ["Azure DevOps Pipeline DashBoard"]}}, "/v1/azure-devops/dashboard/projects/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AzureDevOpsPipelineListProjectsResponse"}}}, "summary": "List the available project under AzureDevops", "description": "List the available projects under account in AzureDevops", "operationId": "ListProjects", "parameters": [{"name": "AzureDevOpsPipelineListProjectsRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AzureDevOpsPipelineListProjectsRequest"}}], "security": [{"auth_token": []}], "tags": ["Azure DevOps Pipeline DashBoard"]}}, "/v1/background_job/activation": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Updated", "schema": {"type": "boolean"}}}, "summary": "Sets the next activation time for the Background Job", "description": "Changes the activation of a Background Job", "operationId": "BackgroundJobActivation", "parameters": [{"name": "BackgroundJobUpdateActivationRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BackgroundJobUpdateActivationRequest"}}], "security": [{"auth_token": []}], "tags": ["Background Jobs"]}}, "/v1/background_job/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/BackgroundJobBatchResponse"}}}, "summary": "Returns a batch of BackgroundJobs", "description": "Get details for the Background Job ids passed in the request", "operationId": "BackgroundJobBatch", "parameters": [{"name": "BackgroundJobBatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BackgroundJobBatchRequest"}}], "security": [{"auth_token": []}], "tags": ["Background Jobs"]}}, "/v1/background_job/cancel": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Cancelled", "schema": {"type": "boolean"}}}, "summary": "Requests the cancellation of a job", "description": "Request a Background Job to stop processing as soon as possible", "operationId": "BackgroundJobCancel", "parameters": [{"name": "RecordIdentity", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecordIdentity"}}], "security": [{"auth_token": []}], "tags": ["Background Jobs"]}}, "/v1/background_job/invalidation": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Invalidated", "schema": {"type": "boolean"}}}, "description": "Request a Background Job to stop processing as soon as possible", "operationId": "BackgroundJobInvalidation", "parameters": [{"name": "BackgroundJobInvalidation", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BackgroundJobInvalidation"}}], "security": [{"auth_token": []}], "tags": ["Background Jobs"]}}, "/v1/background_job/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/ListDetailedResponse"}}}, "summary": "Returns a list of BackgroundJobs ids", "description": "Get the list of all Background Jobs.", "operationId": "BackgroundJobList", "parameters": [{"name": "BackgroundJobListRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BackgroundJobListRequest"}}], "security": [{"auth_token": []}], "tags": ["Background Jobs"]}}, "/v1/background_job/log": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Unknown Background Job", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"type": "array", "items": {"$ref": "#/definitions/BackgroundJobLog"}}}}, "summary": "Returns a batch of log entries for BackgroundJob", "description": "Get log entries for the Background Job passed in the request", "operationId": "BackgroundJobLog", "parameters": [{"name": "BackgroundJobLogRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BackgroundJobLogRequest"}}], "security": [{"auth_token": []}], "tags": ["Background Jobs"]}}, "/v1/background_job/logger/set-level": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/BackgroundJobLogger"}}}, "summary": "Sets the level of a logger", "description": "Set the level of a logger for Background Jobs workers.\ns", "operationId": "BackgroundJobLoggerSet", "parameters": [{"name": "BackgroundJobLogger", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BackgroundJobLogger"}}], "security": [{"auth_token": []}], "tags": ["Background Jobs"]}}, "/v1/background_job/loggers": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"type": "array", "items": {"$ref": "#/definitions/BackgroundJobLogger"}}}}, "summary": "Returns a list of BackgroundJobs threads", "description": "Get loggers from all Background Jobs workers.", "operationId": "BackgroundJobLoggers", "parameters": [{"name": "BackgroundJobLoggerRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BackgroundJobLoggerRequest"}}], "security": [{"auth_token": []}], "tags": ["Background Jobs"]}}, "/v1/background_job/priority": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Updated", "schema": {"type": "boolean"}}}, "summary": "Sets the priority on Background Job", "description": "Changes the priority of a Background Job", "operationId": "BackgroundJobPriority", "parameters": [{"name": "BackgroundJobUpdatePriorityRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BackgroundJobUpdatePriorityRequest"}}], "security": [{"auth_token": []}], "tags": ["Background Jobs"]}}, "/v1/background_job/queue": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Queue outcome", "schema": {"$ref": "#/definitions/BackgroundJobQueueResponse"}}}, "summary": "Queues a Background Job", "description": "Queue a Background Job", "operationId": "BackgroundJobQueue", "parameters": [{"name": "BackgroundJobQueueRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BackgroundJobQueueRequest"}}], "security": [{"auth_token": []}], "tags": ["Background Jobs"]}}, "/v1/background_job/stats": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/BackgroundJobStatisticsResponse"}}}, "summary": "Returns statistics about the selected executors", "description": "Get statistics from all Background Jobs workers.", "operationId": "BackgroundJobStats", "parameters": [{"name": "BackgroundJobStatisticsRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BackgroundJobStatisticsRequest"}}], "security": [{"auth_token": []}], "tags": ["Background Jobs"]}}, "/v1/background_job/threads": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"type": "array", "items": {"$ref": "#/definitions/BackgroundJobThread"}}}}, "summary": "Returns a list of BackgroundJobs threads", "description": "Get threads from all Background Jobs workers.", "operationId": "BackgroundJobThreads", "parameters": [{"name": "BackgroundJobThreadRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BackgroundJobThreadRequest"}}], "security": [{"auth_token": []}], "tags": ["Background Jobs"]}}, "/v1/background_job_handler/configuration": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/BackgroundJobHandlerConfiguration"}}}, "summary": "Fetch the configuration of a Background Job Handler", "description": "Request the configuration for a Background Job Handler", "operationId": "GetBackgroundJobHandlerConfiguration", "parameters": [{"name": "BackgroundJobHandlerConfigurationRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BackgroundJobHandlerConfigurationRequest"}}], "security": [{"auth_token": []}], "tags": ["Background Jobs"]}, "put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Updated", "schema": {"$ref": "#/definitions/BackgroundJobHandlerConfiguration"}}}, "summary": "Update the configuration of a Background Job Handler", "description": "Update the configuration for a Background Job Handler", "operationId": "UpdateBackgroundJobHandlerConfiguration", "parameters": [{"name": "BackgroundJobHandlerConfigurationUpdateRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BackgroundJobHandlerConfigurationUpdateRequest"}}], "security": [{"auth_token": []}], "tags": ["Background Jobs"]}}, "/v1/background_job_handler/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/BackgroundJobHandlerListResponse"}}}, "summary": "Lists the active Background Job Handlers", "description": "List the active Background Job Handlers", "operationId": "ListBackgroundJobHandlers", "parameters": [{"name": "BackgroundJobHandlerConfigurationRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BackgroundJobHandlerConfigurationRequest"}}], "security": [{"auth_token": []}], "tags": ["Background Jobs"]}}, "/v1/chatbot": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/ChatBotResponseModel"}}}}, "summary": "Get Chat Bot Response Model", "description": "View Rasa Chat Bot Sender Response", "operationId": "RasaChatBotSenderResponse", "parameters": [{"name": "ChatBotRequestModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ChatBotRequestModel"}}], "security": [{"auth_token": []}], "tags": ["Chatbot"]}}, "/v1/cost/costoptimizer/optimizerate/long_term_savings/recommended_reservations/savings_summary": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/RecommendedReservationsSavingsSummaryResponse"}}}, "summary": "Saving Summary for Recommended Reservations", "description": "Recommended Reservations Savings Summary", "operationId": "RecommendedReservationsSavingsSummary", "parameters": [{"name": "RecommendedReservationsSavingsSummaryRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecommendedReservationsSavingsSummaryRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/v1/cost/tags/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/CostTagBatchResponse"}}}, "summary": "Returns a batch of CostTag", "description": "Batch Tags", "operationId": "CostTagBatch", "parameters": [{"name": "BatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BatchRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/v1/cost/tags/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/ListResponse"}}}, "summary": "Returns a list of CostTag ids", "description": "List Tags", "operationId": "CostTagList", "parameters": [{"name": "CostTagListRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CostTagListRequest"}}], "security": [{"auth_token": []}], "tags": ["Cost"]}}, "/v1/custom_tags/cloud_account/{cloud_account_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "boolean"}}}, "summary": "Delete CustomTags by Cloud Account", "description": "This Delete method is used to delete the CustomTags for a specific CloudAccount.", "operationId": "deleteCloudAccountCustomTags", "parameters": [{"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the cloud account id to delete tags, cloud account id is unique can be obtained from the list cloud account api."}], "security": [{"auth_token": []}], "tags": ["Custom Tags"]}, "get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "description": "List of tag key/value pairs", "items": {"$ref": "#/definitions/KeyValuePair"}}}}, "summary": "List CustomTags by Cloud Account", "description": "This GET method is used to retrieve the list of CustomTags available for a specific CloudAccount.", "operationId": "getCloudAccountCustomTags", "parameters": [{"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the cloud account id to list custom tags, cloud account id is unique can be obtained from the list cloud account api."}], "security": [{"auth_token": []}], "tags": ["Custom Tags"]}, "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "boolean"}}}, "summary": "Set CustomTags by Cloud Account", "description": "This Post method is used to update the list of CustomTags for a specific CloudAccount.", "operationId": "setCloudAccountCustomTags", "parameters": [{"name": "cloud_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the cloud account id to update, cloud account id is unique can be obtained from the list cloud account api."}, {"name": "payload", "required": true, "in": "body", "schema": {"type": "array", "description": "List of tag key/value pairs", "items": {"$ref": "#/definitions/KeyValuePair"}}}], "security": [{"auth_token": []}], "tags": ["Custom Tags"]}}, "/v1/custom_tags/master_account/{master_account_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "boolean"}}}, "summary": "Delete CustomTags by Master Account", "description": "This delete method is used to delete the CustomTags for a specific MasterAccount", "operationId": "deleteMasterAccountCustomTags", "parameters": [{"name": "master_account_id", "in": "path", "required": true, "type": "string", "description": "specify the master account id"}], "security": [{"auth_token": []}], "tags": ["Custom Tags"]}, "get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "description": "List of tag key/value pairs", "items": {"$ref": "#/definitions/KeyValuePair"}}}}, "summary": "List CustomTags by Master Account", "description": "This GET method is used to retrieve the list of CustomTags available for a specific MasterAccount.", "operationId": "getMasterAccountCustomTags", "parameters": [{"name": "master_account_id", "in": "path", "required": true, "type": "string", "description": "specify the master account id"}], "security": [{"auth_token": []}], "tags": ["Custom Tags"]}, "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}}, "summary": "Set CustomTags by Master Account", "description": "This Post method is used to update the list of CustomTags for a specific MasterAccount.", "operationId": "setMasterAccountCustomTags", "parameters": [{"name": "master_account_id", "in": "path", "required": true, "type": "string", "description": "specify the master account id"}, {"name": "payload", "required": true, "in": "body", "schema": {"type": "array", "description": "List of tag key/value pairs", "items": {"$ref": "#/definitions/KeyValuePair"}}}], "security": [{"auth_token": []}], "tags": ["Custom Tags"]}}, "/v1/custom_tags/tenant/{tenant_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "boolean"}}}, "summary": "Delete CustomTags by Tenant", "description": "This Delete method is used to delete the CustomTags for a specific Tenant.", "operationId": "deleteTenantCustomTags", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}], "security": [{"auth_token": []}], "tags": ["Custom Tags"]}, "get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "description": "List of tag key/value pairs", "items": {"$ref": "#/definitions/KeyValuePair"}}}}, "summary": "List CustomTags by Tenant", "description": "This GET method is used to retrieve the list of CustomTags available for a specific Tenant.", "operationId": "getTenantCustomTags", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}], "security": [{"auth_token": []}], "tags": ["Custom Tags"]}, "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "boolean"}}}, "summary": "Set CustomTags by Tenant", "description": "This Post method is used to update the list of CustomTags for a specific Tenant.", "operationId": "setTenantCustomTags", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "payload", "required": true, "in": "body", "schema": {"type": "array", "description": "List of tag key/value pairs", "items": {"$ref": "#/definitions/KeyValuePair"}}}], "security": [{"auth_token": []}], "tags": ["Custom Tags"]}}, "/v1/executive_dashboard/active": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Active Dashboard", "schema": {"type": "string"}}}, "summary": "Get Active Dashboard Definition", "description": "Get active Executive Dashboard", "operationId": "get-active", "security": [{"auth_token": []}], "tags": ["Dashboard Definitions"]}, "put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Active Description Set", "schema": {"type": "string"}}}, "summary": "Set Active Dashboard Definition", "operationId": "set-active", "parameters": [{"description": "ID of Dashboard Definition.", "name": "id", "type": "string", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Dashboard Definitions"]}}, "/v1/executive_dashboard/all": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/RecordIdentity"}}}}, "summary": "Get all Dashboard Definitions", "operationId": "get-all", "parameters": [{"description": "Filter to shared dashboards.", "in": "query", "type": "boolean", "name": "onlyShared"}], "security": [{"auth_token": []}], "tags": ["Dashboard Definitions"]}}, "/v1/executive_dashboard/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/DashboardDefinition"}}}}, "summary": "Get Dashboard Definitions", "description": "Batch Executive Dashboard definitions", "operationId": "batch@@@2", "parameters": [{"name": "RecordIdentityBatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecordIdentityBatchRequest"}}], "security": [{"auth_token": []}], "tags": ["Dashboard Definitions"]}}, "/v1/executive_dashboard/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Created", "schema": {"$ref": "#/definitions/DashboardDefinition"}}}, "summary": "Create new Dashboard Definition", "description": "Create Executive Dashboard definition", "operationId": "create@@@2", "security": [{"auth_token": []}], "tags": ["Dashboard Definitions"]}}, "/v1/executive_dashboard/item/{dashboard_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Removed", "schema": {"type": "boolean"}}}, "summary": "Delete Dashboard Definition", "operationId": "remove", "parameters": [{"name": "dashboard_id", "in": "path", "required": true, "type": "string", "description": "ID of Dashboard Definition."}], "security": [{"auth_token": []}], "tags": ["Dashboard Definitions"]}, "get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/DashboardDefinition"}}}, "summary": "Get Dashboard Definition", "operationId": "get@@@3", "parameters": [{"name": "dashboard_id", "in": "path", "required": true, "type": "string", "description": "ID of Dashboard Definition."}], "security": [{"auth_token": []}], "tags": ["Dashboard Definitions"]}}, "/v1/executive_dashboard/item/{dashboard_id}/acl": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Removed", "schema": {"type": "boolean"}}}, "summary": "Delete Dashboard Definition", "operationId": "removeAcl", "parameters": [{"name": "dashboard_id", "in": "path", "required": true, "type": "string", "description": "ID of Dashboard Definition."}], "security": [{"auth_token": []}], "tags": ["Dashboard Definitions"]}, "get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/DashboardDefinitionAcl"}}}, "summary": "Get Dashboard Definition ACL", "operationId": "getAcl", "parameters": [{"name": "dashboard_id", "in": "path", "required": true, "type": "string", "description": "ID of Dashboard Definition."}], "security": [{"auth_token": []}], "tags": ["Dashboard Definitions"]}, "put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Removed", "schema": {"type": "boolean"}}}, "summary": "Update Dashboard Definition ACL", "operationId": "putAcl", "parameters": [{"name": "dashboard_id", "in": "path", "required": true, "type": "string", "description": "ID of Dashboard Definition."}, {"name": "DashboardDefinitionAcl", "required": true, "in": "body", "schema": {"$ref": "#/definitions/DashboardDefinitionAcl"}}], "security": [{"auth_token": []}], "tags": ["Dashboard Definitions"]}}, "/v1/executive_dashboard/item/{dashboard_id}/acl_context": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Evaluated", "schema": {"$ref": "#/definitions/DashboardDefinitionAclContext"}}}, "summary": "Evaluate Dashboard Definition ACL context", "operationId": "contextAcl", "parameters": [{"name": "dashboard_id", "in": "path", "required": true, "type": "string", "description": "ID of Dashboard Definition."}], "security": [{"auth_token": []}], "tags": ["Dashboard Definitions"]}}, "/v1/executive_dashboard/item/{dashboard_id}/acl_eval": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Evaluated", "schema": {"$ref": "#/definitions/DashboardDefinitionAclEval"}}}, "summary": "Evaluate Dashboard Definition ACL", "operationId": "evalAcl", "parameters": [{"name": "dashboard_id", "in": "path", "required": true, "type": "string", "description": "ID of Dashboard Definition."}], "security": [{"auth_token": []}], "tags": ["Dashboard Definitions"]}}, "/v1/executive_dashboard/item/{dashboard_id}/history": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/DashboardDefinitionVersion"}}}}, "summary": "Get the history of a Dashboard Definition", "operationId": "get-history", "parameters": [{"name": "dashboard_id", "in": "path", "required": true, "type": "string", "description": "ID of Dashboard Definition."}], "security": [{"auth_token": []}], "tags": ["Dashboard Definitions"]}}, "/v1/executive_dashboard/portals/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Mapping", "schema": {"type": "array", "items": {"$ref": "#/definitions/DashboardDefinitionToPortal"}}}}, "summary": "List all accessible portals", "description": "List portals", "operationId": "list-portals", "security": [{"auth_token": []}], "tags": ["Dashboard Definitions"]}}, "/v1/executive_dashboard/portals/resolve": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Resolved", "schema": {"type": "array", "items": {"$ref": "#/definitions/RecordIdentity"}}}}, "summary": "Resolve a portal path to its Dashboard Definition version", "operationId": "resolve-portal", "parameters": [{"description": "Path of the Portal page.", "name": "path", "type": "string", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Dashboard Definitions"]}}, "/v1/executive_dashboard_version/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/DashboardDefinitionVersion"}}}}, "summary": "Get Dashboard Versions", "description": "Batch Executive Dashboard versions", "operationId": "batch@@@3", "parameters": [{"name": "RecordIdentityBatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecordIdentityBatchRequest"}}], "security": [{"auth_token": []}], "tags": ["Dashboard Definition Versions"]}}, "/v1/executive_dashboard_version/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Created", "schema": {"$ref": "#/definitions/DashboardDefinitionVersion"}}}, "summary": "Create new Dashboard Definition Version", "description": "Create Executive Dashboard version", "operationId": "create@@@3", "parameters": [{"name": "DashboardDefinitionVersion", "required": true, "in": "body", "schema": {"$ref": "#/definitions/DashboardDefinitionVersion"}}], "security": [{"auth_token": []}], "tags": ["Dashboard Definition Versions"]}}, "/v1/executive_dashboard_version/item/{version_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/DashboardDefinitionVersion"}}}, "summary": "Get Dashboard Definition Version", "operationId": "get@@@4", "parameters": [{"name": "version_id", "in": "path", "required": true, "type": "string", "description": "ID of Dashboard Definition Version."}], "security": [{"auth_token": []}], "tags": ["Dashboard Definition Versions"]}}, "/v1/executive_dashboard_version/item/{version_id}/make-head": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/DashboardDefinitionVersion"}}}, "summary": "Make Dashboard Definition Version the Head version", "operationId": "make-head", "parameters": [{"name": "version_id", "in": "path", "required": true, "type": "string", "description": "ID of Dashboard Definition Version."}], "security": [{"auth_token": []}], "tags": ["Dashboard Definition Versions"]}}, "/v1/executive_dashboard_version/item/{version_id}/make-release": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/DashboardDefinitionVersion"}}}, "summary": "Make Dashboard Definition Version the Release version", "operationId": "make-release", "parameters": [{"name": "version_id", "in": "path", "required": true, "type": "string", "description": "ID of Dashboard Definition Version."}], "security": [{"auth_token": []}], "tags": ["Dashboard Definition Versions"]}}, "/v1/executive_dashboard_version/parseImport": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Parsed", "schema": {"$ref": "#/definitions/DashboardConfiguration"}}}, "summary": "Parse Dashboard Definition Version", "description": "Validate Executive Dashboard version", "operationId": "parse-import", "parameters": [{"name": "RawImport", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RawImport"}}], "security": [{"auth_token": []}], "tags": ["Dashboard Definition Versions"]}}, "/v1/integrations/servicenow/cmdb_config/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ServiceNowCmdbConfigCreateResponse"}}}, "summary": "Create ServiceNow CMDB Configuration", "description": "Create ServiceNowCMDBConfiguration", "operationId": "create@@@4", "parameters": [{"name": "ServiceNowCmdbConfigCreateRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ServiceNowCmdbConfigCreateRequest"}}], "security": [{"auth_token": []}], "tags": ["ServiceNow CMDB"]}}, "/v1/integrations/servicenow/cmdb_config/delete": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ServiceNowCmdbConfigDeleteResponse"}}}, "summary": "Delete ServiceNow CMDB Configuration", "description": "Delete ServiceNowCMDBConfiguration", "operationId": "remove@@@2", "parameters": [{"name": "ServiceNowCmdbConfigDeleteRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ServiceNowCmdbConfigDeleteRequest"}}], "security": [{"auth_token": []}], "tags": ["ServiceNow CMDB"]}}, "/v1/integrations/servicenow/cmdb_config/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/ServiceNowCmdbConfig"}}}}, "summary": "List ServiceNow CMDB Configurations", "description": "List ServiceNow CMDB Configuration", "operationId": "list@@@2", "parameters": [{"name": "ServiceNowCmdbConfigListRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ServiceNowCmdbConfigListRequest"}}], "security": [{"auth_token": []}], "tags": ["ServiceNow CMDB"]}}, "/v1/integrations/servicenow/cmdb_config/list_cmdb_ci_class_attributes": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ServiceNowCmdbListClassAttributesResponse"}}}, "summary": "List ServiceNow CMDB CI Class Attributes", "description": "View CMDB CI Class Attributes", "operationId": "viewCMDBCIClassAttributes", "parameters": [{"name": "ServiceNowCmdbListClassAttributesRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ServiceNowCmdbListClassAttributesRequest"}}], "security": [{"auth_token": []}], "tags": ["ServiceNow CMDB"]}}, "/v1/integrations/servicenow/cmdb_config/list_cmdb_ci_classes": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ServiceNowCmdbListCmdbClassResponse"}}}, "summary": "List ServiceNow CMDB CI Classes", "description": "View CMDB CI Class List", "operationId": "viewCMDBCIClasses", "parameters": [{"name": "ServiceNowCmdbListCmdbClassRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ServiceNowCmdbListCmdbClassRequest"}}], "security": [{"auth_token": []}], "tags": ["ServiceNow CMDB"]}}, "/v1/integrations/servicenow/cmdb_config/list_inventory_attributes": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/ServiceNowCmdbInventoryAttribute"}}}}, "summary": "List Inventory Attributes for Resource", "description": "View Resource Inventory Schema", "operationId": "viewInventorySchema", "parameters": [{"name": "ServiceNowCmdbViewInventorySchemaRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ServiceNowCmdbViewInventorySchemaRequest"}}], "security": [{"auth_token": []}], "tags": ["ServiceNow CMDB"]}}, "/v1/integrations/servicenow/cmdb_config/update": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ServiceNowCmdbConfigUpdateResponse"}}}, "summary": "Update ServiceNow CMDB Configuration", "description": "Update ServiceNowCMDBConfiguration", "operationId": "update@@@3", "parameters": [{"name": "ServiceNowCmdbConfigUpdateRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ServiceNowCmdbConfigUpdateRequest"}}], "security": [{"auth_token": []}], "tags": ["ServiceNow CMDB"]}}, "/v1/integrations/servicenow/cmdb_config/view": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ServiceNowCmdbConfigView"}}}, "summary": "View ServiceNow CMDB Configuration", "description": "View ServiceNowCMDBConfiguration", "operationId": "view", "parameters": [{"name": "ServiceNowCmdbConfigViewRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ServiceNowCmdbConfigViewRequest"}}], "security": [{"auth_token": []}], "tags": ["ServiceNow CMDB"]}}, "/v1/integrations/servicenow/cmdb_config/view_hierarchy": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ServiceNowCmdbCloudSchemaCategory"}}}, "summary": "View Cloud Schema Hierarchy", "description": "View Cloud Hierarchy", "operationId": "viewServiceHierarchy", "parameters": [{"name": "ServiceNowCmdbCloudSchemaRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ServiceNowCmdbCloudSchemaRequest"}}], "security": [{"auth_token": []}], "tags": ["ServiceNow CMDB"]}}, "/v1/integrations/servicenow/cmdb_sync/progress/{cloud_account_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ServiceNowCmdbSyncProgressResponse"}}}, "summary": "Cmdb Sync Progress", "description": "CMDB Sync Progress", "operationId": "progress", "security": [{"auth_token": []}], "tags": ["ServiceNow CMDB"]}, "parameters": [{"name": "cloud_account_id", "in": "path", "required": true, "type": "string"}]}, "/v1/integrations/servicenow/cmdb_sync/trigger": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ServiceNowCmdbSyncResponse"}}}, "summary": "Trigger CMDB sync", "description": "Trigger On Demand ServiceNow CMDB sync for a Cloud Account", "operationId": "sync", "parameters": [{"name": "ServiceNowCmdbSyncRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ServiceNowCmdbSyncRequest"}}], "security": [{"auth_token": []}], "tags": ["ServiceNow CMDB"]}}, "/v1/master_accounts": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Created", "schema": {"$ref": "#/definitions/CreateMasterAccountResponse"}}}, "description": "Creates a new master account under a CoreStack account. There can be multiple tenants within a CoreStack account.", "operationId": "createMasterAccount", "parameters": [{"name": "CreateMasterAccountRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/CreateMasterAccountRequest"}}], "security": [{"auth_token": []}], "tags": ["MasterAccount"]}}, "/v1/master_accounts/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/MasterAccountBatchResponse"}}}, "description": "Master Account Batch", "operationId": "MasterAccountBatch", "parameters": [{"name": "BatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BatchRequest"}}], "security": [{"auth_token": []}], "tags": ["MasterAccount"]}}, "/v1/master_accounts/item/{master_account_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/MasterAccountDeleteResponse"}}}, "summary": "Master Account Delete", "description": "Delete the master account", "operationId": "MasterAccountDelete", "security": [{"auth_token": []}], "tags": ["MasterAccount"]}, "get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/MasterAccountDetails"}}}, "summary": "Master Account View", "description": "View the master account", "operationId": "MasterAccountView", "security": [{"auth_token": []}], "tags": ["MasterAccount"]}, "parameters": [{"name": "master_account_id", "in": "path", "required": true, "type": "string"}]}, "/v1/master_accounts/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListResponse"}}}, "description": "List master account", "operationId": "ListMasterAccount", "parameters": [{"name": "MasterAccountListRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/MasterAccountListRequest"}}], "security": [{"auth_token": []}], "tags": ["MasterAccount"]}}, "/v1/master_accounts/{master_account_id}/tenants": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/MasterAccountTenantSummary"}}}}, "summary": "Tenant List by Master Account", "description": "Tenant List by Master Account", "operationId": "TenantListByMasterAccount", "security": [{"auth_token": []}], "tags": ["Identity"]}, "parameters": [{"name": "master_account_id", "in": "path", "required": true, "type": "string"}]}, "/v1/master_accounts/{master_account_id}/user_groups": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/MasterAccountUserGroupSummary"}}}}, "summary": "User Group List By Master Account", "description": "User Group List By Master Account", "operationId": "UserGroupListByMasterAccount", "security": [{"auth_token": []}], "tags": ["UserGroups"]}, "parameters": [{"name": "master_account_id", "in": "path", "required": true, "type": "string"}]}, "/v1/roles/summary/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/RoleSummaryBatchResponse"}}}, "summary": "Role Batch", "description": "Role Batch", "operationId": "RoleBatch", "parameters": [{"name": "BatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BatchRequest"}}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/v1/runbook/{tenant_id}/AWS/automation/{document_id}": {"parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}, {"name": "document_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Created", "schema": {"$ref": "#/definitions/AwsSsmExecuteDocumentResponse"}}}, "summary": "Execute automation document", "description": "Execute a automation document with all required parameters", "operationId": "AutomationExecute", "parameters": [{"name": "AwsSsmExecuteAutomationDocumentRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AwsSsmExecuteAutomationDocumentRequest"}}], "security": [{"auth_token": []}], "tags": ["AwsSsm Automation"]}}, "/v1/runbook/{tenant_id}/AWS/automation/{execution_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Created", "schema": {"$ref": "#/definitions/AwsSsmExecuteDocumentResponse"}}}, "summary": "Cancel Automation Execution", "description": "Cancel a specific automation document execution", "operationId": "CancelAutomation", "security": [{"auth_token": []}], "tags": ["AwsSsm Automation"]}, "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}, {"name": "execution_id", "in": "path", "required": true, "type": "string"}]}, "/v1/runbook/{tenant_id}/AWS/command/{document_id}": {"parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}, {"name": "document_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Created", "schema": {"$ref": "#/definitions/AwsSsmExecuteDocumentResponse"}}}, "summary": "Execute command document", "description": "Execute a command document with all required parameters", "operationId": "CommandExecute", "parameters": [{"name": "AwsSsmExecuteCommandDocumentRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AwsSsmExecuteCommandDocumentRequest"}}], "security": [{"auth_token": []}], "tags": ["AwsSsm Command"]}}, "/v1/runbook/{tenant_id}/AWS/command/{execution_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Created", "schema": {"$ref": "#/definitions/AwsSsmExecuteDocumentResponse"}}}, "summary": "Cancel command execution", "description": "Cancel a specific command document execution", "operationId": "CancelCommand", "security": [{"auth_token": []}], "tags": ["AwsSsm Command"]}, "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}, {"name": "execution_id", "in": "path", "required": true, "type": "string"}]}, "/v1/runbook/{tenant_id}/AWS/document/{document_id}/versions/batch": {"parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}, {"name": "document_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/AwsSsmDocumentVersionBatchResponse"}}}, "summary": "Batch Document versions", "description": "List document version batches", "operationId": "DocumentVersionsBatch", "parameters": [{"name": "RecordIdentityBatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecordIdentityBatchRequest"}}], "security": [{"auth_token": []}], "tags": ["AwsSsm"]}}, "/v1/runbook/{tenant_id}/AWS/document/{document_id}/versions/history": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/AwsSsmListDocumentVersion"}}}}, "summary": "List Document versions", "description": "List all document versions", "operationId": "DocumentVersionsList", "security": [{"auth_token": []}], "tags": ["AwsSsm"]}, "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}, {"name": "document_id", "in": "path", "required": true, "type": "string"}]}, "/v1/runbook/{tenant_id}/AWS/document/{document_type}/filters": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/AwsSsmDocumentFilter"}}}, "summary": "List document filters", "description": "List Document Filters", "operationId": "ListDocumentFilters", "security": [{"auth_token": []}], "tags": ["AwsSsm"]}, "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}, {"name": "document_type", "in": "path", "required": true, "type": "string"}]}, "/v1/runbook/{tenant_id}/AWS/documents/batch": {"parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/AwsSsmDocumentsBatchResponse"}}}, "summary": "Batch SSM Documents", "description": "List all SSM document batches", "operationId": "DocumentBatch", "parameters": [{"name": "RecordIdentityBatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecordIdentityBatchRequest"}}], "security": [{"auth_token": []}], "tags": ["AwsSsm"]}}, "/v1/runbook/{tenant_id}/AWS/documents/execution/batch": {"parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/AwsSsmDocumentExecutionBatchResponse"}}}, "summary": "Batch executions", "description": "List all document execution batches", "operationId": "ExecutionBatch", "parameters": [{"name": "RecordIdentityBatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecordIdentityBatchRequest"}}], "security": [{"auth_token": []}], "tags": ["AwsSsm"]}}, "/v1/runbook/{tenant_id}/AWS/documents/execution/list": {"parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/ListResponse"}}}, "summary": "List executions", "description": "List all document executions", "operationId": "ExecutionList", "parameters": [{"name": "AwsSsmListDocumentExecutionRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AwsSsmListDocumentExecutionRequest"}}], "security": [{"auth_token": []}], "tags": ["AwsSsm"]}}, "/v1/runbook/{tenant_id}/AWS/documents/list": {"parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/ListResponse"}}}, "summary": "List Documents", "description": "List all SSM Documents", "operationId": "DocumentList", "parameters": [{"name": "AwsSsmListDocumentsRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AwsSsmListDocumentsRequest"}}], "security": [{"auth_token": []}], "tags": ["AwsSsm"]}}, "/v1/runbook/{tenant_id}/AWS/documents/sync": {"parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/AwsSsmDocumentSyncResponse"}}}, "summary": "Manual document sync", "description": "Sync SSM Documents for mentioned cloud accounts", "operationId": "DocumentSync", "parameters": [{"name": "AwsSsmDocumentSyncRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AwsSsmDocumentSyncRequest"}}], "security": [{"auth_token": []}], "tags": ["AwsSsm"]}}, "/v1/runbook/{tenant_id}/AWS/execution/filters": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/AwsSsmExecutionFilter"}}}, "summary": "List execution filters", "description": "List Execution Filters", "operationId": "listExecutionFilters", "security": [{"auth_token": []}], "tags": ["AwsSsm"]}, "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}]}, "/v1/runbook/{tenant_id}/AWS/execution/group/batch": {"parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/AwsSsmExecutionGroupBatchResponse"}}}, "summary": "Batch execution job groups", "description": "List all document execution group batches", "operationId": "ExecutionGroupsBatch", "parameters": [{"name": "RecordIdentityBatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecordIdentityBatchRequest"}}], "security": [{"auth_token": []}], "tags": ["AwsSsm"]}}, "/v1/runbook/{tenant_id}/AWS/execution/group/list": {"parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/ListResponse"}}}, "summary": "List execution job groups", "description": "List all document execution groups", "operationId": "ExecutionGroupsList", "parameters": [{"name": "AwsSsmListExecutionGroupRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AwsSsmListExecutionGroupRequest"}}], "security": [{"auth_token": []}], "tags": ["AwsSsm"]}}, "/v1/runbook/{tenant_id}/AWS/execution/instance/batch": {"parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/AwsSsmCommandInstanceExecutionBatchResponse"}}}, "summary": "Batch execution instances", "description": "List all document execution Instance batch", "operationId": "ExecutionInstanceBatch", "parameters": [{"name": "RecordIdentityBatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecordIdentityBatchRequest"}}], "security": [{"auth_token": []}], "tags": ["AwsSsm Command"]}}, "/v1/runbook/{tenant_id}/AWS/execution/instance/list/{execution_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/ListResponse"}}}, "summary": "List execution instances", "description": "List all document execution Instances", "operationId": "ExecutionInstanceList", "security": [{"auth_token": []}], "tags": ["AwsSsm Command"]}, "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}, {"name": "execution_id", "in": "path", "required": true, "type": "string"}]}, "/v1/runbook/{tenant_id}/AWS/execution/step/batch": {"parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/AwsSsmExecutionStepBatchResponse"}}}, "summary": "Batch execution steps", "description": "List all document execution steps batch", "operationId": "ExecutionStepBatch", "parameters": [{"name": "RecordIdentityBatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecordIdentityBatchRequest"}}], "security": [{"auth_token": []}], "tags": ["AwsSsm Automation"]}}, "/v1/runbook/{tenant_id}/AWS/execution/step/list/{execution_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/ListResponse"}}}, "summary": "List execution steps", "description": "List all document execution Steps", "operationId": "ExecutionStepList", "security": [{"auth_token": []}], "tags": ["AwsSsm Automation"]}, "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}, {"name": "execution_id", "in": "path", "required": true, "type": "string"}]}, "/v1/security/notification/{cloud_account_id}/{sub_category}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SecurityNotificationConfiguration"}}}, "summary": "Get Security Notification Configuration", "description": "Get Security Notification Configuration", "operationId": "ViewSecurityNotificationConfiguration", "security": [{"auth_token": []}], "tags": ["Security Notification"]}, "parameters": [{"name": "cloud_account_id", "in": "path", "required": true, "type": "string"}, {"name": "sub_category", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/SecurityNotificationConfiguration"}}}, "summary": "Update Security Notification Configuration", "description": "Update Security Notification Configuration", "operationId": "UpdateSecurityNotificationConfiguration", "parameters": [{"name": "SecurityNotificationConfiguration", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SecurityNotificationConfiguration"}}], "security": [{"auth_token": []}], "tags": ["Security Notification"]}}, "/v1/tag_baseline/all": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/RecordIdentity"}}}}, "summary": "Get all Tag Baseline Definitions", "description": "Get a list of all Tag Baseline Definitions that are viewable to the user.", "operationId": "get-all@@@2", "security": [{"auth_token": []}], "tags": ["TaggingGovernanceDefinitions"]}}, "/v1/tag_baseline/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/TagBaselineDefinition"}}}}, "summary": "Get Baselines", "description": "Batch Tag Baseline definitions", "operationId": "batch@@@4", "parameters": [{"name": "RecordIdentityBatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecordIdentityBatchRequest"}}], "security": [{"auth_token": []}], "tags": ["TaggingGovernanceDefinitions"]}}, "/v1/tag_baseline/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Created", "schema": {"$ref": "#/definitions/TagBaselineDefinition"}}}, "summary": "Create new Tag Baseline", "description": "Create a new Tag Baseline Definition. The definition is used to manage a set of versions. This request takes no body", "operationId": "create@@@5", "security": [{"auth_token": []}], "tags": ["TaggingGovernanceDefinitions"]}}, "/v1/tag_baseline/item/{baseline_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Removed", "schema": {"type": "boolean"}}}, "summary": "Delete Tag Baseline Definition", "description": "Delete a Tag Baseline Definition and all associated versions. Returns 'true' if the operation was successful.", "operationId": "remove@@@3", "parameters": [{"description": "ID of Tag Baseline Definition.", "name": "id", "type": "string", "in": "query"}, {"name": "baseline_id", "in": "path", "required": true, "type": "string"}], "security": [{"auth_token": []}], "tags": ["TaggingGovernanceDefinitions"]}, "get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/TagBaselineDefinition"}}}, "summary": "Get Tag Baseline Definition", "description": "Get a Tag Baseline Definition by id.", "operationId": "get@@@5", "parameters": [{"name": "baseline_id", "in": "path", "required": true, "type": "string", "description": "ID of Tag Baseline Definition."}], "security": [{"auth_token": []}], "tags": ["TaggingGovernanceDefinitions"]}}, "/v1/tag_baseline/item/{baseline_id}/history": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/TagBaselineDefinitionVersion"}}}}, "summary": "Get the history of a Tag Baseline Definition", "description": "Get a list of all versions for a Tag Baseline Definition.", "operationId": "get-history@@@2", "parameters": [{"name": "baseline_id", "in": "path", "required": true, "type": "string", "description": "ID of Tag Baseline Definition."}], "security": [{"auth_token": []}], "tags": ["TaggingGovernanceDefinitions"]}}, "/v1/tag_baseline/item/{baseline_id}/set-state": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Updated", "schema": {"$ref": "#/definitions/TagBaselineDefinition"}}}, "summary": "Set state of Tag Baseline Definition", "description": "Set the Active state for a Tag Baseline Definition. When the state is true, the baseline will be used in posture generation.", "operationId": "set-state", "parameters": [{"name": "baseline_id", "in": "path", "required": true, "type": "string", "description": "ID of Tag Baseline Definition Version."}, {"description": "Set Active state on Tag Baseline Definition.", "in": "query", "type": "boolean", "name": "active"}], "security": [{"auth_token": []}], "tags": ["TaggingGovernanceDefinitions"]}}, "/v1/tag_baseline_version/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/TagBaselineDefinitionVersion"}}}}, "summary": "Get Dashboard Versions", "description": "Batch Tag Baseline versions", "operationId": "batch@@@5", "parameters": [{"name": "RecordIdentityBatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecordIdentityBatchRequest"}}], "security": [{"auth_token": []}], "tags": ["TaggingGovernanceDefinitionVersions"]}}, "/v1/tag_baseline_version/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Created", "schema": {"$ref": "#/definitions/TagBaselineDefinitionVersion"}}}, "summary": "Create new Tag Baseline Definition Version", "description": "Create a Tag Baseline Definition Version. This will create and link a new version to the given definition id.", "operationId": "create@@@6", "parameters": [{"name": "TagBaselineDefinitionVersion", "required": true, "in": "body", "schema": {"$ref": "#/definitions/TagBaselineDefinitionVersion"}}], "security": [{"auth_token": []}], "tags": ["TaggingGovernanceDefinitionVersions"]}}, "/v1/tag_baseline_version/item/{version_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/TagBaselineDefinitionVersion"}}}, "summary": "Get Tag Baseline Definition Version", "description": "Get a Tag Baseline Definition Version by id.", "operationId": "get@@@6", "parameters": [{"name": "version_id", "in": "path", "required": true, "type": "string", "description": "ID of Tag Baseline Definition Version."}], "security": [{"auth_token": []}], "tags": ["TaggingGovernanceDefinitionVersions"]}}, "/v1/tag_baseline_version/item/{version_id}/make-head": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/TagBaselineDefinitionVersion"}}}, "summary": "Make Tag Baseline Definition Version the Head version", "description": "Mark this version as the 'head' version.", "operationId": "make-head@@@2", "parameters": [{"name": "version_id", "in": "path", "required": true, "type": "string", "description": "ID of Tag Baseline Definition Version."}], "security": [{"auth_token": []}], "tags": ["TaggingGovernanceDefinitionVersions"]}}, "/v1/tag_baseline_version/item/{version_id}/make-release": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/TagBaselineDefinitionVersion"}}}, "summary": "Make Tag Baseline Definition Version the Release version", "description": "Mark this version as the release version. The release version will be used for posture generation", "operationId": "make-release@@@2", "parameters": [{"name": "version_id", "in": "path", "required": true, "type": "string", "description": "ID of Tag Baseline Definition Version."}], "security": [{"auth_token": []}], "tags": ["TaggingGovernanceDefinitionVersions"]}}, "/v1/tag_baseline_version/parseImport": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Parsed", "schema": {"$ref": "#/definitions/TagBaselineConfiguration"}}}, "summary": "Parse Tag Baseline Definition Version", "description": "Parse and validate a raw json string to be used for importing a Tag Baseline Definition Version", "operationId": "parse-import@@@2", "parameters": [{"name": "RawImport", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RawImport"}}], "security": [{"auth_token": []}], "tags": ["TaggingGovernanceDefinitionVersions"]}}, "/v1/tag_baselines/available_tags/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/TagBaselineAvailableTagBatchResponse"}}}, "summary": "Returns a batch of AvailableTag", "description": "Get all tag values for the tag keys passed in the request.", "operationId": "AvailableTagsBatch", "parameters": [{"name": "BatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BatchRequest"}}], "security": [{"auth_token": []}], "tags": ["TaggingGovernanceDefinitions"]}}, "/v1/tag_baselines/available_tags/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/ListResponse"}}}, "summary": "Returns a list of AvailableTags ids", "description": "Get a list of all available tag keys found on resources that the user can view.", "operationId": "AvailableTagsList", "parameters": [{"name": "TagBaselineAvailableTagListRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/TagBaselineAvailableTagListRequest"}}], "security": [{"auth_token": []}], "tags": ["TaggingGovernanceDefinitions"]}}, "/v1/tag_posture/snapshot/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/TagPostureSnapshotBatchResponse"}}}, "summary": "Returns a batch of TagPostureSnapshot", "description": "Get details for the snapshot ids passed in the request", "operationId": "SnapshotBatch", "parameters": [{"name": "BatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BatchRequest"}}], "security": [{"auth_token": []}], "tags": ["TaggingGovernancePostures"]}}, "/v1/tag_posture/snapshot/create": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/TagPostureSnapshot"}}}, "summary": "Returns a TagPostureSnapshot", "description": "Create a new snapshot. This will generate the tag posture with the currently active baselines. Old snapshots will be cleaned up based on the 'keep' parameter", "operationId": "SnapshotCreate", "parameters": [{"description": "Number of snapshots to keep including this one", "in": "query", "type": "integer", "name": "keep"}], "security": [{"auth_token": []}], "tags": ["TaggingGovernancePostures"]}}, "/v1/tag_posture/snapshot/item/{snapshot_id}/resource/item/{resource_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/TagPostureResource"}}}, "summary": "Returns a TagPostureResource based on input filters", "description": "Get posture details for a particular resource.", "operationId": "ResourceGet", "parameters": [{"name": "snapshot_id", "in": "path", "required": true, "type": "string", "description": "Snapshot to use for evaluating baselines (\"live\" computes the posture on demand)"}, {"name": "resource_id", "in": "path", "required": true, "type": "string", "description": "ID of resource to fetch"}, {"description": "Baseline to evaluate resource against (all if missing)", "in": "query", "type": "string", "name": "baseline_id"}], "security": [{"auth_token": []}], "tags": ["TaggingGovernancePostures"]}}, "/v1/tag_posture/snapshot/item/{snapshot_id}/summary/cloud_account/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/TagPostureCloudAccountSummaryBatchResponse"}}}, "summary": "Returns a batch of TagPostureCloudAccountSummary", "description": "For a given snapshot, get the details of the requested cloud account posture summaries", "operationId": "CloudAccountSummaryBatch", "parameters": [{"name": "snapshot_id", "in": "path", "required": true, "type": "string", "description": "ID of snapshot"}, {"name": "BatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BatchRequest"}}, {"description": "Baseline to fetch summary for (all if missing)", "in": "query", "type": "string", "name": "baseline_id"}], "security": [{"auth_token": []}], "tags": ["TaggingGovernancePostures"]}}, "/v1/tag_posture/snapshot/item/{snapshot_id}/summary/cloud_account/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/ListResponse"}}}, "summary": "Returns a list of TagPostureCloudAccountSummary identifiers based on input filters", "description": "For a given snapshot, list all of the posture summaries for cloud accounts. Allows filtering and sorting based on the request", "operationId": "CloudAccountSummaryList", "parameters": [{"name": "snapshot_id", "in": "path", "required": true, "type": "string", "description": "ID of snapshot"}, {"name": "TagPostureSummaryListRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/TagPostureSummaryListRequest"}}], "security": [{"auth_token": []}], "tags": ["TaggingGovernancePostures"]}}, "/v1/tag_posture/snapshot/item/{snapshot_id}/summary/resource/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/TagPostureResourceSummaryBatchResponse"}}}, "summary": "Returns a batch of TagPostureResourceSummary", "description": "For a given snapshot, get the details of the requested resource posture summaries", "operationId": "ResourceSummaryBatch", "parameters": [{"name": "snapshot_id", "in": "path", "required": true, "type": "string", "description": "ID of snapshot"}, {"name": "BatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BatchRequest"}}, {"description": "Baseline to fetch summary for (all if missing)", "in": "query", "type": "string", "name": "baseline_id"}], "security": [{"auth_token": []}], "tags": ["TaggingGovernancePostures"]}}, "/v1/tag_posture/snapshot/item/{snapshot_id}/summary/resource/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/ListResponse"}}}, "summary": "Returns a list of TagPostureResourceSummary identifiers based on input filters", "description": "For a given snapshot, list all of the posture summaries for resources. Allows filtering and sorting based on the request", "operationId": "ResourceSummaryList", "parameters": [{"name": "snapshot_id", "in": "path", "required": true, "type": "string", "description": "ID of snapshot"}, {"name": "TagPostureSummaryListRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/TagPostureSummaryListRequest"}}], "security": [{"auth_token": []}], "tags": ["TaggingGovernancePostures"]}}, "/v1/tag_posture/snapshot/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/ListResponse"}}}, "summary": "Returns a list of TagPostureSnapshot ids", "description": "Get the list of all Tag Posture Snapshot. Each snapshot represents the tag posture generated at a particular time with a set of baselines.", "operationId": "SnapshotList", "parameters": [{"name": "TagPostureSnapshotListRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/TagPostureSnapshotListRequest"}}], "security": [{"auth_token": []}], "tags": ["TaggingGovernancePostures"]}}, "/v1/user/switch_account/{master_account_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AuthResponse"}}}, "summary": "Switch Master Account", "description": "Switching Master AccountsAuth token has to be generated and it is valid only for an hour. New token can be generated using this API. Extract Auth-token.", "operationId": "SwitchMasterAccount", "parameters": [{"name": "master_account_id", "in": "path", "required": true, "type": "string", "description": "Specify the Master Account ID ,That you want to Switch."}], "security": [{"auth_token": []}], "tags": ["Authorization"]}}, "/v1/user/verify/{access_key}": {"parameters": [{"name": "access_key", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UserVerificationResponse"}}}, "summary": "Auth0 User Verification", "description": "User Verify", "operationId": "UserVerify", "parameters": [{"name": "UserVerificationRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UserVerificationRequest"}}], "tags": ["Identity"]}}, "/v1/user/{user_id}/password_reset": {"parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UserUpdateResponse"}}}, "summary": "Reset Password for Auth0 User", "description": "Reset Password for the Auth0 User", "operationId": "ResetPassword", "parameters": [{"name": "PasswordResetRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/PasswordResetRequest"}}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/v1/user_delegation/master_accounts/{master_account_id}/rules": {"parameters": [{"name": "master_account_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Created", "schema": {"$ref": "#/definitions/UserDelegationResponse"}}}, "summary": "Create User Delegation", "description": "Creates a new user delegation", "operationId": "CreateUserDelegation", "parameters": [{"name": "UserDelegationRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UserDelegationRequest"}}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/v1/user_delegation/master_accounts/{master_account_id}/rules/batch": {"parameters": [{"name": "master_account_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UserDelegationBatchResponse"}}}, "summary": "Batch User Delegation", "description": "Batch User Delegation", "operationId": "BatchUserDelegation", "parameters": [{"name": "BatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BatchRequest"}}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/v1/user_delegation/master_accounts/{master_account_id}/rules/item/{rule_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UserDelegationDeleteResponse"}}}, "summary": "Delete User Delegation", "description": "Delete user delegation", "operationId": "DeleteUserDelegation", "security": [{"auth_token": []}], "tags": ["Identity"]}, "parameters": [{"name": "master_account_id", "in": "path", "required": true, "type": "string"}, {"name": "rule_id", "in": "path", "required": true, "type": "string"}], "put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/UserDelegationResponse"}}}, "summary": "Update User Delegation", "description": "Update user delegation", "operationId": "UpdateUserDelegation", "parameters": [{"name": "UserDelegationRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UserDelegationRequest"}}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/v1/user_delegation/master_accounts/{master_account_id}/rules/list": {"parameters": [{"name": "master_account_id", "in": "path", "required": true, "type": "string"}], "post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListResponse"}}}, "summary": "List User Delegation", "description": "List user delegation", "operationId": "ListUserDelegation", "parameters": [{"name": "UserDelegationListRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UserDelegationListRequest"}}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/v1/user_delegation/master_accounts/{master_account_id}/rules/refresh": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Refreshed", "schema": {"type": "boolean"}}}, "summary": "Refresh User Delegation", "description": "Refresh User Delegation", "operationId": "RefreshUserDelegation", "security": [{"auth_token": []}], "tags": ["Identity"]}, "parameters": [{"name": "master_account_id", "in": "path", "required": true, "type": "string"}]}, "/v1/user_delegation/report/{user_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/UserDelegationSummary"}}}}, "summary": "Get User Delegation Report", "description": "Get user delegation report", "operationId": "GetUserDelegationReport", "security": [{"auth_token": []}], "tags": ["Identity"]}, "parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string"}]}, "/v1/user_details": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/AuthDetailedResponse"}}}, "summary": "Get User session and roles details", "description": "User access details provided a valid token 1) use the authToken API to generate a new token The refreshed token will also expire after an hour, refer to expires_at in the response for the validity of the token. When the refreshed token also expires, call again the refreshToken API to extend it further. Like wise a token can extended 3 times, refer to refresh_count in the response. After 3 refresh attempts, token will expire and cannot be extended any further. Need to use authToken API to generate a new token.", "operationId": "UserSessionDetails", "security": [{"auth_token": []}], "tags": ["Authorization"]}}, "/v1/user_preferences/{user_id}/subkey/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"type": "string"}}}}, "summary": "List all subkeys of user preference filters", "description": "Get a list of all the user preference filters that are viewable to the user.", "operationId": "listSubKeys", "parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string", "description": "Specify the user ID. This is a unique ID and can be retrieved using the List Users API."}, {"name": "UserPreferenceListRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UserPreferenceListRequest"}}], "security": [{"auth_token": []}], "tags": ["UserPreference"]}}, "/v1/user_preferences/{user_id}/value/delete": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Removed", "schema": {"type": "boolean"}}}, "summary": "User Preference Delete", "description": "Delete a user preference filter", "operationId": "delete", "parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string", "description": "Specify the user ID. This is a unique ID and can be retrieved using the List Users API."}, {"name": "UserPreferenceDeleteRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UserPreferenceDeleteRequest"}}], "security": [{"auth_token": []}], "tags": ["UserPreference"]}}, "/v1/user_preferences/{user_id}/value/get": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/UserPreference"}}}, "summary": "Get details of the user preference", "description": "Get user preference by id.", "operationId": "get@@@2", "parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string", "description": "Specify the user ID. This is a unique ID and can be retrieved using the List Users API."}, {"name": "UserPreferenceGetRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UserPreferenceGetRequest"}}], "security": [{"auth_token": []}], "tags": ["UserPreference"]}}, "/v1/user_preferences/{user_id}/value/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"type": "string"}}}}, "summary": "List all user preference filters", "description": "Get a list of all the user preference filters that are viewable to the user.", "operationId": "listValues", "parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string", "description": "Specify the user ID. This is a unique ID and can be retrieved using the List Users API."}, {"name": "UserPreferenceListRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UserPreferenceListRequest"}}], "security": [{"auth_token": []}], "tags": ["UserPreference"]}}, "/v1/user_preferences/{user_id}/value/set": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Created/Updated", "schema": {"$ref": "#/definitions/UserPreference"}}}, "summary": "Create a new user preference filter", "description": "Create/Update a user preference filter", "operationId": "set", "parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string", "description": "Specify the user ID. This is a unique ID and can be retrieved using the List Users API."}, {"name": "UserPreference", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UserPreference"}}], "security": [{"auth_token": []}], "tags": ["UserPreference"]}}, "/v1/users/invite": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "201": {"description": "Created", "schema": {"$ref": "#/definitions/UserInviteResponse"}}}, "summary": "Invite User", "description": "Invite user", "operationId": "InviteUser", "parameters": [{"name": "UserInviteRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/UserInviteRequest"}}], "security": [{"auth_token": []}], "tags": ["Identity"]}}, "/v1/waf-frameworks/{tenant_id}/best_practice/delete": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Removed", "schema": {"type": "boolean"}}}, "summary": "Framework Question Delete", "description": "Delete a Well-Architected Framework Best practice", "operationId": "best-practice-delete", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "WellArchitectedFrameworkBestPractice", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkBestPractice"}}], "security": [{"auth_token": []}], "tags": ["WellArchitectedFramework"]}}, "/v1/waf-frameworks/{tenant_id}/pillar/delete": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Removed", "schema": {"type": "boolean"}}}, "summary": "Framework Pillar Delete", "description": "Delete a Well-Architected Framework Pillar", "operationId": "pillar-delete", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "WellArchitectedFrameworkPillar", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkPillar"}}], "security": [{"auth_token": []}], "tags": ["WellArchitectedFramework"]}}, "/v1/waf-frameworks/{tenant_id}/question/delete": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Removed", "schema": {"type": "boolean"}}}, "summary": "Framework Question Delete", "description": "Delete a Well-Architected Framework Question", "operationId": "question-delete", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "WellArchitectedFrameworkQuestion", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkQuestion"}}], "security": [{"auth_token": []}], "tags": ["WellArchitectedFramework"]}}, "/v1/well-architected-framework/assessment-definition/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentDefinition"}}}}, "summary": "Get Dashboard Versions", "description": "Fetch a batch of Assessment Definitions", "operationId": "batch@@@6", "parameters": [{"name": "RecordIdentityBatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecordIdentityBatchRequest"}}], "security": [{"auth_token": []}], "tags": ["WafAssessmentDefinitions"]}}, "/v1/well-architected-framework/assessment-definition/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Created", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentDefinition"}}}, "summary": "Create new Assessment", "description": "Create a new Assessment Definition. The definition is used to manage a set of versions. This request takes no body", "operationId": "create@@@7", "security": [{"auth_token": []}], "tags": ["WafAssessmentDefinitions"]}}, "/v1/well-architected-framework/assessment-definition/item/{assessment_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Removed", "schema": {"type": "boolean"}}}, "summary": "Delete Assessment Definition", "description": "Delete a Assessment Definition and all associated versions. Returns 'true' if the operation was successful.", "operationId": "remove@@@4", "parameters": [{"name": "assessment_id", "in": "path", "required": true, "type": "string", "description": "ID of Assessment Definition. This can be retrieved using Filter Assessment Definitions API."}], "security": [{"auth_token": []}], "tags": ["WafAssessmentDefinitions"]}, "get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentDefinition"}}}, "summary": "Get Assessment Definition", "description": "Get a Assessment Definition by id.", "operationId": "get@@@7", "parameters": [{"name": "assessment_id", "in": "path", "required": true, "type": "string", "description": "ID of Assessment Definition. This can be retrieved using Filter Assessment Definitions API."}], "security": [{"auth_token": []}], "tags": ["WafAssessmentDefinitions"]}}, "/v1/well-architected-framework/assessment-definition/item/{assessment_id}/history": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentDefinitionVersion"}}}}, "summary": "Get the history of an Assessment Definition", "description": "Get a list of all versions for a Assessment Definition.", "operationId": "get-history@@@3", "parameters": [{"name": "assessment_id", "in": "path", "required": true, "type": "string", "description": "ID of Assessment Definition. This can be retrieved using Filter Assessment Definitions API."}], "security": [{"auth_token": []}], "tags": ["WafAssessmentDefinitions"]}}, "/v1/well-architected-framework/assessment-definition/item/{assessment_id}/set-state": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Updated", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentDefinition"}}}, "summary": "Set state of Assessment Definition", "description": "Set the Active state for a Assessment Definition. When the state is true, the Assessment will be used in resource selection.", "operationId": "set-state@@@2", "parameters": [{"name": "assessment_id", "in": "path", "required": true, "type": "string", "description": "ID of Assessment Definition. This can be retrieved using Filter Assessment Definitions API."}, {"name": "WellArchitectedFrameworkAssessmentDefinition", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentDefinition"}}], "security": [{"auth_token": []}], "tags": ["WafAssessmentDefinitions"]}}, "/v1/well-architected-framework/assessment-definition/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/ListResponse"}}}, "summary": "Filter Assessment Definitions", "description": "Get a list of all Assessment Definitions that are viewable to the user.", "operationId": "list@@@3", "parameters": [{"name": "AssessmentDefinitionListRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AssessmentDefinitionListRequest"}}], "security": [{"auth_token": []}], "tags": ["WafAssessmentDefinitions"]}}, "/v1/well-architected-framework/assessment-run-history/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentRunHistory"}}}}, "summary": "Get a batch of Assessment Run History details", "description": "Get a batch of Assessment Run History details.", "operationId": "history-batch", "parameters": [{"name": "RecordIdentityBatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecordIdentityBatchRequest"}}], "security": [{"auth_token": []}], "tags": ["WafAssessmentRuns"]}}, "/v1/well-architected-framework/assessment-run-history/item/{assessment_run_history_id}/violations": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/RecordIdentity"}}}}, "summary": "Get a list of RecordIdentity for resources that have violated the given policy job", "description": "Get a list of resources that have violated the given policy job", "operationId": "violations-list", "parameters": [{"name": "assessment_run_history_id", "in": "path", "required": true, "type": "string", "description": "ID of the Assessment Run History. This can be retrieved using get history IDs Filter API."}, {"name": "WellArchitectedFrameworkAssessmentRunViolationRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentRunViolationRequest"}}], "security": [{"auth_token": []}], "tags": ["WafAssessmentRuns"]}}, "/v1/well-architected-framework/assessment-run-history/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/RecordIdentity"}}}}, "summary": "Get the history IDs for the given filters", "description": "Get the history IDs for the given filters.", "operationId": "history-list", "parameters": [{"name": "WellArchitectedFrameworkAssessmentRunHistoryRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentRunHistoryRequest"}}], "security": [{"auth_token": []}], "tags": ["WafAssessmentRuns"]}}, "/v1/well-architected-framework/assessment-run-question/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentRunQuestion"}}}}, "summary": "Get a batch of Assessment Run History Question details", "description": "Get a batch of Assessment Run History Question details.", "operationId": "question-batch", "parameters": [{"name": "RecordIdentityBatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecordIdentityBatchRequest"}}, {"description": "ID of the Assessment Run History", "name": "assessment_run_history_id", "type": "string", "in": "query"}], "security": [{"auth_token": []}], "tags": ["WafAssessmentRuns"]}}, "/v1/well-architected-framework/assessment-run-question/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/RecordIdentity"}}}}, "summary": "Get the Question IDs for the given filters", "description": "Get the Question IDs for the given filters.", "operationId": "question-list", "parameters": [{"name": "WellArchitectedFrameworkAssessmentRunQuestionRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentRunQuestionRequest"}}], "security": [{"auth_token": []}], "tags": ["WafAssessmentRuns"]}}, "/v1/well-architected-framework/assessment-run-report/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/RecordIdentity"}}}, "summary": "Schedule the generation of a report for an assessment run", "description": "Create a report for an assessment", "operationId": "report-create", "parameters": [{"name": "WellArchitectedFrameworkReportCreateRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkReportCreateRequest"}}], "security": [{"auth_token": []}], "tags": ["WafAssessmentRuns"]}}, "/v1/well-architected-framework/assessment-run-report/item/{report_id}": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkReport"}}}, "summary": "Fetch an assessment run report by ID", "description": "Get a report for an assessment", "operationId": "report-get", "parameters": [{"name": "report_id", "in": "path", "required": true, "type": "string", "description": "ID of the report to fetch. This can be retrieved using Report Generation API."}], "security": [{"auth_token": []}], "tags": ["WafAssessmentRuns"]}}, "/v1/well-architected-framework/assessment-run/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentRun"}}}}, "summary": "Get a batch of assessment run details", "description": "Get a batch of assessment run", "operationId": "batch@@@8", "parameters": [{"name": "RecordIdentityBatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecordIdentityBatchRequest"}}], "security": [{"auth_token": []}], "tags": ["WafAssessmentRuns"]}}, "/v1/well-architected-framework/assessment-run/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Started", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentRun"}}}, "summary": "Start an assessment run for the assessment definition", "description": "Create an assessment run for a given Assessment Definition", "operationId": "create@@@9", "parameters": [{"name": "WellArchitectedFrameworkAssessmentRunCreateRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentRunCreateRequest"}}], "security": [{"auth_token": []}], "tags": ["WafAssessmentRuns"]}}, "/v1/well-architected-framework/assessment-run/item/{assessment_run_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentRun"}}}, "summary": "Fetch the details for an assessment run by ID", "description": "Get an assessment run by ID", "operationId": "get@@@9", "parameters": [{"name": "assessment_run_id", "in": "path", "required": true, "type": "string", "description": "ID of Assessment Run. This can retrieved using List Assessment run Filter API"}], "security": [{"auth_token": []}], "tags": ["WafAssessmentRuns"]}}, "/v1/well-architected-framework/assessment-run/item/{assessment_run_id}/answer": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Updated", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentRunQuestion"}}}, "summary": "Answer a question or best practice", "description": "Answer a question or best practice\nAllows adding attachments, comments, and setting state for best practice or question", "operationId": "answer", "parameters": [{"name": "assessment_run_id", "in": "path", "required": true, "type": "string", "description": "ID of Assessment Run. This can retrieved using List Assessment run Filter API"}, {"name": "WellArchitectedFrameworkAssessmentRunAnswerRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentRunAnswerRequest"}}], "security": [{"auth_token": []}], "tags": ["WafAssessmentRuns"]}}, "/v1/well-architected-framework/assessment-run/item/{assessment_run_id}/milestone": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Updated", "schema": {"$ref": "#/definitions/RecordIdentity"}}}, "summary": "Create a milestone - take snapshot of the current state of assessment run including state of questions, best practices, comments and attachments associated alongside", "description": "Create a milestone on the Assessment Run.", "operationId": "milestone", "parameters": [{"name": "assessment_run_id", "in": "path", "required": true, "type": "string", "description": "ID of Assessment Run. This can retrieved using List Assessment run Filter API"}, {"name": "WellArchitectedAssessmentRunCreateMilestoneRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedAssessmentRunCreateMilestoneRequest"}}], "security": [{"auth_token": []}], "tags": ["WafAssessmentRuns"]}}, "/v1/well-architected-framework/assessment-run/item/{assessment_run_id}/scan": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Scan Started", "schema": {"$ref": "#/definitions/RecordIdentity"}}}, "summary": "Start a scan for an assessment run using the given context", "description": "Start a scan for an assessment run using the given context", "operationId": "scan", "parameters": [{"name": "assessment_run_id", "in": "path", "required": true, "type": "string", "description": "ID of Assessment Run. This can retrieved using List Assessment run Filter API"}, {"name": "WellArchitectedFrameworkAssessmentContext", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentContext"}}], "security": [{"auth_token": []}], "tags": ["WafAssessmentRuns"]}}, "/v1/well-architected-framework/assessment-run/item/{assessment_run_id}/set-state": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Updated", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentRun"}}}, "summary": "Set the state for an assessment run", "description": "Set the state for an assessment run. Used to complete or abandon the run\nUsed to complete or abandon the run", "operationId": "set-state@@@4", "parameters": [{"name": "assessment_run_id", "in": "path", "required": true, "type": "string", "description": "ID of Assessment Run. This can retrieved using List Assessment run Filter API"}, {"name": "WellArchitectedFrameworkAssessmentRunSetStateRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentRunSetStateRequest"}}], "security": [{"auth_token": []}], "tags": ["WafAssessmentRuns"]}}, "/v1/well-architected-framework/assessment-run/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/RecordIdentity"}}}}, "summary": "Get all assessment run IDs for the given filters", "description": "Get all assessment run identities for the given filters", "operationId": "list@@@4", "parameters": [{"name": "WellArchitectedFrameworkAssessmentRunRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentRunRequest"}}], "security": [{"auth_token": []}], "tags": ["WafAssessmentRuns"]}}, "/v1/well-architected-framework/assessment-version/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentDefinitionVersion"}}}}, "summary": "Get Assessment Versions", "description": "Fetch a batch of Assessment Versions", "operationId": "batch@@@7", "parameters": [{"name": "RecordIdentityBatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecordIdentityBatchRequest"}}], "security": [{"auth_token": []}], "tags": ["WafAssessmentDefinitionVersions"]}}, "/v1/well-architected-framework/assessment-version/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Created", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentDefinitionVersion"}}}, "summary": "Create new Assessment Definition Version", "description": "Create a Assessment Definition Version. This will create and link a new version to the given definition id.", "operationId": "create@@@8", "parameters": [{"name": "WellArchitectedFrameworkAssessmentDefinitionVersion", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentDefinitionVersion"}}], "security": [{"auth_token": []}], "tags": ["WafAssessmentDefinitionVersions"]}}, "/v1/well-architected-framework/assessment-version/item/{version_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentDefinitionVersion"}}}, "summary": "Get Assessment Definition Version", "description": "Get a Assessment Definition Version by id.", "operationId": "get@@@8", "parameters": [{"name": "version_id", "in": "path", "required": true, "type": "string", "description": "ID of Assessment Definition Version."}], "security": [{"auth_token": []}], "tags": ["WafAssessmentDefinitionVersions"]}}, "/v1/well-architected-framework/assessment-version/item/{version_id}/make-head": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentDefinitionVersion"}}}, "summary": "Make Assessment Definition Version the Head version", "description": "Mark this version as the 'head' version.", "operationId": "make-head@@@3", "parameters": [{"name": "version_id", "in": "path", "required": true, "type": "string", "description": "ID of Assessment Definition Version."}], "security": [{"auth_token": []}], "tags": ["WafAssessmentDefinitionVersions"]}}, "/v1/well-architected-framework/assessment-version/item/{version_id}/make-release": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentDefinitionVersion"}}}, "summary": "Make Assessment Definition Version the Release version", "description": "Mark this version as the release version. The release version will be used for posture generation", "operationId": "make-release@@@3", "parameters": [{"name": "version_id", "in": "path", "required": true, "type": "string", "description": "ID of Assessment Definition Version."}], "security": [{"auth_token": []}], "tags": ["WafAssessmentDefinitionVersions"]}}, "/v1/well-architected-framework/assessment-version/item/{version_id}/set-state": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Updated", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentDefinitionVersion"}}}, "summary": "Set state of Assessment Definition Version", "description": "Set the version state for a Assessment Definition Version. This is used to approve or reject a draft version", "operationId": "set-state@@@3", "parameters": [{"name": "version_id", "in": "path", "required": true, "type": "string", "description": "ID of Assessment Definition Version."}, {"description": "Version state to transition to", "type": "string", "in": "query", "enum": ["Draft", "Approved", "Rejected"], "x-cs-enum-type": "VersionState", "default": "Draft", "required": true, "name": "state"}], "security": [{"auth_token": []}], "tags": ["WafAssessmentDefinitionVersions"]}}, "/v1/well-architected-framework/assessment-version/parseImport": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Parsed", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentConfiguration"}}}, "summary": "Parse Assessment Definition Version", "description": "Parse and validate a raw json string to be used for importing a Assessment Definition Version", "operationId": "parse-import@@@3", "parameters": [{"name": "RawImport", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RawImport"}}], "security": [{"auth_token": []}], "tags": ["WafAssessmentDefinitionVersions"]}}, "/v1/well-architected-framework/{tenant_id}/best-practice/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/WellArchitectedFrameworkBestPractice"}}}}, "summary": "Batch Best Practices", "description": "Get a batch of best practices for tenant specified", "operationId": "best-practice-batch", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "RecordIdentityBatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecordIdentityBatchRequest"}}], "security": [{"auth_token": []}], "tags": ["WellArchitectedFramework"]}}, "/v1/well-architected-framework/{tenant_id}/best-practice/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/RecordIdentity"}}}}, "summary": "Best practices Create", "description": "Add Best Practices to a Well-Architected Framework Question", "operationId": "best-practice-create", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "WellArchitectedFrameworkBestPracticeRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkBestPracticeRequest"}}], "security": [{"auth_token": []}], "tags": ["WellArchitectedFramework"]}}, "/v1/well-architected-framework/{tenant_id}/best-practice/update": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkBestPractice"}}}, "summary": "Best practice Update", "description": "Update Best Practice for a Well-Architected Framework Question", "operationId": "best-practice-update", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "WellArchitectedFrameworkBestPractice", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkBestPractice"}}], "security": [{"auth_token": []}], "tags": ["WellArchitectedFramework"]}}, "/v1/well-architected-framework/{tenant_id}/framework/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/WellArchitectedFramework"}}}}, "summary": "Batch Frameworks", "description": "Get a batch of Frameworks", "operationId": "framework-batch", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "RecordIdentityBatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecordIdentityBatchRequest"}}], "security": [{"auth_token": []}], "tags": ["WellArchitectedFramework"]}}, "/v1/well-architected-framework/{tenant_id}/framework/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/WellArchitectedFramework"}}}, "summary": "Framework Create", "description": "Create a Well-Architected Framework", "operationId": "framework-create", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "WellArchitectedFramework", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFramework"}}], "security": [{"auth_token": []}], "tags": ["WellArchitectedFramework"]}}, "/v1/well-architected-framework/{tenant_id}/framework/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/RecordIdentity"}}}}, "summary": "List Frameworks", "description": "List all Frameworks for the specified tenant", "operationId": "framework-list", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}], "security": [{"auth_token": []}], "tags": ["WellArchitectedFramework"]}}, "/v1/well-architected-framework/{tenant_id}/framework/update": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/WellArchitectedFramework"}}}, "summary": "Framework Update", "description": "Update a Well-Architected Framework", "operationId": "framework-update", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "WellArchitectedFramework", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFramework"}}], "security": [{"auth_token": []}], "tags": ["WellArchitectedFramework"]}}, "/v1/well-architected-framework/{tenant_id}/framework/{framework_id}/delete": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Removed", "schema": {"type": "boolean"}}}, "summary": "Framework Delete", "description": "Delete a Well-Architected Framework", "operationId": "framework-delete", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "framework_id", "in": "path", "required": true, "type": "string", "description": "ID of Custom Framework. This can be retrieved using the List Frameworks API"}], "security": [{"auth_token": []}], "tags": ["WellArchitectedFramework"]}}, "/v1/well-architected-framework/{tenant_id}/pillar/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/RecordIdentity"}}}}, "summary": "Add pillars to a framework", "description": "Add pillars to a Well-Architected Framework", "operationId": "pillars-create", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "WellArchitectedFrameworkPillarRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkPillarRequest"}}], "security": [{"auth_token": []}], "tags": ["WellArchitectedFramework"]}}, "/v1/well-architected-framework/{tenant_id}/pillar/update": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkPillar"}}}, "summary": "Pillar update", "description": "Update a pillar of a Well-Architected Framework", "operationId": "pillar-update", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "WellArchitectedFrameworkPillar", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkPillar"}}], "security": [{"auth_token": []}], "tags": ["WellArchitectedFramework"]}}, "/v1/well-architected-framework/{tenant_id}/policy-params/get": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkPolicyParams"}}}, "summary": "Get execution parameters for policy mapped to WAF framework", "description": "Get execution parameters for policy mapped to WAF framework.", "operationId": "get-policy-params", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "WellArchitectedFrameworkPolicyId", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkPolicyId"}}], "security": [{"auth_token": []}], "tags": ["WellArchitectedFramework"]}}, "/v1/well-architected-framework/{tenant_id}/policy-params/set": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkPolicyParams"}}}, "summary": "Configure execution parameters for policy mapped to WAF framework", "description": "Configure execution parameters for policy mapped to WAF framework.", "operationId": "set-policy-params", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "WellArchitectedFrameworkPolicyParams", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkPolicyParams"}}], "security": [{"auth_token": []}], "tags": ["WellArchitectedFramework"]}}, "/v1/well-architected-framework/{tenant_id}/question/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/WellArchitectedFrameworkQuestion"}}}}, "summary": "Batch Questions", "description": "Get a batch of questions for tenant specified", "operationId": "question-batch@@@2", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "RecordIdentityBatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecordIdentityBatchRequest"}}], "security": [{"auth_token": []}], "tags": ["WellArchitectedFramework"]}}, "/v1/well-architected-framework/{tenant_id}/question/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/RecordIdentity"}}}}, "summary": "Create Questions for a pillar of a framework", "description": "Add Questions to a Well-Architected Framework", "operationId": "question-create", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "WellArchitectedFrameworkQuestionRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkQuestionRequest"}}], "security": [{"auth_token": []}], "tags": ["WellArchitectedFramework"]}}, "/v1/well-architected-framework/{tenant_id}/question/update": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkQuestion"}}}, "summary": "Question Update", "description": "Update a Question in a  Well-Architected Framework", "operationId": "questions-update", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "WellArchitectedFrameworkQuestion", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WellArchitectedFrameworkQuestion"}}], "security": [{"auth_token": []}], "tags": ["WellArchitectedFramework"]}}, "/v1/workload-definition/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/WorkloadDefinition"}}}}, "summary": "Get Dashboard Versions", "description": "Fetch a batch of Workload Definitions", "operationId": "batch@@@9", "parameters": [{"name": "RecordIdentityBatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecordIdentityBatchRequest"}}], "security": [{"auth_token": []}], "tags": ["WorkloadDefinitions"]}}, "/v1/workload-definition/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Created", "schema": {"$ref": "#/definitions/WorkloadDefinition"}}}, "summary": "Create new Workload", "description": "Create a new Workload Definition. The definition is used to manage a set of versions. This request takes no body", "operationId": "create@@@10", "security": [{"auth_token": []}], "tags": ["WorkloadDefinitions"]}}, "/v1/workload-definition/item/{workload_id}": {"delete": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Removed", "schema": {"type": "boolean"}}}, "summary": "Delete Workload Definition", "description": "Delete a Workload Definition and all associated versions. Returns 'true' if the operation was successful.", "operationId": "remove@@@5", "parameters": [{"name": "workload_id", "in": "path", "required": true, "type": "string", "description": "ID of Workload Definition. This can be retrieved using Filter Definition API."}], "security": [{"auth_token": []}], "tags": ["WorkloadDefinitions"]}, "get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/WorkloadDefinition"}}}, "summary": "Get Workload Definition", "description": "Get a Workload Definition by id.", "operationId": "get@@@10", "parameters": [{"name": "workload_id", "in": "path", "required": true, "type": "string", "description": "ID of Workload Definition. This can be retrieved using Filter Definition API."}], "security": [{"auth_token": []}], "tags": ["WorkloadDefinitions"]}}, "/v1/workload-definition/item/{workload_id}/history": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/WorkloadDefinitionVersion"}}}}, "summary": "Get the history of a Workload Definition", "description": "Get a list of all versions for a Workload Definition.", "operationId": "get-history@@@4", "parameters": [{"name": "workload_id", "in": "path", "required": true, "type": "string", "description": "ID of Workload Definition. This can be retrieved using Filter Definition API."}], "security": [{"auth_token": []}], "tags": ["WorkloadDefinitions"]}}, "/v1/workload-definition/item/{workload_id}/set-state": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Updated", "schema": {"$ref": "#/definitions/WorkloadDefinition"}}}, "summary": "Set state of Workload Definition", "description": "Set the Active state for a Workload Definition. When the state is true, the Workload will be used in resource selection.", "operationId": "set-state@@@5", "parameters": [{"name": "workload_id", "in": "path", "required": true, "type": "string", "description": "ID of Workload Definition. This can be retrieved using Filter Definition API."}, {"name": "WorkloadDefinition", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WorkloadDefinition"}}], "security": [{"auth_token": []}], "tags": ["WorkloadDefinitions"]}}, "/v1/workload-definition/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/ListResponse"}}}, "summary": "Filter Workload Definitions", "description": "Get a list of all Workload Definitions that are viewable to the user.", "operationId": "list@@@5", "parameters": [{"name": "WorkloadDefinitionListRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WorkloadDefinitionListRequest"}}], "security": [{"auth_token": []}], "tags": ["WorkloadDefinitions"]}}, "/v1/workload-definition/set-state-bulk": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Updated", "schema": {"type": "array", "items": {"$ref": "#/definitions/WorkloadDefinition"}}}}, "summary": "Set state in Bulk for Workload Definition", "description": "Set State of a list of workload definitions in bulk", "operationId": "set-state-bulk", "parameters": [{"name": "payload", "required": true, "in": "body", "schema": {"type": "array", "items": {"$ref": "#/definitions/WorkloadDefinition"}}}], "security": [{"auth_token": []}], "tags": ["WorkloadDefinitions"]}}, "/v1/workload-query/execute": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "412": {"description": "Validation Failed", "schema": {"$ref": "#/definitions/ValidationResults"}}, "200": {"description": "Generated", "schema": {"$ref": "#/definitions/ListResponse"}}}, "summary": "Returns a list of Resource identifiers based on input query", "description": "Execute a query against the ServiceResourceInventory collection given a WorkloadTierConfiguration", "operationId": "execute", "parameters": [{"name": "WorkloadQueryRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WorkloadQueryRequest"}}], "security": [{"auth_token": []}], "tags": ["WorkloadQuery"]}}, "/v1/workload-query/resource/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Generated", "schema": {"type": "array", "items": {"$ref": "#/definitions/WorkloadResource"}}}}, "summary": "Returns a list of ServiceResourceInventory", "description": "Fetch a batch of resources from the ServiceResourceInventory collection", "operationId": "resource-batch", "parameters": [{"name": "BatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/BatchRequest"}}], "security": [{"auth_token": []}], "tags": ["WorkloadQuery"]}}, "/v1/workload-query/resource/filters/region": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Workload Resource Filters", "schema": {"type": "array", "items": {"$ref": "#/definitions/WorkloadServiceResourceRegion"}}}}, "summary": "Returns list of WorkloadServiceResourceRegion with all possible filter values for the given cloud accounts", "description": "Fetch all the region filter values for the given cloud accounts", "operationId": "resource-filters-region", "parameters": [{"name": "WorkloadServiceResourceRegionRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WorkloadServiceResourceRegionRequest"}}], "security": [{"auth_token": []}], "tags": ["WorkloadQuery"]}}, "/v1/workload-query/resource/filters/service-resource": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Workload Resource Filters", "schema": {"type": "array", "items": {"$ref": "#/definitions/WorkloadServiceResource"}}}}, "summary": "Returns list of WorkloadServiceResource with all possible filter values", "description": "Fetch all the ServiceResource filter values", "operationId": "resource-filters-service-resource", "security": [{"auth_token": []}], "tags": ["WorkloadQuery"]}}, "/v1/workload-version/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/WorkloadDefinitionVersion"}}}}, "summary": "Get Workload Versions", "description": "Fetch a batch of Workload Versions", "operationId": "batch@@@10", "parameters": [{"name": "RecordIdentityBatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecordIdentityBatchRequest"}}], "security": [{"auth_token": []}], "tags": ["WorkloadDefinitionVersions"]}}, "/v1/workload-version/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Created", "schema": {"$ref": "#/definitions/WorkloadDefinitionVersion"}}}, "summary": "Create new Workload Definition Version", "description": "Create a Workload Definition Version. This will create and link a new version to the given definition id.", "operationId": "create@@@11", "parameters": [{"name": "WorkloadDefinitionVersion", "required": true, "in": "body", "schema": {"$ref": "#/definitions/WorkloadDefinitionVersion"}}], "security": [{"auth_token": []}], "tags": ["WorkloadDefinitionVersions"]}}, "/v1/workload-version/item/{version_id}": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/WorkloadDefinitionVersion"}}}, "summary": "Get Workload Definition Version", "description": "Get a Workload Definition Version by id.", "operationId": "get@@@11", "parameters": [{"name": "version_id", "in": "path", "required": true, "type": "string", "description": "ID of Workload Definition Version."}], "security": [{"auth_token": []}], "tags": ["WorkloadDefinitionVersions"]}}, "/v1/workload-version/item/{version_id}/make-head": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/WorkloadDefinitionVersion"}}}, "summary": "Make Workload Definition Version the Head version", "description": "Mark this version as the 'head' version.", "operationId": "make-head@@@4", "parameters": [{"name": "version_id", "in": "path", "required": true, "type": "string", "description": "ID of Workload Definition Version."}], "security": [{"auth_token": []}], "tags": ["WorkloadDefinitionVersions"]}}, "/v1/workload-version/item/{version_id}/make-release": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "404": {"description": "Not Found", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/WorkloadDefinitionVersion"}}}, "summary": "Make Workload Definition Version the Release version", "description": "Mark this version as the release version. The release version will be used for posture generation", "operationId": "make-release@@@4", "parameters": [{"name": "version_id", "in": "path", "required": true, "type": "string", "description": "ID of Workload Definition Version."}], "security": [{"auth_token": []}], "tags": ["WorkloadDefinitionVersions"]}}, "/v1/workload-version/parseImport": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Parsed", "schema": {"$ref": "#/definitions/WorkloadConfiguration"}}}, "summary": "Parse Workload Definition Version", "description": "Parse and validate a raw json string to be used for importing a Workload Definition Version", "operationId": "parse-import@@@4", "parameters": [{"name": "RawImport", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RawImport"}}], "security": [{"auth_token": []}], "tags": ["WorkloadDefinitionVersions"]}}, "/v2/audit/auditlog/batch": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"$ref": "#/definitions/AuditLogBatchResponse"}}}, "summary": "Audit Detail", "description": "List all Audit Log document batches", "operationId": "AuditLogBatch", "parameters": [{"name": "RecordIdentityBatchRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/RecordIdentityBatchRequest"}}], "security": [{"auth_token": []}], "tags": ["AuditLog"]}}, "/v2/audit/auditlog/list": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ListResponse"}}}, "summary": "Audit List", "description": "Audit Log List", "operationId": "AuditLogList", "parameters": [{"name": "AuditLogListRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/AuditLogListRequest"}}], "security": [{"auth_token": []}], "tags": ["AuditLog"]}}, "/v2/reports/pin/{report_id}": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "boolean"}}}, "summary": "Create pinned report", "description": "Pin Report", "operationId": "PinReport", "parameters": [{"name": "report_id", "in": "path", "required": true, "type": "string", "description": "Id of the report"}], "security": [{"auth_token": []}], "tags": ["Reports"]}}, "/v2/reports/pinned/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"type": "string"}}}}, "summary": "List pinned report", "description": "List of pinned report", "operationId": "GetPinnedReports", "security": [{"auth_token": []}], "tags": ["Reports"]}}, "/v2/reports/unpin/{report_id}": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "boolean"}}}, "summary": "Delete pinned report", "description": "Unpin Report", "operationId": "UnpinReport", "parameters": [{"name": "report_id", "in": "path", "required": true, "type": "string", "description": "Id of the report"}], "security": [{"auth_token": []}], "tags": ["Reports"]}}, "/v2/reports/user_view/create": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "boolean"}}}, "summary": "Create view of the report", "description": "Create view of the report", "operationId": "CreateReportsUserView", "parameters": [{"name": "ReportsUserViewCreateRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ReportsUserViewCreateRequest"}}], "security": [{"auth_token": []}], "tags": ["Reports"]}}, "/v2/reports/user_view/delete": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "boolean"}}}, "summary": "Delete view of the report", "description": "Delete view of the report", "operationId": "DeleteReportsUserView", "parameters": [{"name": "ReportsUserViewDeleteRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ReportsUserViewDeleteRequest"}}], "security": [{"auth_token": []}], "tags": ["Reports"]}}, "/v2/reports/user_view/list": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "array", "items": {"$ref": "#/definitions/ReportDetails"}}}}, "summary": "List of user report views", "description": "List views of the report", "operationId": "ListReportsUserView", "parameters": [{"name": "report_id", "in": "query", "type": "string"}, {"name": "view_name", "in": "query", "type": "string"}], "security": [{"auth_token": []}], "tags": ["Reports"]}}, "/v2/reports/user_view/update": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"type": "boolean"}}}, "summary": "Update view of the report", "description": "Update view of the report", "operationId": "UpdateReportsUserView", "parameters": [{"name": "ReportsUserViewUpdateRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ReportsUserViewUpdateRequest"}}], "security": [{"auth_token": []}], "tags": ["Reports"]}}, "/v2/security/executive_dashboard/access/by_cloud_account": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/SecurityDashboardViolationAccountDetails"}}}}, "summary": "Get Access Violation by Cloud Account", "description": "Security Dashboard Access Violations by Cloud Accounts", "operationId": "accessViolationsByCloudAccount", "parameters": [{"name": "SecurityDashboardRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SecurityDashboardRequest"}}], "security": [{"auth_token": []}], "tags": ["Security"]}}, "/v2/security/executive_dashboard/access/by_region": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/SecurityDashboardViolationByRegionCount"}}}}, "summary": "Get Access Violation By Region", "description": "Security Dashboard Access Violations by Region", "operationId": "accessViolationsByRegion", "parameters": [{"name": "SecurityDashboardRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SecurityDashboardRequest"}}], "security": [{"auth_token": []}], "tags": ["Security"]}}, "/v2/security/executive_dashboard/access/trend_by_severity": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Fetched", "schema": {"type": "array", "items": {"$ref": "#/definitions/SecurityDashboardAccessViolationByTrend"}}}}, "summary": "Get Access Violation trend by severity", "description": "Security Dashboard Access Violation by Trend", "operationId": "accessViolationsTrend", "parameters": [{"name": "SecurityDashboardRequest", "required": true, "in": "body", "schema": {"$ref": "#/definitions/SecurityDashboardRequest"}}], "security": [{"auth_token": []}], "tags": ["Security"]}}, "/{tenant_id}/assessment_history": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ComplianceControlMappingResModel"}}}, "summary": "Get compliance standard assessments", "description": "Objective is to return all of the compliance control mapping, the tenant as input", "operationId": "ComplianceControlMapping", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"description": "Page number", "type": "integer", "name": "page", "in": "query"}, {"description": "Number of records to display", "type": "integer", "name": "limit", "in": "query"}, {"description": "Allowed values:account,standard,service", "type": "string", "name": "search", "in": "query"}, {"description": "uri of compliance standard, This can be fetched from the compliance standards list API call.", "type": "string", "name": "compliance_uri", "in": "query"}, {"description": "ID of the cloud account. This can be fetched from ListCloudAccounts API", "name": "service_account", "type": "string", "in": "query"}, {"description": "Specify the assessment_status.", "enum": ["COMPLETED", "IN_PROGRESS", "PENDING"], "name": "assessment_status", "type": "string", "in": "query"}, {"description": "Specify the assessment_type.", "enum": ["standard", "control"], "name": "assessment_type", "type": "string", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Compliance"]}}, "/{tenant_id}/budgets/threshold_alerts/update": {"put": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ThresholdAlertUpdateResModel"}}}, "summary": "Update Budget Threshold Alerts", "description": "ThresholdAlert Update", "operationId": "ThresholdAlertUpdate", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "ThresholdAlertUpdateReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ThresholdAlertUpdateReqModel"}}], "security": [{"auth_token": []}], "tags": ["Budget V2 Management"]}}, "/{tenant_id}/budgets/threshold_alerts/view": {"post": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ThresholdAlertListResModel"}}}, "summary": "View Budget Threshold Alerts", "description": "ThresholdAlert View", "operationId": "ThresholdAlertList", "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, {"name": "ThresholdAlertViewListReqModel", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ThresholdAlertViewListReqModel"}}, {"description": "to view threshold list data", "type": "boolean", "required": false, "name": "expand", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Budget V2 Management"]}}, "/{tenant_id}/compliance_posture/{service_account_id}/visibility": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/CompliancePostureVisibilityResponseModel"}}}, "summary": "compliance posture visibility", "description": "Objective is to return all of the compliance Visibility", "operationId": "CompliancePostureVisibility", "parameters": [{"description": "uri of compliance standard This can be fetched from the compliance standards list API call.", "type": "string", "required": true, "name": "compliance_uri", "in": "query"}, {"description": "Group by attribute (Allowed Values: control_family, resource_type, severity, region) ", "default": "control_family", "name": "group_by", "type": "string", "in": "query"}, {"description": "Allowed Values: control, policy and resource.", "default": "control", "name": "count_by", "type": "string", "in": "query"}, {"description": "allowed values for selected group by", "type": "string", "name": "group_by_filter", "in": "query"}, {"description": "true/false flag to identify whether filters is required or not", "type": "boolean", "enum": ["true", "false"], "name": "filters_required", "in": "query"}, {"description": "true/false flag to identify whether detail is required or not", "type": "boolean", "enum": ["true", "false"], "name": "details_required", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Compliance"]}, "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}, {"name": "service_account_id", "in": "path", "required": true, "type": "string"}]}, "/{tenant_id}/compliance_posture/{service_account_id}/visibility_trend": {"get": {"responses": {"500": {"description": "Internal Server Error", "schema": {"$ref": "#/definitions/ModelError"}}, "401": {"description": "Unauthorized", "schema": {"$ref": "#/definitions/ModelError"}}, "400": {"description": "Bad Request", "schema": {"$ref": "#/definitions/ModelError"}}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/ComplianceVisibilityTrendResponseModel"}}}, "summary": "compliance visibility trend", "description": "Objective is to return all of the compliance VisibilityTrend", "operationId": "ComplianceVisibilityTrend", "parameters": [{"description": "uri of compliance standard This can be fetched from the compliance standards list API call.", "type": "string", "required": true, "name": "compliance_uri", "in": "query"}, {"description": "date range filter (Allowed values: current_month, previous_month, last_3_months, last_10_assessments) ", "default": "last_10_assessments", "name": "period", "type": "string", "in": "query"}, {"description": "Allowed Values: control, policy and resource", "name": "count_by", "type": "string", "in": "query"}], "security": [{"auth_token": []}], "tags": ["Compliance"]}, "parameters": [{"name": "tenant_id", "in": "path", "required": true, "type": "string"}, {"name": "service_account_id", "in": "path", "required": true, "type": "string"}]}}, "info": {"title": "CoreStack External API", "version": "1.0.0", "termsOfService": "http://corestack.io/", "license": {"name": "CoreStack Inc License", "url": "http://corestack.io/licenses/LICENSE-2.0.html"}}, "produces": ["application/json"], "consumes": ["application/json"], "securityDefinitions": {"auth_token": {"type": "apiKey", "in": "header", "name": "X-Auth-Token"}}, "tags": [{"name": "Access", "description": "Access Pillar"}, {"name": "Assessment", "description": "Manage Assessment"}, {"name": "Attachments", "description": "Manage Attachments"}, {"name": "AuditLog", "description": "Manage Audit Log"}, {"name": "Authorization", "description": "Manage Tokens"}, {"name": "Automation", "description": "Manage Templates, Scripts & Blueprints"}, {"name": "AWS Security Hub", "description": "AWS Security Hub"}, {"name": "AwsSsm", "description": "Manage AWS SSM"}, {"name": "AwsSsm Automation", "description": "Manage AWS SSM Automation"}, {"name": "AwsSsm Command", "description": "Manage AWS SSM Command"}, {"name": "Azure DevOps Pipeline DashBoard", "description": "Azure DevOps Pipeline DashBoard"}, {"name": "Background Jobs", "description": "Manage Background Jobs"}, {"name": "Budget V2 Management", "description": "Budget V2 Management"}, {"name": "Account Governance", "description": "Manage Cloud Accounts"}, {"name": "Compliance", "description": "Corestack compliance Rest API"}, {"name": "Cost", "description": "Cost Pillar"}, {"name": "Cost Anomaly", "description": "Cost Anomaly Detection"}, {"name": "Custom Tags", "description": "Manage Custom Tags"}, {"name": "UserPreference", "description": "Corestack UserPreferences Rest API"}, {"name": "Dashboard Definitions", "description": "Manage Executive Dashboards"}, {"name": "Dashboard Definition Versions", "description": "Manage Executive Dashboard Versions"}, {"name": "Guardrails", "description": "Manage Policy"}, {"name": "Identity", "description": "User, Tenants & Roles Management"}, {"name": "MasterAccount", "description": "Manage Master Account"}, {"name": "Operations", "description": "Operations Pillar"}, {"name": "Chatbot", "description": "Chat Bot"}, {"name": "Recommendation", "description": "Recommendation summary"}, {"name": "Reports", "description": "Reports Pillar"}, {"name": "Resource", "description": "Resource Pillar"}, {"name": "Security", "description": "Security Pillar"}, {"name": "Security Notification", "description": "Security Notification Configuration"}, {"name": "Self Service", "description": "Self Service Pillar"}, {"name": "ServiceNow CMDB", "description": "ServiceNow CMDB"}, {"name": "TaggingGovernanceDefinitions", "description": "Manage Tagging Governance"}, {"name": "TaggingGovernanceDefinitionVersions", "description": "Manage Tagging Governance Versions"}, {"name": "TaggingGovernancePostures", "description": "Manage Tagging Governance Postures"}, {"name": "UserGroups", "description": "User Group Management"}, {"name": "WafAssessmentDefinitions", "description": "Manage Assessments"}, {"name": "WafAssessmentDefinitionVersions", "description": "Manage Assessment Versions"}, {"name": "WafAssessmentRuns", "description": "Manage Assessment Runs"}, {"name": "WellArchitectedFramework", "description": "Corestack Well Architecture Framework Rest API"}, {"name": "WorkloadDefinitions", "description": "Manage Workloads"}, {"name": "WorkloadDefinitionVersions", "description": "Manage Workload Versions"}, {"name": "WorkloadQuery", "description": "Query Resources for Workloads"}], "definitions": {"AccessSummaryDashboardResponseModel": {"required": ["service_name", "violation"], "properties": {"service_name": {"type": "string", "description": "Name of the Service "}, "violation": {"type": "object", "description": "Contains the summary of violations"}}, "type": "object"}, "AccessViolationsByCloudAccountWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "AccessViolationsByCloudAccountWidgetConfiguration"}, "AccessViolationsTrendWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "AccessViolationsTrendWidgetConfiguration"}, "AccountFilters": {"properties": {"tenants": {"type": "array", "description": "Tenants to include (all if missing)", "items": {"type": "string"}}, "clouds": {"type": "array", "description": "Cloud Providers to include (all if missing)", "items": {"type": "string", "description": "Cloud Provider to select", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}}, "cloud_accounts": {"type": "array", "description": "Cloud Accounts to include (all if missing)", "items": {"type": "string"}}, "regions": {"type": "array", "description": "Regions to include (all if missing)", "items": {"type": "string"}}, "product_categories": {"type": "array", "description": "Product Categories to include (all if missing)", "items": {"type": "string"}}}, "type": "object"}, "AccountSummary": {"required": ["cloud_account_id", "cloud_account_name", "cloud_account_type", "estimated_cost", "impacted_resources", "monthly_cost_saving_info", "monthly_cost_savings", "quarterly_cost_saving_info", "quarterly_cost_savings", "recommendation", "savings_percentage", "yearly_cost_saving_info", "yearly_cost_savings"], "properties": {"cloud_account_id": {"type": "string", "description": "Cloud account id"}, "cloud_account_name": {"type": "string", "description": "Cloud account name"}, "cloud_account_type": {"type": "string", "description": "Cloud account type"}, "recommendation": {"type": "string", "description": "Recommendations"}, "estimated_cost": {"type": "number", "description": "Estimated cost"}, "monthly_cost_savings": {"type": "number", "description": "Monthly cost savings"}, "quarterly_cost_savings": {"type": "number", "description": "Quarterly cost savings"}, "yearly_cost_savings": {"type": "number", "description": "Yearly cost savings"}, "impacted_resources": {"type": "integer", "description": "Impacted resources"}, "savings_percentage": {"type": "string", "description": "Savings percentage"}, "monthly_cost_saving_info": {"type": "string", "description": "Monthly cost saving information"}, "quarterly_cost_saving_info": {"type": "string", "description": "Quarterly cost saving information"}, "yearly_cost_saving_info": {"type": "string", "description": "Yearly cost saving information"}}, "type": "object"}, "AccountWiseSummary": {"required": ["cloud_account_id", "cloud_account_name", "currency", "open_recommendation", "potential_cost_saving", "resolved_count", "scope", "service", "tenant_id", "tenant_name"], "properties": {"cloud_account_id": {"type": "string", "description": "Cloud account id"}, "cloud_account_name": {"type": "string", "description": "Cloud Account Name"}, "tenant_name": {"type": "string", "description": "Tenant Name"}, "tenant_id": {"type": "string", "description": "Tenant id"}, "open_recommendation": {"type": "string", "description": "Recommendation Suggested that are still open and not resolved"}, "resolved_count": {"type": "integer", "description": "Recommendation suggested that are resolved"}, "scope": {"type": "string", "description": "Scope of the cloud account"}, "service": {"type": "string", "description": "Cloud Service"}, "potential_cost_saving": {"type": "number", "description": "Cost Saving based on recommendation"}, "currency": {"type": "string", "description": "Currency Selected"}}, "type": "object"}, "ActionDetails": {"required": ["action_resource_name", "action_type", "description", "name", "preexecute_required", "terms_and_conditions"], "properties": {"name": {"type": "string", "description": "Name of the action"}, "terms_and_conditions": {"type": "string", "description": "Terms and Conditions of the action"}, "preexecute_required": {"type": "string", "description": "Pre execute is required or not"}, "action_type": {"type": "string", "description": "Action Type"}, "action_resource_name": {"type": "string", "description": "Action Resource Name"}, "description": {"type": "string", "description": "Description of the action"}}, "type": "object"}, "ActionRecommendationsResponse": {"required": ["message", "status"], "properties": {"status": {"type": "string", "description": "Status of that HTTP call"}, "message": {"type": "string", "description": "Message of HTTP call"}}, "type": "object"}, "ActivateRequestModel": {"required": ["password"], "properties": {"password": {"type": "string", "description": "user password"}}, "type": "object"}, "ActivateUserResponseModel": {"required": ["user_id"], "properties": {"user_id": {"type": "string", "description": "User ID"}}, "type": "object"}, "AddRoleAssignment": {"required": ["role_names", "tenant_id"], "properties": {"tenant_id": {"type": "string", "description": "ID of the tenant within the CoreStack account"}, "role_names": {"type": "array", "description": "Name of the Roles to be assigned to the user under a tenant", "items": {"type": "string"}}}, "type": "object"}, "AlertNotificationDetailsModel": {"required": ["is_template", "name", "notification_details", "notification_uri"], "properties": {"name": {"type": "string", "description": "notification name"}, "notification_uri": {"type": "string", "description": "notification name"}, "is_template": {"type": "boolean", "description": "notification name"}, "notification_details": {"type": "array", "description": "Notification Details", "items": {"$ref": "#/definitions/NotificationDetailsModel"}}}, "type": "object"}, "AnomalyActionDetails": {"required": ["action_resource_name", "action_type", "description", "name", "preexecute_required", "terms_and_conditions"], "properties": {"name": {"type": "string", "description": "Name of the action"}, "terms_and_conditions": {"type": "string", "description": "Terms and Conditions of the action"}, "preexecute_required": {"type": "string", "description": "Pre execute is required or not"}, "action_type": {"type": "string", "description": "Action Type"}, "action_resource_name": {"type": "string", "description": "Action Resource Name"}, "description": {"type": "string", "description": "Description of the action"}}, "type": "object"}, "AnomalyListPolicyRecommendationsResponse": {"required": ["actions", "anomaly_activity_id", "classification", "cloud_account_id", "cloud_account_name", "created_at", "description", "impact", "name", "page_count", "policy_name", "resource_counts", "resources", "service_name", "status", "sub_classification", "tenant_name", "total_count"], "properties": {"anomaly_activity_id": {"type": "array", "description": "Policy ID", "items": {"type": "string"}}, "policy_name": {"type": "string", "description": "Policy Name"}, "name": {"type": "string", "description": "Name of the policy recommendation"}, "status": {"type": "string", "description": "Status"}, "impact": {"type": "string", "description": "Impact"}, "classification": {"type": "string", "description": "Oscar Classification"}, "sub_classification": {"type": "string", "description": "Sub classification of the above classification"}, "cloud_account_id": {"type": "string", "description": "Cloud account ID."}, "cloud_account_name": {"type": "string", "description": "Cloud Account Name"}, "service_name": {"type": "string", "description": "Cloud Service Name"}, "tenant_name": {"type": "string", "description": "Tenant Name"}, "created_at": {"type": "string", "description": "Time of creation"}, "resource_counts": {"description": "Count of the resource that are open", "$ref": "#/definitions/AnomalyResourceCount"}, "description": {"type": "string", "description": "Description of the policy"}, "actions": {"type": "array", "description": "Action to be taken for that policy recommendation", "items": {"$ref": "#/definitions/AnomalyActionDetails"}}, "total_count": {"type": "integer", "description": "Total count"}, "page_count": {"type": "integer", "description": "Page count"}, "resources": {"type": "array", "description": "Resources Details", "items": {"type": "object"}}}, "type": "object"}, "AnomalyResourceCount": {"required": ["open"], "properties": {"open": {"type": "integer", "description": "Resource count that are open"}}, "type": "object"}, "ApplicableToDetails": {"properties": {"name": {"type": "string", "description": "Applicable to which cloud account or tenant. Example 'name':'AWS_Account_1'"}, "id": {"type": "string", "description": "ID of that account.Example 'id': '61237f01e4b04a4c6b19addd'"}}, "type": "object"}, "ApplicationDetail": {"required": ["application_id", "cloud_account_details", "name", "tag_list"], "properties": {"application_id": {"type": "string", "description": "Unique ID of the Application."}, "name": {"type": "string", "description": "Name of the Application."}, "description": {"type": "string", "description": "Description for the Application"}, "owner": {"type": "string", "description": "Name of the owner."}, "environment": {"type": "string", "description": "Application associated with the application"}, "cost_center": {"type": "string", "description": "Cost Center associated with the application"}, "application_group": {"type": "string", "description": "Application Group associated with the application"}, "dns": {"type": "string", "description": "Name of the DNS."}, "tag_list": {"type": "object", "description": "Tags associated with applications"}, "cloud_account_details": {"type": "object", "description": "cloud account associated with application"}}, "type": "object"}, "ApplicationGroup": {"required": ["application_group_id", "cloud_account_details", "name", "tag_list"], "properties": {"application_group_id": {"type": "string", "description": "Unique ID of the Application group."}, "name": {"type": "string", "description": "Name of the Application group."}, "description": {"type": "string", "description": "Description for the Application group"}, "tag_list": {"type": "object", "description": "Tags"}, "owner": {"type": "string", "description": "Name of the owner."}, "cloud_account_details": {"type": "object", "description": "Cloud account"}}, "type": "object"}, "ApplicationGroupCreateResponse": {"required": ["application_group_id"], "properties": {"application_group_id": {"type": "string", "description": "Unique Id of the application group"}}, "type": "object"}, "ApplicationGroupListResponse": {"required": ["application_group", "total_count"], "properties": {"total_count": {"type": "integer", "description": "Number of ApplicationGroups"}, "application_group": {"description": "list of application group details.", "$ref": "#/definitions/ApplicationGroup"}}, "type": "object"}, "ApplicationGroupRemoveResponse": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Delete Response message."}}, "type": "object"}, "ApplicationGroupUpdateResponse": {"properties": {"application_group_id": {"type": "string", "description": "Unique ID of the application group"}}, "type": "object"}, "ApplicationGroupViewResponse": {"required": ["application_group_id", "cloud_account_details", "created_at", "name", "tag_list"], "properties": {"application_group_id": {"type": "string", "description": "Unique ID of the Application group."}, "name": {"type": "string", "description": "Name of the Application group."}, "description": {"type": "string", "description": "Description for the Application group"}, "created_at": {"type": "string", "description": "Application group Creation time in UTC"}, "tag_list": {"type": "object", "description": "Tags associated with the application group"}, "cloud_account_details": {"type": "object", "description": "Cloud account"}}, "type": "object"}, "ApplicationListResponse": {"required": ["applications", "total_count"], "properties": {"total_count": {"type": "integer", "description": "Number of applications"}, "applications": {"description": "list of application details.", "$ref": "#/definitions/ApplicationDetail"}}, "type": "object"}, "ApplicationsCreateResponse": {"required": ["application_id"], "properties": {"application_id": {"type": "string", "description": "Unique Id of the application"}}, "type": "object"}, "ApplicationsRemoveResponse": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Delete Response message."}}, "type": "object"}, "ApplicationsUpdateResponse": {"properties": {"application_id": {"type": "string", "description": "Unique ID of the application"}}, "type": "object"}, "ApplicationsViewResponse": {"required": ["application_id", "cloud_account_details", "created_at", "name", "tag_list"], "properties": {"application_id": {"type": "string", "description": "Unique ID of the Application."}, "name": {"type": "string", "description": "Name of the Application."}, "description": {"type": "string", "description": "Description for the Application"}, "created_at": {"type": "string", "description": "Application Creation time in UTC"}, "environment": {"type": "string", "description": "Name of the Application."}, "cost_center": {"type": "string", "description": "Cost Center associated with the application"}, "application_group": {"type": "string", "description": "Application Group associated with the application"}, "dns": {"type": "string", "description": "Name of the DNS."}, "tag_list": {"type": "object", "description": "Tags associated with applications"}, "cloud_account_details": {"type": "object", "description": "cloud account associated with application"}}, "type": "object"}, "ApplyTemplateRequest": {"required": ["cloud_accounts", "monitoring_template_uri"], "properties": {"cloud_accounts": {"type": "array", "description": "Specify the cloud_account_id to which the template to be applied", "items": {"type": "string"}}, "monitoring_template_uri": {"type": "string", "description": "Specify the monitoring_template_uri of the template to be applied"}}, "type": "object"}, "ApplyTemplateResponse": {"required": ["message"], "properties": {"message": {"type": "string"}}, "type": "object"}, "ArgsDetails": {"required": ["job_details"], "properties": {"job_details": {"type": "array", "description": "The Job Details of the script", "items": {"$ref": "#/definitions/JobDetails"}}}, "type": "object"}, "AssessmentComplianceResponse": {"properties": {"configuration_status": {"type": "string", "description": "Configuration Status"}, "summary": {"type": "object", "description": "Summary of validation result"}}, "type": "object"}, "AssessmentDefinitionListRequest": {"properties": {"list_context": {"description": "Optional list context", "$ref": "#/definitions/ListContext"}, "sort": {"type": "array", "description": "Sort criteria", "items": {"$ref": "#/definitions/AssessmentDefinitionListSortCriteria"}}, "filters": {"description": "Filters for the request", "$ref": "#/definitions/AssessmentFilter"}}, "type": "object"}, "AssessmentDefinitionListSortCriteria": {"required": ["column"], "properties": {"column": {"type": "string", "example": "Name", "enum": ["Name", "CreatedOn"], "x-cs-enum-type": "AssessmentDefinitionListSortColumn"}, "ascending": {"type": "boolean"}}, "type": "object"}, "AssessmentFilter": {"properties": {"tenant_id": {"type": "string", "description": "Tenant id"}, "query": {"$ref": "#/definitions/QueryOperator"}}, "type": "object"}, "AssessmentHistoryResponse": {"required": ["Assessment_records", "Total_count"], "properties": {"Total_count": {"type": "integer", "description": "Number of controls in the standard"}, "Assessment_records": {"type": "object", "description": "list of assessment history enteries."}}, "type": "object"}, "AssessmentPostureSummaryResponse": {"required": ["data", "message", "status"], "properties": {"status": {"type": "string", "description": "success"}, "message": {"type": "string", "description": "compliance governance summary listed successfully"}, "data": {"type": "object", "description": "list of assessment posture summary enteries."}}, "type": "object"}, "AssessmentQueryAssessmentApprover": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"assessment_approvers": {"type": "array", "items": {"type": "string", "description": "Approver of assessment"}}}, "type": "object"}], "x-cs-type-name": "AssessmentQueryAssessmentApprover"}, "AssessmentQueryAssessmentOwner": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"assessment_owners": {"type": "array", "items": {"type": "string", "description": "Owner of assessment"}}}, "type": "object"}], "x-cs-type-name": "AssessmentQueryAssessmentOwner"}, "AssessmentQueryFramework": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"framework_ids": {"type": "array", "items": {"type": "string", "description": "ID of framework"}}}, "type": "object"}], "x-cs-type-name": "AssessmentQueryFramework"}, "AssessmentQueryWorkload": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"workload_ids": {"type": "array", "items": {"type": "string", "description": "ID of the Workload Definition"}}}, "type": "object"}], "x-cs-type-name": "AssessmentQueryWorkload"}, "AssessmentReValidationResponseDataModel": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Response message."}}, "type": "object"}, "AssessmentResultResponseDataModel": {"required": ["grade", "history", "last_assessed_time", "overall_status", "score", "summary"], "properties": {"overall_status": {"type": "string", "description": "Overall assessment status for the cloud account"}, "score": {"type": "string", "description": "Assessment score for the cloud account"}, "grade": {"type": "string", "description": "Grade based on the assessment for the cloud account"}, "last_assessed_time": {"type": "string", "description": "Last assessed time for the cloud account"}, "summary": {"type": "object", "description": "Summary of the assessment for the cloud account on OSCAR"}, "history": {"type": "object", "description": "History of the assessment for the cloud account on OSCAR"}}, "type": "object"}, "AssessmentValidationRequest": {"required": ["category", "cloud_account_id", "validation_type"], "properties": {"cloud_account_id": {"type": "string", "description": "Cloud Account Id"}, "category": {"type": "string", "description": "Name of the category.", "example": "operations", "enum": ["operations", "security", "access", "cost", "resource", "compliance"], "x-cs-enum-type": "AssessmentCategory"}, "validation_type": {"type": "string", "description": "Type of Validation"}}, "type": "object"}, "AssessmentValidationRequestDataModel": {"required": ["category", "validation_type"], "properties": {"validation_type": {"type": "string", "description": "Type of validation for the cloud account. If post_onboarding is selected, then the category can only be cost/access/resource/operations/security. Post Onboarding applies for Governance Configuration", "example": "assessment", "enum": ["assessment", "post_onboarding"], "x-cs-enum-type": "ValidationType"}, "category": {"type": "string", "description": "Category of assessment validation for the cloud account", "example": "operations", "enum": ["operations", "security", "access", "cost", "resource", "compliance"], "x-cs-enum-type": "AssessmentCategory"}}, "type": "object"}, "AssessmentValidationResponse": {"required": ["mandatory_requirements", "optional_requirements", "status", "sub_category"], "properties": {"sub_category": {"type": "string", "description": "Sub Category of Assessment"}, "status": {"type": "string", "description": "Status of Assessment Validation"}, "mandatory_requirements": {"type": "object", "description": "Mandatory Requirements"}, "optional_requirements": {"type": "object", "description": "Optional Requirements"}, "configuration_status": {"type": "object", "description": "Configuration Status"}}, "type": "object"}, "AssessmentValidationResponseDataModel": {"required": ["data"], "properties": {"data": {"type": "object", "description": "Assessment validation response for the cloud account based on the category"}}, "type": "object"}, "AssessmentValidationResponseList": {"required": ["assessment_validation_list"], "properties": {"assessment_validation_list": {"type": "array", "description": "Assessment Validation data", "items": {"$ref": "#/definitions/AssessmentValidationResponse"}}}, "type": "object"}, "AssessmentViewQueryAssignedTo": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"assigned_to": {"type": "array", "items": {"type": "string", "description": "User ID to whom the question is assigned to"}}}, "type": "object"}], "x-cs-type-name": "AssessmentViewQueryAssignedTo"}, "AssessmentViewQueryBestPracticeRisk": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"best_practice_risks": {"type": "array", "items": {"type": "string", "description": "Risk of best practice", "example": "Low", "enum": ["Low", "Medium", "High", "None"], "x-cs-enum-type": "WellArchitectedFrameworkRisk"}}}, "type": "object"}], "x-cs-type-name": "AssessmentViewQueryBestPracticeRisk"}, "AssessmentViewQueryBestPracticeStatus": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"best_practice_statuses": {"type": "array", "items": {"type": "string", "description": "Status of best practice", "example": "Open", "enum": ["Open", "NotApplicable", "Verified", "VerifiedWithException"], "x-cs-enum-type": "WellArchitectedFrameworkQuestionStatus"}}}, "type": "object"}], "x-cs-type-name": "AssessmentViewQueryBestPracticeStatus"}, "AssessmentViewQueryComment": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"comments": {"type": "array", "items": {"type": "string", "description": "User id who commented"}}}, "type": "object"}], "x-cs-type-name": "AssessmentViewQueryComment"}, "AssessmentViewQueryNature": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"natures": {"type": "array", "items": {"type": "string", "description": "Nature of the best practice", "example": "Automated", "enum": ["Automated", "Manual"], "x-cs-enum-type": "WellArchitectedFrameworkBestPracticeNature"}}}, "type": "object"}], "x-cs-type-name": "AssessmentViewQueryNature"}, "AssessmentViewQueryOwner": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"owners": {"type": "array", "items": {"type": "string", "description": "Owner of question"}}}, "type": "object"}], "x-cs-type-name": "AssessmentViewQueryOwner"}, "AssessmentViewQueryQuestionRisk": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"question_risks": {"type": "array", "items": {"type": "string", "description": "Risk of question", "example": "Low", "enum": ["Low", "Medium", "High", "None"], "x-cs-enum-type": "WellArchitectedFrameworkRisk"}}}, "type": "object"}], "x-cs-type-name": "AssessmentViewQueryQuestionRisk"}, "AssessmentViewQueryQuestionStatus": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"question_statuses": {"type": "array", "items": {"type": "string", "description": "Status of question", "example": "Open", "enum": ["Open", "NotApplicable", "Verified", "VerifiedWithException"], "x-cs-enum-type": "WellArchitectedFrameworkQuestionStatus"}}}, "type": "object"}], "x-cs-type-name": "AssessmentViewQueryQuestionStatus"}, "Attachment": {"required": ["file_name", "name"], "properties": {"id": {"type": "string"}, "created_at": {"type": "string", "format": "date-time", "description": "Date and Time of the attachment"}, "created_by": {"type": "string", "description": "Creator of the attachment"}, "updated_at": {"type": "string", "format": "date-time", "description": "Last update of the attachment"}, "updated_by": {"type": "string", "description": "Updated By"}, "name": {"type": "string", "description": "Name of the attachment"}, "description": {"type": "string", "description": "Description of the attachment"}, "file_name": {"type": "string", "description": "Original file name of the attachment"}}, "type": "object"}, "AttributeDetails": {"required": ["cloud_account"], "properties": {"cloud_account": {"type": "array", "description": "Cloud account id is unique can be obtained from the list cloud", "items": {"$ref": "#/definitions/CloudAccountDetails"}}}, "type": "object"}, "AuditLogBatchResponse": {"properties": {"results": {"type": "object", "description": "Map from identifier to response model", "additionalProperties": {"$ref": "#/definitions/AuditLogDocument"}}}, "type": "object"}, "AuditLogCreateRequest": {"required": ["event_action", "event_type", "master_account_name", "tenant_name", "user_name"], "properties": {"event_type": {"type": "string", "description": "Type of the event performed.", "example": "Alarm", "enum": ["Alarm", "AlarmListener", "Catalog", "CloudAccount", "ComplianceStandard", "IntegratedTool", "Inventory", "InventoryElements", "MasterAccount", "Policy", "PolicyRecommendation", "Request", "Request-iaas", "Request-workload", "RequestApproval-iaas", "RequestApproval-workload", "RequestJob", "ResourceCatalog", "RoleAccessPolicies", "Scheduler", "ScriptComponent", "ScriptJobs", "Scripts", "Services", "SwitchMasterAccount", "Template", "TemplateBuilder", "TemplateJobs", "Tenant", "User", "UserDelegation", "UserGroup", "UserInvite", "UserLogin", "WellArchitectedFrameworkAssessment", "WellArchitectedFrameworkAssessmentRun", "WellArchitectedFrameworkCustomFramework", "WellArchitectedFrameworkWorkload"], "x-cs-enum-type": "AuditLogEventType"}, "event_action": {"type": "string", "description": "Type of the action performed.", "example": "abandon", "enum": ["abandon", "add_role", "add_tenant", "add_user", "approve", "clone", "create", "delete", "disable", "enable", "execute", "inventory_action", "login", "remove_role", "remove_tenant", "remove_user", "resolve", "save_commit", "start_scan", "update"], "x-cs-enum-type": "AuditLogEventAction"}, "master_account_name": {"type": "string", "description": "The name of the account master within the CoreStack."}, "tenant_name": {"type": "string", "description": "The name of the tenant within the CoreStack account."}, "user_name": {"type": "string", "description": "The name of the user who performed the action."}, "source_ip_address": {"type": "string", "description": "IP from which the action is performed."}, "activity": {"type": "string", "description": "Description for the action done by user."}}, "type": "object"}, "AuditLogDocument": {"properties": {"sysId": {"type": "string", "description": "Id of the document."}, "event_time": {"type": "string", "format": "date-time", "description": "Time of document creation."}, "event_type": {"type": "string", "description": "Type of the event performed.", "example": "Alarm", "enum": ["Alarm", "AlarmListener", "Catalog", "CloudAccount", "ComplianceStandard", "IntegratedTool", "Inventory", "InventoryElements", "MasterAccount", "Policy", "PolicyRecommendation", "Request", "Request-iaas", "Request-workload", "RequestApproval-iaas", "RequestApproval-workload", "RequestJob", "ResourceCatalog", "RoleAccessPolicies", "Scheduler", "ScriptComponent", "ScriptJobs", "Scripts", "Services", "SwitchMasterAccount", "Template", "TemplateBuilder", "TemplateJobs", "Tenant", "User", "UserDelegation", "UserGroup", "UserInvite", "UserLogin", "WellArchitectedFrameworkAssessment", "WellArchitectedFrameworkAssessmentRun", "WellArchitectedFrameworkCustomFramework", "WellArchitectedFrameworkWorkload"], "x-cs-enum-type": "AuditLogEventType"}, "event_action": {"type": "string", "description": "Type of the action performed.", "example": "abandon", "enum": ["abandon", "add_role", "add_tenant", "add_user", "approve", "clone", "create", "delete", "disable", "enable", "execute", "inventory_action", "login", "remove_role", "remove_tenant", "remove_user", "resolve", "save_commit", "start_scan", "update"], "x-cs-enum-type": "AuditLogEventAction"}, "master_account_name": {"type": "string", "description": "The name of the account master within the CoreStack."}, "tenant_name": {"type": "string", "description": "The name of the tenant within the CoreStack account."}, "user_name": {"type": "string", "description": "The name of the user who performed the action."}, "source_ip_address": {"type": "string", "description": "IP from which the action is performed."}, "activity": {"type": "string", "description": "Description of the activity done."}}, "type": "object"}, "AuditLogDocumentSortCriteria": {"required": ["column"], "properties": {"column": {"type": "string", "example": "event_time", "enum": ["event_time"], "x-cs-enum-type": "AuditLogDocumentSortColumn"}, "ascending": {"type": "boolean"}}, "type": "object"}, "AuditLogFilters": {"properties": {"from_date": {"type": "string", "format": "date-time", "description": "Filter from date"}, "to_date": {"type": "string", "format": "date-time", "description": "Filter to date"}, "master_account_names": {"type": "array", "description": "Filter by accounts", "items": {"type": "string"}}, "tenant_names": {"type": "array", "description": "Filter by tenants", "items": {"type": "string"}}, "user_names": {"type": "array", "description": "Filter by users", "items": {"type": "string"}}, "event_types": {"type": "array", "description": "Filter by event types", "items": {"type": "string", "description": "Type of the event performed.", "example": "Alarm", "enum": ["Alarm", "AlarmListener", "Catalog", "CloudAccount", "ComplianceStandard", "IntegratedTool", "Inventory", "InventoryElements", "MasterAccount", "Policy", "PolicyRecommendation", "Request", "Request-iaas", "Request-workload", "RequestApproval-iaas", "RequestApproval-workload", "RequestJob", "ResourceCatalog", "RoleAccessPolicies", "Scheduler", "ScriptComponent", "ScriptJobs", "Scripts", "Services", "SwitchMasterAccount", "Template", "TemplateBuilder", "TemplateJobs", "Tenant", "User", "UserDelegation", "UserGroup", "UserInvite", "UserLogin", "WellArchitectedFrameworkAssessment", "WellArchitectedFrameworkAssessmentRun", "WellArchitectedFrameworkCustomFramework", "WellArchitectedFrameworkWorkload"], "x-cs-enum-type": "AuditLogEventType"}}, "event_actions": {"type": "array", "description": "Filter by event actions", "items": {"type": "string", "description": "Type of the action performed.", "example": "abandon", "enum": ["abandon", "add_role", "add_tenant", "add_user", "approve", "clone", "create", "delete", "disable", "enable", "execute", "inventory_action", "login", "remove_role", "remove_tenant", "remove_user", "resolve", "save_commit", "start_scan", "update"], "x-cs-enum-type": "AuditLogEventAction"}}}, "type": "object"}, "AuditLogListRequest": {"properties": {"list_context": {"description": "Optional list context", "$ref": "#/definitions/ListContext"}, "sort": {"type": "array", "description": "Sort criteria", "items": {"$ref": "#/definitions/AuditLogDocumentSortCriteria"}}, "filters": {"description": "Filters for the request", "$ref": "#/definitions/AuditLogFilters"}}, "type": "object"}, "AuthDetailedResponse": {"required": ["account_id", "alias", "audit", "auth_method", "auth_type", "banner_logo", "cost_currency", "cost_unit", "dashboard_reference", "footer_text", "header_logo", "is_account_admin", "is_full_access", "is_product_admin", "payment", "require_access_key", "subscription_details", "supported_pillars", "tenants", "token", "user", "workflow"], "properties": {"auth_type": {"type": "string", "description": "Authentication type."}, "require_access_key": {"type": "boolean", "description": "Whether access key required."}, "alias": {"type": "object", "description": "Alias details."}, "workflow": {"type": "object", "description": "Workflow details"}, "account_id": {"type": "string", "description": "Account id."}, "is_account_admin": {"type": "boolean", "description": "Whether account admin or not."}, "header_logo": {"type": "string", "description": "Header logo."}, "banner_logo": {"type": "string", "description": "Banner logo."}, "user": {"description": "Token.", "$ref": "#/definitions/UserModel"}, "auth_method": {"type": "string", "description": "Authentication method."}, "tenants": {"type": "array", "description": "Tenants list.", "items": {"$ref": "#/definitions/DetailTenantModel"}}, "audit": {"type": "object", "description": "Audit details."}, "cost_unit": {"type": "string", "description": "Constant unit."}, "is_full_access": {"type": "boolean", "description": "Whether full access or not."}, "subscription_details": {"type": "object", "description": "Subscription details."}, "dashboard_reference": {"type": "object", "description": "Dashboard reference."}, "supported_pillars": {"type": "object", "description": "Supported pillars."}, "payment": {"type": "array", "description": "Payment list.", "items": {"type": "object"}}, "is_product_admin": {"type": "boolean", "description": "Whether Product admin or not."}, "token": {"description": "Token.", "$ref": "#/definitions/Authorization"}, "cost_currency": {"type": "string", "description": "Cost currency."}, "footer_text": {"type": "string", "description": "Footer text."}}, "type": "object"}, "AuthRequest": {"properties": {"access_key": {"type": "string", "description": "API Access Key. This can be retrieved from the <b>My Profile</b> page. Also this will be sent over email when the keys are generated.Please enter username and password pair or access_key and secret_key pair"}, "secret_key": {"type": "string", "description": "API Secret Key. This will be available in the email sent when the keys are generated. If you have lost the secret key, it cannot be retrieved. Request your admin to generate a new set of keys, if lost.Please enter username and password pair or access_key and secret_key pair"}, "username": {"type": "string", "description": "User name which will be used to login to corestack.Please enter username and password pair or access_key and secret_key pair"}, "password": {"type": "string", "description": "Password which will be used to login to corestack.Please enter username and password pair or access_key and secret_key pair"}}, "type": "object"}, "AuthResponse": {"required": ["account_id", "alias", "audit", "banner_logo", "header_logo", "is_account_admin", "license_expiry", "tenants", "token", "user"], "properties": {"token": {"description": "This contains the atrributes access_token, expires_at & issued_at. access_token will be  passed with X-Auth-Token header in all other  APIs for authentication.", "$ref": "#/definitions/Authorization"}, "header_logo": {"type": "string", "description": "Header logo."}, "banner_logo": {"type": "string", "description": "Banner logo."}, "license_expiry": {"type": "string", "description": "License Expiry"}, "user": {"description": "Contains information about the user associated with the Access Key / Secret Key.", "$ref": "#/definitions/UserModel"}, "account_id": {"type": "string", "description": "Id of the Account in CoreStack. There can be multiple tenats within an account, so account_id will be required for performing account level actions such as createTenant."}, "is_account_admin": {"type": "boolean", "description": "Implies the user associated with Access Key / Secret Key is an account admin in CoreStack. True means account admin."}, "tenants": {"type": "array", "description": "List of tenants within the CoreStack account. Each tenant will have an id & name that uniquely identifies it.", "items": {"$ref": "#/definitions/TokenTenantModel"}}, "alias": {"type": "object", "description": "Alias"}, "audit": {"type": "object", "description": "Audit details"}}, "type": "object"}, "AuthValueModel": {"properties": {"access_key": {"type": "string", "description": "Access key for AWS Account"}, "secret_key": {"type": "string", "description": "Secret key for AWS Account"}, "account_type": {"type": "string", "description": "Type of Account type", "example": "master_account", "enum": ["master_account", "linked_account", "billing_account", "linked_project_account", "parent_billing_account"], "x-cs-enum-type": "AuthValueAccountType"}, "cloud_type": {"type": "string", "description": "Type of Cloud", "example": "aws_standard", "enum": ["aws_standard", "Azure_Global", "Azure_Government", "Azure_China"], "x-cs-enum-type": "AuthValueCloudType"}, "protocol": {"type": "string", "description": "Type of Protocol for AWS Account", "example": "access_key", "enum": ["access_key", "assume_role", "oauth2"], "x-cs-enum-type": "AuthValueProtocolType"}, "custom_billing_required": {"type": "boolean", "description": "True if AWS cost report format is standard"}, "cost_report_access": {"type": "string", "description": " Cost Report Access", "example": "master_account", "enum": ["master_account", "delegated_account", "current_account", "none"], "x-cs-enum-type": "AuthValueCostReportAccess"}, "s3_bucket_uri": {"type": "string", "description": "Specify s3 bucket name or bucket URI"}, "master_account": {"type": "string", "description": "Provide master account id from validate authentication"}, "application_id": {"type": "string", "description": " Application ID for Azure Account"}, "application_secret": {"type": "string", "description": "Application Secret for Azure Account"}, "tenant_id": {"type": "string", "description": "Tenant ID for Azure Account"}, "subscription_id": {"type": "string", "description": "Subscriptions ID for Azure Account"}, "subscription_type": {"type": "string", "description": "Type of Subscriptions for Azure Account", "example": "Pay_as_You_Go", "enum": ["Pay_as_You_Go", "Enterprise", "Azure_CSP-InDirect", "Azure_Sponsorship", "Microsoft_Customer_Agreement"], "x-cs-enum-type": "AuthValueSubscriptionType"}, "authentication_type": {"type": "string", "description": "App or Authorization_code"}, "access_token": {"type": "string", "description": "Obtained from validate call"}, "refresh_token": {"type": "string", "description": "Obtained from validate call"}, "parent_account": {"type": "string", "description": "Parent Account"}, "enrollment_id": {"type": "string", "description": "Enrollment ID for Azure EA Account"}, "api_key": {"type": "string", "description": "API Key for Azure EA Account"}, "client_id": {"type": "string", "description": "Client ID for GCP Account"}, "client_secret": {"type": "string", "description": "Client Secret for GCP Account"}, "scope": {"type": "string", "description": "Scope for GCP Account"}, "bucket_name": {"type": "string", "description": " Specify Bucket Name"}, "project_id": {"type": "string", "description": "Project ID for GCP Account"}, "redirect_uri": {"type": "string", "description": "Redirect URI fr GCP Account"}, "authorization_code": {"type": "string", "description": "Authorization code for GCP Account"}, "billing_account": {"type": "string", "description": "Only for Billing Account"}, "data_set_id": {"type": "string", "description": "Only for Billing Account"}, "export_type": {"type": "string", "description": "Only for Billing Account"}}, "type": "object"}, "Authorization": {"required": ["access_token", "expires_at", "issued_at"], "properties": {"issued_at": {"type": "string", "description": "DateTime in UTC when the token was issued."}, "expires_at": {"type": "string", "description": "Token expiry datetime in UTC."}, "access_token": {"type": "string", "description": "This will be used as X-Auth-Token in all other APIs."}}, "type": "object"}, "AwsSecurityHubConfigurationUpdateRequest": {"allOf": [{"$ref": "#/definitions/AwsSecurityHubDetails"}, {"required": ["collect_data"], "properties": {"collect_data": {"type": "boolean", "description": "Enable/Disable AWS Security Hub"}}, "type": "object"}]}, "AwsSecurityHubConfigurationUpdateResponse": {"allOf": [{"$ref": "#/definitions/AwsSecurityHubDetails"}, {"properties": {}, "type": "object"}]}, "AwsSecurityHubConfigurationViewResponse": {"properties": {"collect_data": {"type": "boolean", "description": "Enable/Disable AWS Security Hub"}}, "type": "object"}, "AwsSecurityHubDetails": {"properties": {"cloud_account_id": {"type": "string", "description": "Id of the Cloud Account"}}, "type": "object"}, "AwsSecurityHubFinding": {"properties": {"severity": {"type": "string", "description": "Severity label", "example": "Informational", "enum": ["Informational", "Medium", "Low", "High", "Critical"], "x-cs-enum-type": "AwsSecurityHubSeverity"}, "record_state": {"type": "string", "description": "Record status", "example": "Active", "enum": ["Active", "Archived"], "x-cs-enum-type": "AwsSecurityHubRecordState"}, "workflow_status": {"type": "string", "description": "Workflow status", "example": "New", "enum": ["New", "Notified", "Suppressed", "Resolved"], "x-cs-enum-type": "AwsSecurityHubWorkflowStatus"}, "region": {"type": "string", "description": "Findings region"}, "aws_account_id": {"type": "string", "description": "AWS account id"}, "cloud_account_id": {"type": "string", "description": "Corestack cloud account id"}, "company_name": {"type": "string", "description": "Company name"}, "product_name": {"type": "string", "description": "Product name"}, "title": {"type": "string", "description": "Findings title"}, "resources": {"type": "array", "description": "Impacted resources", "items": {"$ref": "#/definitions/AwsSecurityHubFindingResource"}}, "compliance_status": {"type": "string", "description": "Compliance status", "example": "Passed", "enum": ["Passed", "Failed", "NotAvailable"], "x-cs-enum-type": "AwsSecurityHubComplianceStatus"}, "compliance_related_requirements": {"type": "array", "description": "Related Contorl ARN", "items": {"type": "string"}}, "compliance_security_control_id": {"type": "string"}, "compliance_rule": {"type": "string"}, "compliance_associated_standards": {"type": "array", "description": "Associated Compliance Standards", "items": {"type": "string"}}, "finding_created_at": {"type": "string", "format": "date-time", "description": "Findings created time"}, "finding_updated_at": {"type": "string", "format": "date-time", "description": "Findings updated time"}, "description": {"type": "string", "description": "Findings description"}, "finding_id": {"type": "string", "description": "Finding Id"}, "recommendation_text": {"type": "string", "description": "Recommendation description"}, "recommendation_url": {"type": "string", "description": "Recommendation Link"}, "finding_provider_severity": {"type": "string", "description": "Severity label", "example": "Informational", "enum": ["Informational", "Medium", "Low", "High", "Critical"], "x-cs-enum-type": "AwsSecurityHubSeverity"}, "finding_provider_types": {"type": "array", "description": "Resource Id", "items": {"type": "string"}}, "finding_provider_related_findings": {"type": "array", "description": "Related findings", "items": {"type": "string"}}}, "type": "object"}, "AwsSecurityHubFindingBatchResponse": {"properties": {"results": {"type": "object", "description": "Map from identifier to response model", "additionalProperties": {"$ref": "#/definitions/AwsSecurityHubFinding"}}}, "type": "object"}, "AwsSecurityHubFindingData": {"properties": {"cloud_account_id": {"type": "string", "description": "Corestack cloud account id"}, "tenant_id": {"type": "string", "description": "Corestack cloud tenant id"}, "severity": {"type": "string", "description": "Severity label", "example": "Informational", "enum": ["Informational", "Medium", "Low", "High", "Critical"], "x-cs-enum-type": "AwsSecurityHubSeverity"}, "finding_id": {"type": "string", "description": "Finding Id"}, "title": {"type": "string", "description": "Findings title"}, "description": {"type": "string", "description": "Findings description"}, "product_name": {"type": "string", "description": "Product name"}, "company_name": {"type": "string", "description": "Company name"}, "aws_account_id": {"type": "string", "description": "AWS account id"}, "workflow_status": {"type": "string", "description": "Workflow status", "example": "New", "enum": ["New", "Notified", "Suppressed", "Resolved"], "x-cs-enum-type": "AwsSecurityHubWorkflowStatus"}, "record_state": {"type": "string", "description": "Record status", "example": "Active", "enum": ["Active", "Archived"], "x-cs-enum-type": "AwsSecurityHubRecordState"}, "region": {"type": "string", "description": "Findings region"}, "finding_created_at": {"type": "string", "format": "date-time", "description": "Findings created in AWS time"}, "finding_updated_at": {"type": "string", "format": "date-time", "description": "Findings updated AWS time"}, "created_at": {"type": "string", "format": "date-time", "description": "Findings created time"}, "updated_at": {"type": "string", "format": "date-time", "description": "Findings updated time"}, "resources": {"type": "array", "description": "Impacted resources", "items": {"$ref": "#/definitions/AwsSecurityHubFindingResource"}}, "recommendation_text": {"type": "string", "description": "Recommendation description"}, "recommendation_url": {"type": "string", "description": "Recommendation Link"}, "compliance_status": {"type": "string", "description": "Compliance status", "example": "Passed", "enum": ["Passed", "Failed", "NotAvailable"], "x-cs-enum-type": "AwsSecurityHubComplianceStatus"}, "compliance_related_requirements": {"type": "array", "description": "Related Contorl ARN", "items": {"type": "string"}}, "compliance_associated_standards": {"type": "array", "description": "Associated Compliance Standards", "items": {"type": "string"}}, "compliance_security_control_id": {"type": "string"}, "compliance_rule": {"type": "string"}, "finding_provider_severity": {"type": "string", "description": "Severity label", "example": "Informational", "enum": ["Informational", "Medium", "Low", "High", "Critical"], "x-cs-enum-type": "AwsSecurityHubSeverity"}, "finding_provider_types": {"type": "array", "description": "Resource Id", "items": {"type": "string"}}, "finding_provider_related_findings": {"type": "array", "description": "Related findings", "items": {"type": "string"}}, "first_observed_at": {"type": "string", "format": "date-time", "description": "Findings first observed  time"}, "last_observed_at": {"type": "string", "format": "date-time", "description": "Findings last observed time"}, "generator_id": {"type": "string", "description": "Findings Generator Id"}, "source_account_id": {"type": "string", "description": "Source Corestack Account Id"}}, "type": "object"}, "AwsSecurityHubFindingFilters": {"properties": {"text_search_value": {"type": "string", "description": "Text filter the tag keys"}, "filters": {"description": "Account filters for the tags", "$ref": "#/definitions/AccountFilters"}, "findings_filter": {"$ref": "#/definitions/QueryOperator"}}, "type": "object"}, "AwsSecurityHubFindingListRequest": {"properties": {"list_context": {"description": "Optional list context", "$ref": "#/definitions/ListContext"}, "sort": {"type": "array", "description": "Sort criteria", "items": {"$ref": "#/definitions/AwsSecurityHubFindingSortCriteria"}}, "filters": {"description": "Filters for the request", "$ref": "#/definitions/AwsSecurityHubFindingFilters"}}, "type": "object"}, "AwsSecurityHubFindingProductNameRequest": {"properties": {"tenant_id": {"type": "string", "description": "Which tenant Id to fetch product names for"}}, "type": "object"}, "AwsSecurityHubFindingProductNameResponse": {"properties": {"product_names": {"type": "array", "description": "List of Product Names", "items": {"type": "string"}}}, "type": "object"}, "AwsSecurityHubFindingQueryCloudAccount": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"required": ["cloud_account_ids"], "properties": {"cloud_account_ids": {"type": "array", "description": "Cloud Accounts for the resources", "items": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "AwsSecurityHubFindingQueryCloudAccount"}, "AwsSecurityHubFindingQueryLocation": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"required": ["regions"], "properties": {"regions": {"type": "array", "description": "Regions for the findings", "items": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "AwsSecurityHubFindingQueryLocation"}, "AwsSecurityHubFindingQueryProductName": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"required": ["product_names"], "properties": {"product_names": {"type": "array", "description": "Product names for the finginds", "items": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "AwsSecurityHubFindingQueryProductName"}, "AwsSecurityHubFindingQueryResource": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"required": ["resources"], "properties": {"resources": {"type": "array", "description": "Resource fields for the resources", "items": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "AwsSecurityHubFindingQueryResource"}, "AwsSecurityHubFindingQuerySeverity": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"required": ["severities"], "properties": {"severities": {"type": "array", "description": "severitites for the findings", "items": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "AwsSecurityHubFindingQuerySeverity"}, "AwsSecurityHubFindingRegionRequest": {"properties": {"tenant_id": {"type": "string", "description": "Which tenant Id to fetch regions for"}}, "type": "object"}, "AwsSecurityHubFindingRegionResponse": {"properties": {"regions": {"type": "array", "description": "List of Regions", "items": {"type": "string"}}}, "type": "object"}, "AwsSecurityHubFindingResource": {"properties": {"type": {"type": "string", "description": "Resource Type"}, "id": {"type": "string", "description": "Resource Id"}, "region": {"type": "string", "description": "Resource Region"}}, "type": "object"}, "AwsSecurityHubFindingResourcesRequest": {"properties": {"tenant_id": {"type": "string", "description": "Which tenant Id to fetch regions for"}}, "type": "object"}, "AwsSecurityHubFindingResourcesResponse": {"properties": {"resources": {"type": "array", "description": "List of Resources", "items": {"type": "string"}}}, "type": "object"}, "AwsSecurityHubFindingSeverityRequest": {"properties": {"tenant_id": {"type": "string", "description": "Which tenant Id to fetch severities for"}}, "type": "object"}, "AwsSecurityHubFindingSeverityResponse": {"properties": {"severities": {"type": "array", "description": "List of Severities", "items": {"type": "string"}}}, "type": "object"}, "AwsSecurityHubFindingSortCriteria": {"required": ["column"], "properties": {"column": {"type": "string", "example": "created_at", "enum": ["created_at"], "x-cs-enum-type": "AwsSecurityHubFindingSortColumn"}, "ascending": {"type": "boolean"}}, "type": "object"}, "AwsSecurityHubPermissionDetail": {"properties": {"securityhub_getfindings": {"type": "string", "description": "Permission status", "example": "Allowed", "enum": ["Allowed", "Denied", "NotAbleToValidate", "ImplicitDeny"], "x-cs-enum-type": "AwsSecurityHubPermissionStatus"}, "securityhub_getadministratoraccount": {"type": "string", "description": "Permission status", "example": "Allowed", "enum": ["Allowed", "Denied", "NotAbleToValidate", "ImplicitDeny"], "x-cs-enum-type": "AwsSecurityHubPermissionStatus"}}, "type": "object"}, "AwsSecurityHubPermissionValidationDetailRequest": {"allOf": [{"$ref": "#/definitions/AwsSecurityHubDetails"}, {"properties": {"category": {"type": "string", "description": "AWS  Security Hub category"}, "sub_category": {"type": "string", "description": "AWS  Security Hub sub category"}}, "type": "object"}]}, "AwsSecurityHubPermissionValidationDetailResponse": {"properties": {"mandatory_requirements": {"description": "Aws Security Hub permissions", "$ref": "#/definitions/AwsSecurityHubPermissionDetail"}, "status": {"type": "string", "description": "Permission validation status", "example": "Success", "enum": ["Success", "Failed", "InProgress"], "x-cs-enum-type": "AwsSecurityHubPermissionValidationStatus"}}, "type": "object"}, "AwsSecurityHubPermissionValidationResponse": {"allOf": [{"$ref": "#/definitions/AwsSecurityHubDetails"}, {"properties": {}, "type": "object"}]}, "AwsSecurityHubPermissionValidationResultResponse": {"allOf": [{"$ref": "#/definitions/AwsSecurityHubDetails"}, {"properties": {}, "type": "object"}]}, "AwsSecurityHubRegionDetail": {"properties": {"region": {"type": "string", "description": "AWS security hub region"}, "status": {"type": "string", "description": "Permission validation status", "example": "Success", "enum": ["Success", "Failed", "InProgress"], "x-cs-enum-type": "AwsSecurityHubPermissionValidationStatus"}, "message": {"type": "string", "description": "AWS security hub status message"}}, "type": "object"}, "AwsSecurityHubSyncDetailsRequest": {"allOf": [{"$ref": "#/definitions/AwsSecurityHubDetails"}, {"properties": {}, "type": "object"}]}, "AwsSecurityHubSyncDetailsResponse": {"properties": {"last_sync_status": {"type": "string", "description": "Last sync status"}, "last_sync_time": {"type": "string", "format": "date-time", "description": "Last sync time"}, "last_successful_sync_time": {"type": "string", "format": "date-time", "description": "Last successful sync time"}, "status_reason": {"type": "string", "description": "Sync status reason"}}, "type": "object"}, "AwsSsmAutomationExecution": {"allOf": [{"$ref": "#/definitions/AwsSsmBaseExecution"}, {"properties": {"step_execution_truncated": {"type": "boolean", "description": "Flag to check if the executed step is truncated."}, "mode": {"type": "string", "description": "Mode of the Base Execution", "example": "Auto", "enum": ["Auto", "Interactive"], "x-cs-enum-type": "AwsSsmBaseExecutionMode"}, "executed_by": {"type": "string", "description": "IAM ARN of the user who executed the document"}, "automation_type": {"type": "string", "description": "Type of the automation document"}, "outputs": {"type": "object", "description": "Output fields of the step", "additionalProperties": {"type": "string"}}, "resolved_targets": {"description": "resolved target resources", "$ref": "#/definitions/AwsSsmResolvedTarget"}, "failure_message": {"type": "string", "description": "Failure message of the job."}}, "type": "object"}], "x-cs-type-name": "AwsSsmAutomationExecution"}, "AwsSsmAutomationFilter": {"allOf": [{"$ref": "#/definitions/AwsSsmExecutionFilter"}, {"properties": {"status": {"type": "string", "description": "Status of the Automation Execution", "example": "Pending", "enum": ["Pending", "InProgress", "Waiting", "Success", "TimedOut", "Cancelling", "Cancelled", "Failed", "PendingApproval", "Approved", "Rejected", "Scheduled", "RunbookInProgress", "PendingChangeCalendarOverride", "ChangeCalendarOverrideApproved", "ChangeCalendarOverrideRejected", "CompletedWithSuccess", "CompletedWithFailure"], "x-cs-enum-type": "AwsSsmAutomationExecutionStatus"}}, "type": "object"}], "x-cs-type-name": "AwsSsmAutomationFilter"}, "AwsSsmBaseDocumentFilter": {"required": ["flavor"], "properties": {"cloud_account_details": {"type": "array", "items": {"description": "Id and name of the cloud accounts.", "$ref": "#/definitions/AwsSsmCloudAccount"}}, "regions": {"type": "array", "description": "Regions based on the available documents.", "items": {"type": "string"}}}, "discriminator": "flavor", "type": "object", "x-cs-subtypes": [{"subtype_model": "AwsSsmExecutionFilter", "subtype_name": "AwsSsmExecutionFilter"}, {"subtype_model": "AwsSsmAutomationFilter", "subtype_name": "AwsSsmAutomationFilter"}, {"subtype_model": "AwsSsmCommandFilter", "subtype_name": "AwsSsmCommandFilter"}, {"subtype_model": "AwsSsmDocumentFilter", "subtype_name": "AwsSsmDocumentFilter"}]}, "AwsSsmBaseExecuteDocumentRequest": {"required": ["cloud_account_id", "document_name", "document_version", "region"], "properties": {"cloud_account_id": {"type": "string", "description": "Cloud Account id  for which command document need to be executed."}, "region": {"type": "string", "description": "Region of the document to be executed."}, "document_name": {"type": "string", "description": "Name of the document."}, "document_version": {"type": "string", "description": "The SSM document version to use in the request."}, "document_hash": {"type": "string", "description": "The Sha256 or Sha1 hash created by the system when the document was created."}, "document_hash_type": {"type": "string", "description": "The Sha256 or Sha1 hash created by the system when the document was created."}, "parameters": {"type": "object", "description": "The required and optional parameters specified in the document being run.", "additionalProperties": {"type": "array", "items": {"type": "string"}}}, "max_concurrency": {"type": "string", "description": "The maximum number of managed nodes that are allowed to run the command at the same time."}, "max_errors": {"type": "string", "description": "The maximum number of errors allowed without the command failing."}, "alarm_configuration": {"description": "The CloudWatch alarm you want to apply to your command.", "$ref": "#/definitions/AwsSsmDocumentAlarmConfiguration"}, "change_id": {"type": "string", "description": "Service Now tracking id"}}, "type": "object"}, "AwsSsmBaseExecution": {"required": ["flavor"], "properties": {"inputs": {"type": "object", "additionalProperties": {"type": "string"}}, "targets": {"type": "array", "items": {"description": "Details of the target.", "$ref": "#/definitions/AwsSsmTarget"}}, "max_concurrency": {"type": "string"}, "max_errors": {"type": "string", "description": "The maximum number of errors allowed without the command failing."}}, "discriminator": "flavor", "type": "object", "x-cs-subtypes": [{"subtype_model": "AwsSsmCommandExecution", "subtype_name": "AwsSsmCommandExecution"}, {"subtype_model": "AwsSsmAutomationExecution", "subtype_name": "AwsSsmAutomationExecution"}]}, "AwsSsmCloudAccount": {"properties": {"id": {"type": "string", "description": "Id of the cloud account."}, "name": {"type": "string", "description": "Name of the cloud account."}, "sync_status": {"$ref": "#/definitions/AwsSsmCloudAccountSyncDetails"}}, "type": "object"}, "AwsSsmCloudAccountSyncDetails": {"properties": {"initiated_at": {"type": "string", "format": "date-time", "description": "Time when the document sync is started"}, "completed_at": {"type": "string", "format": "date-time", "description": "Time when the document sync is completed"}, "sync_type": {"type": "string", "description": "Type of the document sync", "example": "automation", "enum": ["automation", "manual"], "x-cs-enum-type": "AwsSsmDocumentSyncType"}, "sync_status": {"type": "string", "description": "Status of the sync for the particular cloud account"}}, "type": "object"}, "AwsSsmCloudWatchOutputConfig": {"properties": {"log_group_name": {"type": "string", "description": "Name of the log group created to monitor."}, "output_enabled": {"type": "boolean", "description": "Enabled output keys"}}, "type": "object"}, "AwsSsmCommandDocumentAlarm": {"properties": {"name": {"type": "string", "description": "The name of CloudWatch alarm."}}, "type": "object"}, "AwsSsmCommandDocumentCloudWatchOutputConfig": {"properties": {"cloud_watch_log_group_name": {"type": "string", "description": "The name of the CloudWatch Logs log group where you want to send command output."}, "cloud_watch_output_enabled": {"type": "boolean", "description": "Enables Systems Manager to send command output to CloudWatch Logs."}}, "type": "object"}, "AwsSsmCommandDocumentTarget": {"properties": {"key": {"type": "string", "description": "Supported keys: InstanceIds/tag/resource-groups"}, "values": {"type": "array", "description": "Supported values: <instance-id-1>,<instance-id-2>/<my-tag-value-1>,<my-tag-value-2>/<resource-type-1>,<resource-type-2>", "items": {"type": "string"}}}, "type": "object"}, "AwsSsmCommandExecution": {"allOf": [{"$ref": "#/definitions/AwsSsmBaseExecution"}, {"properties": {"comment": {"type": "string", "description": "User specified information."}, "parameters": {"type": "object", "description": "The parameter values to be inserted in the document when running the command", "additionalProperties": {"type": "string"}}, "requested_date_time": {"type": "string", "format": "date-time", "description": "The date and time the command was requested."}, "expires_after": {"type": "string", "format": "date-time", "description": "Time after the command expires."}, "instance_ids": {"type": "array", "description": "List of target instance ids.", "items": {"type": "string"}}, "output_s3_region": {"type": "string", "description": "Region of s3 bucket to store output."}, "output_s3_bucket_name": {"type": "string", "description": "Name of s3 bucket to store output."}, "output_s3_key_prefix": {"type": "string", "description": "Key prefix of s3 path."}, "target_count": {"type": "string", "description": "Number of target resources selected."}, "completed_count": {"type": "string", "description": "Number of target resources completed"}, "error_count": {"type": "string", "description": "Number of target resources failed"}, "delivery_timed_out_count": {"type": "string", "description": "Time to wait before failing"}, "service_role": {"type": "string", "description": "Role of the service."}, "notification_config": {"description": "Configuration details of the notification.", "$ref": "#/definitions/AwsSsmNotificationConfig"}, "cloudwatch_output_config": {"description": "Cloud watch output configuration details", "$ref": "#/definitions/AwsSsmCloudWatchOutputConfig"}, "delivery_timeout_seconds": {"type": "number", "description": "Delivery Time out in seconds"}, "status": {"type": "string", "description": "Status of the Execution", "example": "Pending", "enum": ["Pending", "InProgress", "Delayed", "Success", "Cancelled", "TimedOut", "Failed", "Cancelling"], "x-cs-enum-type": "AwsSsmCommandExecutionStatus"}, "status_details": {"type": "string", "description": "Detailed status of the execution"}, "alarm_configuration": {"$ref": "#/definitions/AwsSsmDocumentAlarmConfiguration"}}, "type": "object"}], "x-cs-type-name": "AwsSsmCommandExecution"}, "AwsSsmCommandFilter": {"allOf": [{"$ref": "#/definitions/AwsSsmExecutionFilter"}, {"properties": {"status": {"type": "string", "description": "Status of the Execution", "example": "Pending", "enum": ["Pending", "InProgress", "Delayed", "Success", "Cancelled", "TimedOut", "Failed", "Cancelling"], "x-cs-enum-type": "AwsSsmCommandExecutionStatus"}}, "type": "object"}], "x-cs-type-name": "AwsSsmCommandFilter"}, "AwsSsmCommandInstanceExecutionBatchResponse": {"properties": {"results": {"type": "object", "description": "Map from identifier to response model", "additionalProperties": {"$ref": "#/definitions/AwsSsmCommandInstanceExecutionDetail"}}}, "type": "object"}, "AwsSsmCommandInstanceExecutionDetail": {"properties": {"sysId": {"type": "string", "description": "Id of the command execution"}, "job_id": {"type": "string", "description": "Id of the command execution job"}, "instance_id": {"type": "string", "description": "The ID of the instance on which the command document is executed."}, "instance_name": {"type": "string", "description": "The Name of the instance on which the command document is executed."}, "comment": {"type": "string", "description": "The comment text for the command."}, "execution_start_time": {"type": "string", "format": "date-time", "description": "The date and time the plugin started running."}, "execution_end_time": {"type": "string", "format": "date-time", "description": "The date and time the plugin finished running."}, "status": {"type": "string", "description": "Status of the Execution", "example": "Pending", "enum": ["Pending", "InProgress", "Delayed", "Success", "Cancelled", "TimedOut", "Failed", "Cancelling"], "x-cs-enum-type": "AwsSsmCommandExecutionStatus"}, "status_details": {"type": "string", "description": "Detailed status of the execution"}, "command_plugins": {"type": "array", "description": "Plugin details of the command execution", "items": {"$ref": "#/definitions/AwsSsmCommandPlugin"}}}, "type": "object"}, "AwsSsmCommandPlugin": {"properties": {"name": {"type": "string", "description": "Name of the plugin"}, "status": {"type": "string", "description": "Status of the Execution", "example": "Pending", "enum": ["Pending", "InProgress", "Delayed", "Success", "Cancelled", "TimedOut", "Failed", "Cancelling"], "x-cs-enum-type": "AwsSsmCommandExecutionStatus"}, "status_details": {"type": "string", "description": "Detailed status of the execution"}, "response_code": {"type": "integer", "description": "Response code of the plug in"}, "response_start_date_time": {"type": "string", "format": "date-time"}, "response_finish_date_time": {"type": "string", "format": "date-time"}, "output": {"type": "string", "description": "Output of the execution"}, "plugin_name": {"type": "string", "description": "Name of the plugin"}, "standard_output_contents": {"type": "string", "description": "standard output parameters"}, "standard_output_url": {"type": "string", "description": "standard url of the output"}, "standard_error_content": {"type": "string", "description": "standard error contents of the output."}, "standard_error_url": {"type": "string", "description": "standard url of the error content"}}, "type": "object"}, "AwsSsmContentAttachmentDetail": {"properties": {"name": {"type": "string", "description": "The name of an attachment."}, "size": {"type": "integer", "description": "The size of an attachment in bytes."}, "hash": {"type": "string", "description": "The cryptographic hash value of the document content."}, "hash_type": {"type": "string", "description": "The hash algorithm used to calculate the hash value"}, "url": {"type": "string", "description": "The URL location of the attachment content."}}, "type": "object"}, "AwsSsmDocs": {"properties": {"name": {"type": "string", "description": "Name of the SSM document"}, "master_account_id": {"type": "string", "description": "The unique identifier of the master account to which the document is associated."}, "cloud_account_id": {"type": "string", "description": "ID of the cloud account"}, "status": {"type": "string", "description": "Status of the document", "example": "Creating", "enum": ["Creating", "Active", "Updating", "Deleting", "Failed", "Deleted"], "x-cs-enum-type": "AwsSsmAutomationDocumentStatus"}, "document_type": {"type": "string", "description": "The document type"}, "latest_version": {"type": "string", "description": "The document version."}, "owner": {"type": "string", "description": "The Amazon Web Services user that created the document"}, "default_version": {"type": "string", "description": "The default version"}, "created_at": {"type": "string", "format": "date-time", "description": "DB record created at"}, "created_by": {"type": "string", "description": "Name of the user who created the document"}, "updated_at": {"type": "string", "format": "date-time", "description": "DB record last updated at"}, "updated_by": {"type": "string", "description": "Name of the user updated the document"}, "document_creation_time": {"type": "string", "format": "date-time", "description": "The date the SSM document was created"}, "tags": {"type": "array", "description": "List of tag key/value pairs", "items": {"$ref": "#/definitions/KeyValuePair"}}, "categories": {"type": "array", "description": "The classification of a document to help you identify and categorize", "items": {"type": "string"}}, "category_identifiers": {"type": "array", "description": "The value that identifies a documents category", "items": {"type": "string"}}, "region": {"type": "string", "description": "The region of the document"}, "scope": {"type": "string", "description": "The scope of owner document"}, "permission_details": {"description": "Describes the permissions for a Amazon Web Services Systems Manager document", "$ref": "#/definitions/AwsSsmDocsPermissionDetail"}}, "type": "object"}, "AwsSsmDocsAccountSharingInfo": {"properties": {"account_id": {"type": "string", "description": "The Amazon Web Services account ID where the current document is shared"}, "shared_document_version": {"type": "string", "description": "The version of the current document shared with the account."}}, "type": "object"}, "AwsSsmDocsPermissionDetail": {"properties": {"account_ids": {"type": "array", "description": "The account IDs that have permission to use this document.", "items": {"type": "string"}}, "account_sharing_info": {"type": "array", "description": "A list of Amazon Web Services accounts where the current document is shared and the version shared with each account", "items": {"$ref": "#/definitions/AwsSsmDocsAccountSharingInfo"}}}, "type": "object"}, "AwsSsmDocument": {"properties": {"sysId": {"type": "string", "description": "Id of the document."}, "name": {"type": "string", "description": "Name of the document."}, "categories": {"type": "array", "description": "Category of the document.", "items": {"type": "string"}}, "document_type": {"type": "string", "description": "Type of the document."}, "owner": {"type": "string", "description": "Owner of the document."}, "os_types": {"type": "array", "description": "Platform of the document can be executed.", "items": {"type": "string"}}, "scope": {"type": "string", "description": "Scope of the SSM document."}, "cloud_account_id": {"type": "string", "description": "For private, self type of documents the cloud account id will be mapped"}, "region": {"type": "string", "description": "For non global document region based mapping will be there"}, "document_creation_time": {"type": "string", "format": "date-time", "description": "Time of document creation"}, "latest_version": {"type": "string", "description": "Latest version of the document"}, "default_version": {"type": "string", "description": "The default version"}, "document_version": {"type": "string", "description": "Current document version that is viewing"}, "status": {"type": "string", "description": "Status of the document", "example": "Creating", "enum": ["Creating", "Active", "Updating", "Deleting", "Failed", "Deleted"], "x-cs-enum-type": "AwsSsmAutomationDocumentStatus"}, "tags": {"type": "array", "description": "Tag key and Value pair available for the document", "items": {"$ref": "#/definitions/AwsSsmDocumentTag"}}, "permission_details": {"description": "Permission details of the Document.", "$ref": "#/definitions/AwsSsmDocumentPermissionDetail"}, "created_at": {"type": "string", "format": "date-time", "description": "Time of the document synced with system."}, "updated_at": {"type": "string", "format": "date-time", "description": "last synced time of the document."}}, "type": "object"}, "AwsSsmDocumentAccountShared": {"properties": {"account_id": {"type": "string", "description": "AWS Account Id to which the Document is shared."}, "shared_document_version": {"type": "string", "description": "Version of the document which is shared with other accounts."}}, "type": "object"}, "AwsSsmDocumentAlarmConfiguration": {"properties": {"ignore_poll_alarm_failure": {"type": "boolean", "description": "The automation or command continues to run, either the Alarm status is OK or INSUFFICIENT_DATA."}, "alarms": {"type": "array", "description": "List of Alarms.", "items": {"$ref": "#/definitions/AwsSsmCommandDocumentAlarm"}}}, "type": "object"}, "AwsSsmDocumentExecutionBatchResponse": {"properties": {"results": {"type": "object", "description": "Map from identifier to response model", "additionalProperties": {"$ref": "#/definitions/AwsSsmJob"}}}, "type": "object"}, "AwsSsmDocumentFilter": {"allOf": [{"$ref": "#/definitions/AwsSsmBaseDocumentFilter"}, {"properties": {"owners": {"type": "array", "description": "The AWS user that created the document.", "items": {"type": "string"}}, "categories": {"type": "array", "description": "The classification of a document to help you identify and categorize its use.", "items": {"type": "string"}}, "platform_types": {"type": "array", "description": "The list of operating system (OS) platforms compatible with available SSM documents.", "items": {"type": "string"}}, "filters": {"description": "Account filters for the tags", "$ref": "#/definitions/AwsSsmDocumentQueryFilters"}}, "type": "object"}], "x-cs-type-name": "AwsSsmDocumentFilter"}, "AwsSsmDocumentPermissionDetail": {"properties": {"account_ids": {"type": "array", "description": "AWS account ids ", "items": {"type": "string"}}, "account_sharing_info": {"type": "array", "description": "AWS account details", "items": {"$ref": "#/definitions/AwsSsmDocumentAccountShared"}}}, "type": "object"}, "AwsSsmDocumentQueryCategory": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"categories": {"type": "array", "description": "Categories for the findings", "items": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "AwsSsmDocumentQueryCategory"}, "AwsSsmDocumentQueryCloudAccount": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"cloud_account_ids": {"type": "array", "description": "Cloud accounts for the document", "items": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "AwsSsmDocumentQueryCloudAccount"}, "AwsSsmDocumentQueryExecutedBy": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"executed_by": {"type": "array", "description": "IAM ARN of the user who executed the document", "items": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "AwsSsmDocumentQueryExecutedBy"}, "AwsSsmDocumentQueryFilters": {"properties": {"regions": {"type": "array", "description": "Regions based on the available documents (all if missing)", "items": {"type": "string"}}, "owners": {"type": "array", "description": "The AWS user that created the document (all if missing)", "items": {"type": "string"}}, "categories": {"type": "array", "description": "The classification of a document to help you identify and categorize its use (all if missing)", "items": {"type": "string"}}}, "type": "object"}, "AwsSsmDocumentQueryName": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"document_names": {"type": "array", "description": "Name of the Automation/Command document", "items": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "AwsSsmDocumentQueryName"}, "AwsSsmDocumentQueryOwner": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"owners": {"type": "array", "description": "Owners for the findings", "items": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "AwsSsmDocumentQueryOwner"}, "AwsSsmDocumentQueryRegion": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"regions": {"type": "array", "description": "Regions for the document", "items": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "AwsSsmDocumentQueryRegion"}, "AwsSsmDocumentQueryStatus": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"statuses": {"type": "array", "description": "List of status of the execution", "items": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "AwsSsmDocumentQueryStatus"}, "AwsSsmDocumentSyncRequest": {"properties": {"cloud_account_ids": {"type": "array", "description": "List of ids of the cloud account for manual document sync.", "items": {"type": "string"}}}, "type": "object"}, "AwsSsmDocumentSyncResponse": {"properties": {"allowed_cloud_accounts": {"type": "array", "description": "List of cloud account ids for which manual sync triggered.", "items": {"type": "string"}}, "denied_cloud_accounts": {"type": "array", "description": "List of cloud account ids for which user may not have access or invalid id", "items": {"type": "string"}}}, "type": "object"}, "AwsSsmDocumentTag": {"properties": {"key": {"type": "string", "description": "Name for the tag key"}, "value": {"type": "string", "description": "Value for the respective tag key"}}, "type": "object"}, "AwsSsmDocumentVersion": {"properties": {"content": {"type": "string", "description": "A structure that includes attributes that describe a document attachment"}, "document_version": {"type": "string", "description": "The document version"}, "document_format": {"type": "string", "description": "The document format, either JSON or YAML"}, "description": {"type": "string", "description": "A description of the document"}, "document_id": {"type": "string", "description": "Document ID of SSM docs"}, "document_creation_time": {"type": "string", "format": "date-time", "description": "The date the SSM document was created"}, "schema_version": {"type": "string", "description": "The schema version"}, "target_type": {"type": "string", "description": "The target type defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance"}, "parameters": {"type": "array", "description": "Parameters specified in a Systems Manager document that run on the server", "items": {"$ref": "#/definitions/AwsSsmParameter"}}, "os_types": {"type": "array", "description": "The list of operating system (OS) platforms", "items": {"type": "string"}}, "attachment_contents": {"type": "array", "description": "A description of the document attachments, including names, locations, sizes", "items": {"$ref": "#/definitions/AwsSsmContentAttachmentDetail"}}}, "type": "object"}, "AwsSsmDocumentVersionBatchResponse": {"properties": {"results": {"type": "object", "description": "Map from identifier to response model", "additionalProperties": {"$ref": "#/definitions/AwsSsmDocumentVersionDetails"}}}, "type": "object"}, "AwsSsmDocumentVersionDetails": {"allOf": [{"$ref": "#/definitions/AwsSsmDocumentVersion"}, {"properties": {"sysId": {"type": "string"}, "document_creation_time": {"type": "string", "format": "date-time"}}, "type": "object"}]}, "AwsSsmDocumentsBatchResponse": {"properties": {"results": {"type": "object", "description": "Map from identifier to response model", "additionalProperties": {"$ref": "#/definitions/AwsSsmDocument"}}}, "type": "object"}, "AwsSsmExecuteAutomationDocumentRequest": {"allOf": [{"$ref": "#/definitions/AwsSsmBaseExecuteDocumentRequest"}, {"properties": {"client_token": {"type": "string", "description": "Client auth token."}, "mode": {"type": "string", "description": "Execution mode of the document."}, "target_parameter_name": {"type": "string", "description": "The name of the parameter used as the target resource for the rate-controlled execution."}, "targets": {"type": "array", "description": "An array of search criteria that targets managed nodes using a Key,Value combination.", "items": {"$ref": "#/definitions/AwsSsmCommandDocumentTarget"}}, "target_maps": {"type": "object", "description": "A key-value mapping of document parameters to target resources.", "additionalProperties": {"type": "array", "items": {"type": "string"}}}, "target_locations": {"type": "array", "description": "A location is a combination of AWS Regions and/or AWS accounts.", "items": {"$ref": "#/definitions/AwsSsmExecuteAutomationTargetLocation"}}, "tags": {"type": "array", "description": "List of tag key/value pairs", "items": {"$ref": "#/definitions/KeyValuePair"}}}, "type": "object"}]}, "AwsSsmExecuteAutomationTargetLocation": {"properties": {"accounts": {"type": "array", "description": "The AWS accounts targeted by the current Automation execution.", "items": {"type": "string"}}, "execution_role_name": {"type": "string", "description": "The Automation execution role used by the currently running Automation."}, "regions": {"type": "array", "description": "The AWS Regions targeted by the current Automation execution.", "items": {"type": "string"}}, "target_alarm_configuration": {"description": "Details of the cloud watch alarm.", "$ref": "#/definitions/AwsSsmDocumentAlarmConfiguration"}, "target_location_max_concurrency": {"type": "string", "description": "The maximum number of AWS Regions and AWS accounts allowed to run the Automation concurrently."}, "target_location_max_errors": {"type": "string", "description": "The maximum number of errors allowed before the system stops queueing additional Automation executions for the currently running Automation."}}, "type": "object"}, "AwsSsmExecuteCommandDocumentRequest": {"allOf": [{"$ref": "#/definitions/AwsSsmBaseExecuteDocumentRequest"}, {"properties": {"instance_ids": {"type": "array", "description": "The IDs of the managed nodes where the command should run.", "items": {"type": "string"}}, "targets": {"type": "array", "description": "An array of search criteria that targets managed nodes using a Key,Value combination.", "items": {"$ref": "#/definitions/AwsSsmCommandDocumentTarget"}}, "timeout_seconds": {"type": "integer", "description": "If this time is reached and the command has not already started running, it wont run."}, "comment": {"type": "string", "description": "User-specified information about the command."}, "output_s3_bucket_name": {"type": "string", "description": "The name of the S3 bucket where command execution responses should be stored."}, "output_s3_key_prefix": {"type": "string", "description": "The directory structure within the S3 bucket where the responses should be stored."}, "service_role_arn": {"type": "string", "description": "The ARN of the AWS IAM service role to use to publish Amazon SNS notifications for Run Command commands."}, "notification_config": {"description": "Configurations for sending notifications.", "$ref": "#/definitions/AwsSsmNotificationConfig"}, "cloud_watch_output_config": {"description": "Enables AWS Systems Manager to send Run Command output to Amazon CloudWatch Logs.", "$ref": "#/definitions/AwsSsmCommandDocumentCloudWatchOutputConfig"}}, "type": "object"}]}, "AwsSsmExecuteDocumentResponse": {"properties": {"execution_id": {"type": "string", "description": "Automation Execution Id"}}, "type": "object"}, "AwsSsmExecutionFilter": {"allOf": [{"$ref": "#/definitions/AwsSsmBaseDocumentFilter"}, {"properties": {"executed_by": {"type": "array", "description": "Document executed by", "items": {"type": "string"}}, "document_names": {"type": "array", "description": "Name of the Automation/Command document", "items": {"type": "string"}}, "filters": {"description": "Query filters for the execution", "$ref": "#/definitions/AwsSsmExecutionQueryFilters"}}, "type": "object"}], "x-cs-type-name": "AwsSsmExecutionFilter"}, "AwsSsmExecutionFilters": {"properties": {"group_job_ids": {"type": "array", "description": "List of group job ids.", "items": {"type": "string"}}, "parent_job_ids": {"type": "array", "description": "List of parent job ids.", "items": {"type": "string"}}, "cloud_account_ids": {"type": "array", "description": "List of ids of the cloud account.", "items": {"type": "string"}}, "regions": {"type": "array", "description": "region of the document to be executed.", "items": {"type": "string"}}, "document_ids": {"type": "array", "description": "Name of the document.", "items": {"type": "string"}}, "document_types": {"type": "array", "description": "Type of the executed document", "items": {"type": "string"}}, "executed_by": {"type": "array", "description": "IAM ARN of the user who executed the document", "items": {"type": "string"}}, "status": {"type": "string", "description": "Status of the Automation Execution", "example": "Pending", "enum": ["Pending", "InProgress", "Waiting", "Success", "TimedOut", "Cancelling", "Cancelled", "Failed", "PendingApproval", "Approved", "Rejected", "Scheduled", "RunbookInProgress", "PendingChangeCalendarOverride", "ChangeCalendarOverrideApproved", "ChangeCalendarOverrideRejected", "CompletedWithSuccess", "CompletedWithFailure"], "x-cs-enum-type": "AwsSsmAutomationExecutionStatus"}, "text_query": {"type": "string", "description": "Text query for Document Executions list. Search by Execution Id and Document Name"}, "query_filter": {"$ref": "#/definitions/QueryOperator"}}, "type": "object"}, "AwsSsmExecutionGroupBatchResponse": {"properties": {"results": {"type": "object", "description": "Map from identifier to response model", "additionalProperties": {"$ref": "#/definitions/AwsSsmJobGroup"}}}, "type": "object"}, "AwsSsmExecutionGroupFilters": {"properties": {"cloud_account_ids": {"type": "array", "description": "List of ids of the cloud account.", "items": {"type": "string"}}, "regions": {"type": "array", "description": "region of the document to be executed.", "items": {"type": "string"}}, "document_ids": {"type": "array", "description": "Name of the document.", "items": {"type": "string"}}, "document_types": {"type": "array", "description": "Type of the executed document", "items": {"type": "string"}}, "executed_by": {"type": "array", "description": "IAM ARN of the user who executed the document", "items": {"type": "string"}}, "status": {"type": "string", "description": "Status of the Automation Execution", "example": "Pending", "enum": ["Pending", "InProgress", "Waiting", "Success", "TimedOut", "Cancelling", "Cancelled", "Failed", "PendingApproval", "Approved", "Rejected", "Scheduled", "RunbookInProgress", "PendingChangeCalendarOverride", "ChangeCalendarOverrideApproved", "ChangeCalendarOverrideRejected", "CompletedWithSuccess", "CompletedWithFailure"], "x-cs-enum-type": "AwsSsmAutomationExecutionStatus"}, "text_query": {"type": "string", "description": "Text query for Document Executions list. Search by Execution Id and Document Name"}}, "type": "object"}, "AwsSsmExecutionQueryFilters": {"properties": {"status": {"type": "array", "description": "status of the execution (all if missing)", "items": {"type": "string"}}, "document_names": {"type": "array", "description": "The name of the document (all if missing)", "items": {"type": "string"}}, "executed_by": {"type": "array", "description": "IAM ARN of the user who executed the document (all if missing)", "items": {"type": "string"}}}, "type": "object"}, "AwsSsmExecutionStepBatchResponse": {"properties": {"results": {"type": "object", "description": "Map from identifier to response model", "additionalProperties": {"$ref": "#/definitions/AwsSsmStepExecution"}}}, "type": "object"}, "AwsSsmJob": {"properties": {"sysId": {"type": "string", "description": "Id of the Job Execution"}, "group_job_id": {"type": "string", "description": "ID of the group job."}, "parent_job_id": {"type": "string", "description": "ID of the parent job if the execution document is child."}, "cloud_account_id": {"type": "string", "description": "ID of the cloud account for which document is executed."}, "region": {"type": "string", "description": "AWS region where the document is executed."}, "execution_id": {"type": "string", "description": "Automation or command document execution id."}, "execution_start_time": {"type": "string", "format": "date-time", "description": "Start time of document execution."}, "execution_end_time": {"type": "string", "format": "date-time", "description": "End time of document execution."}, "status": {"type": "string", "description": "Status of the Automation Execution", "example": "Pending", "enum": ["Pending", "InProgress", "Waiting", "Success", "TimedOut", "Cancelling", "Cancelled", "Failed", "PendingApproval", "Approved", "Rejected", "Scheduled", "RunbookInProgress", "PendingChangeCalendarOverride", "ChangeCalendarOverrideApproved", "ChangeCalendarOverrideRejected", "CompletedWithSuccess", "CompletedWithFailure"], "x-cs-enum-type": "AwsSsmAutomationExecutionStatus"}, "document_name": {"type": "string", "description": "Name of the document that is executed"}, "execution_parameters": {"description": "Input parameter details of the execution", "$ref": "#/definitions/AwsSsmBaseExecution"}}, "type": "object"}, "AwsSsmJobGroup": {"properties": {"sysId": {"type": "string", "description": "Id of the Group Executions"}, "status": {"type": "string", "description": "Status of the Job Group", "example": "in_progress", "enum": ["in_progress", "completed"], "x-cs-enum-type": "AwsSsmJobGroupStatus"}, "document_id": {"type": "string", "description": "Document id from the ssm_docs collection"}, "document_version": {"type": "string", "description": "Document version id from the ssm_docs_version collection"}, "document_type": {"type": "string", "description": "Type of the document", "example": "Command", "enum": ["Command", "Automation"], "x-cs-enum-type": "AwsSsmJobGroupDocumentType"}, "created_at": {"type": "string", "format": "date-time", "description": "The date when the job was fetched"}, "created_by": {"type": "string", "description": "Name of the user who executed the document"}, "updated_at": {"type": "string", "format": "date-time", "description": "Date when the document was last updated"}, "updated_by": {"type": "string", "description": "Name of the user who updated the execution"}, "change_id": {"type": "string", "description": "Service Now tracking id"}}, "type": "object"}, "AwsSsmListDocumentExecutionGroupsSortCriteria": {"required": ["column"], "properties": {"column": {"type": "string", "example": "created_at", "enum": ["created_at"], "x-cs-enum-type": "AwsSsmListDocumentExecutionGroupsSortColumn"}, "ascending": {"type": "boolean"}}, "type": "object"}, "AwsSsmListDocumentExecutionRequest": {"properties": {"list_context": {"description": "Optional list context", "$ref": "#/definitions/ListContext"}, "sort": {"type": "array", "description": "Sort criteria", "items": {"$ref": "#/definitions/AwsSsmListDocumentExecutionsSortCriteria"}}, "filters": {"description": "Filters for the request", "$ref": "#/definitions/AwsSsmExecutionFilters"}}, "type": "object"}, "AwsSsmListDocumentExecutionsSortCriteria": {"required": ["column"], "properties": {"column": {"type": "string", "example": "created_at", "enum": ["created_at"], "x-cs-enum-type": "AwsSsmListDocumentExecutionsSortColumn"}, "ascending": {"type": "boolean"}}, "type": "object"}, "AwsSsmListDocumentVersion": {"properties": {"sysId": {"type": "string"}, "document_version": {"type": "string", "description": "Version of the Systems Manager Document"}, "document_creation_time": {"type": "string", "format": "date-time"}}, "type": "object"}, "AwsSsmListDocumentsRequest": {"properties": {"list_context": {"description": "Optional list context", "$ref": "#/definitions/ListContext"}, "sort": {"type": "array", "description": "Sort criteria", "items": {"$ref": "#/definitions/AwsSsmListDocumentsSortCriteria"}}, "filters": {"description": "Filters for the request", "$ref": "#/definitions/AwsSsmListDocumentsRequestContext"}}, "type": "object"}, "AwsSsmListDocumentsRequestContext": {"required": ["document_types"], "properties": {"cloud_account_ids": {"type": "array", "description": "id of the cloud accounts.", "items": {"type": "string"}}, "regions": {"type": "array", "description": "region of the document to be executed.", "items": {"type": "string"}}, "document_names": {"type": "array", "description": "Name of the document.", "items": {"type": "string"}}, "owners": {"type": "array", "description": "Owner of the SSM document.", "items": {"type": "string"}}, "platform_types": {"type": "array", "description": "Platform types supported for the document.", "items": {"type": "string"}}, "document_types": {"type": "array", "description": "Type of the document.", "items": {"type": "string"}}, "text_query": {"type": "string", "description": "Text query for SSM Documents List. Search by Document Name, Category and Owner"}, "query_filter": {"$ref": "#/definitions/QueryOperator"}}, "type": "object"}, "AwsSsmListDocumentsSortCriteria": {"required": ["column"], "properties": {"column": {"type": "string", "example": "name", "enum": ["name"], "x-cs-enum-type": "AwsSsmListDocumentsSortColumn"}, "ascending": {"type": "boolean"}}, "type": "object"}, "AwsSsmListExecutionGroupRequest": {"properties": {"list_context": {"description": "Optional list context", "$ref": "#/definitions/ListContext"}, "sort": {"type": "array", "description": "Sort criteria", "items": {"$ref": "#/definitions/AwsSsmListDocumentExecutionGroupsSortCriteria"}}, "filters": {"description": "Filters for the request", "$ref": "#/definitions/AwsSsmExecutionGroupFilters"}}, "type": "object"}, "AwsSsmNotificationConfig": {"properties": {"arn": {"type": "string", "description": "AWS resource ARN of the SNS topic"}, "events": {"type": "array", "items": {"type": "string", "description": "Type of the notification events for automation documents", "example": "All", "enum": ["All", "InProgress", "Success", "TimedOut", "Cancelled", "Failed"], "x-cs-enum-type": "AwsSsmExecuteDocumentNotificationEvents"}}, "notification_type": {"type": "string", "description": "Type of the notification. Receive notifications when the status of command/invocation changes", "example": "Command", "enum": ["Command", "Invocation"], "x-cs-enum-type": "AwsSsmCommandNotificationTypes"}}, "type": "object"}, "AwsSsmParameter": {"properties": {"name": {"type": "string", "description": "The name of the parameter"}, "type": {"type": "string", "description": "Type of the parameter of automation documents", "example": "StringMap", "enum": ["StringMap", "MapList", "Integer", "Boolean", "String", "StringList", "AWS_EC2_Instance_Id", "AWS_IAM_Role_Arn", "AWS_S3_Bucket_Name"], "x-cs-enum-type": "AwsSsmDocumentParameterType"}, "description": {"type": "string", "description": "The description of the parameters"}, "default_value": {"type": "string", "description": "The default values for the parameters"}, "min_items": {"type": "integer", "description": "Minimum number items in parameter"}, "max_items": {"type": "integer", "description": "Maximum number items in parameter"}, "allowed_values": {"type": "array", "description": "List of allowed values", "items": {"type": "string"}}, "display_type": {"type": "string", "description": "Type of display items"}, "allowed_pattern": {"type": "string", "description": "Regex patterns of the parameter"}, "min_chars": {"type": "integer", "description": "Minimum number of characters in the parameters"}, "max_chars": {"type": "integer", "description": "Maximum number of characters in the parameters"}}, "type": "object"}, "AwsSsmResolvedTarget": {"properties": {"parameter_values": {"type": "array", "description": "Parameter values of the target resources.", "items": {"type": "string"}}, "truncated": {"type": "boolean", "description": "Status if the step is truncated."}}, "type": "object"}, "AwsSsmStepExecution": {"properties": {"sysId": {"type": "string", "description": "Id of the Step Execution"}, "job_id": {"type": "string", "description": "Id reference of the execution job id"}, "name": {"type": "string", "description": "Name of the step."}, "action": {"type": "string", "description": "The action this step performs. The action determines the behavior of the step"}, "on_failure": {"type": "string", "description": "The action to take if the step fails. The default value is Abort"}, "max_attempts": {"type": "integer", "description": "The maximum number of tries to run the action of the step. The default value is 1"}, "execution_start_time": {"type": "string", "format": "date-time", "description": "If a step has begun execution, this contains the time the step started."}, "execution_end_time": {"type": "string", "format": "date-time", "description": "If a step has finished execution, this contains the time the execution ended."}, "status": {"type": "string", "description": "Status of the Automation Execution", "example": "Pending", "enum": ["Pending", "InProgress", "Waiting", "Success", "TimedOut", "Cancelling", "Cancelled", "Failed", "PendingApproval", "Approved", "Rejected", "Scheduled", "RunbookInProgress", "PendingChangeCalendarOverride", "ChangeCalendarOverrideApproved", "ChangeCalendarOverrideRejected", "CompletedWithSuccess", "CompletedWithFailure"], "x-cs-enum-type": "AwsSsmAutomationExecutionStatus"}, "inputs": {"type": "object", "additionalProperties": {"type": "string"}}, "output": {"type": "object", "additionalProperties": {"type": "string"}}, "step_execution_id": {"type": "string", "description": "The unique ID of a step execution. Execution id of the step"}, "overridden_parameters": {"type": "object", "additionalProperties": {"type": "string"}}, "valid_next_steps": {"type": "array", "description": "Strategies used when step fails, we support Continue and Abort. Abort will fail the automation when the step fails. Continue will ignore the failure of current step and allow automation to run the next step.", "items": {"type": "string"}}, "failure_message": {"type": "string", "description": "Failure message of the step of the job."}, "failure_details": {"description": "Information about the Automation failure", "$ref": "#/definitions/AwsSsmStepFailureDetail"}}, "type": "object"}, "AwsSsmStepFailureDetail": {"properties": {"stage": {"type": "string", "description": "Stage of the execution when the failure occurred"}, "type": {"type": "string", "description": "type of the failure"}, "details": {"type": "object", "additionalProperties": {"type": "string"}}}, "type": "object"}, "AwsSsmTarget": {"properties": {"key": {"type": "string", "description": "Type of the target resource for execution of command document"}, "values": {"type": "array", "description": "Target resource details", "items": {"type": "string"}}}, "type": "object"}, "AzureDevOpsBuild": {"properties": {"build_id": {"type": "integer"}, "name": {"type": "string", "description": "Name of the Build"}, "status": {"type": "string", "description": "Build Status", "example": "all", "enum": ["all", "cancelling", "completed", "inProgress", "notStarted", "postponed"], "x-cs-enum-type": "AzureDevOpsPipelineBuildStatus"}, "result": {"type": "string", "description": "Build Result", "example": "canceled", "enum": ["canceled", "failed", "succeeded", "none", "partiallySucceeded"], "x-cs-enum-type": "AzureDevOpsPipelineBuildResult"}, "started": {"type": "string", "format": "date-time"}, "finished": {"type": "string", "format": "date-time"}, "branch": {"type": "string", "description": "Branch of the repo under Build"}, "version": {"type": "string", "description": "Version of the repo under Build"}}, "type": "object"}, "AzureDevOpsBuildLog": {"properties": {"log_id": {"type": "integer", "description": "Build Log Id"}, "created_on": {"type": "string", "format": "date-time", "description": "Build Log created datetime"}, "last_changed_on": {"type": "string", "format": "date-time", "description": "Build Log latest update datetime"}, "log_lines": {"type": "array", "description": "List of raw log lines", "items": {"type": "string"}}}, "type": "object"}, "AzureDevOpsBuildWorkItem": {"properties": {"url": {"type": "string"}, "workitem_id": {"type": "integer", "description": "Azure DevOps WorkItem ID"}, "type": {"type": "string", "description": "Azure DevOps WorkItem Type"}, "icon": {"type": "string", "description": "Azure DevOps WorkItem Type Icon URL"}}, "type": "object"}, "AzureDevOpsBuildWorkItemsRequest": {"required": ["build_id", "project_id", "service_account_id"], "properties": {"service_account_id": {"type": "string", "description": "Service Account ID"}, "project_id": {"type": "string", "description": "Azure Devops Project ID"}, "build_id": {"type": "integer", "description": "Azure Devops Build ID"}}, "type": "object"}, "AzureDevOpsBuildWorkItemsResponse": {"properties": {"workitems": {"type": "array", "description": "List of workitems associated with build", "items": {"$ref": "#/definitions/AzureDevOpsBuildWorkItem"}}}, "type": "object"}, "AzureDevOpsListBuildLogsRequests": {"required": ["build_id", "project_id", "service_account_id"], "properties": {"service_account_id": {"type": "string", "description": "Service Account ID"}, "project_id": {"type": "string", "description": "Azure Devops Project ID"}, "build_id": {"type": "integer", "description": "Azure Devops Build ID"}}, "type": "object"}, "AzureDevOpsListBuildLogsResponse": {"properties": {"logs": {"type": "array", "description": "List of AzureDevOpsBuildLog", "items": {"$ref": "#/definitions/AzureDevOpsBuildLog"}}}, "type": "object"}, "AzureDevOpsListBuildRequests": {"required": ["pipeline_id", "project_id", "service_account_id"], "properties": {"service_account_id": {"type": "string", "description": "Service Account ID"}, "project_id": {"type": "string", "description": "Azure Devops Project ID"}, "pipeline_id": {"type": "integer", "description": "Azure Devops Pipeline ID"}, "status": {"type": "string", "description": "Filter the list of builds response based on the status", "example": "all", "enum": ["all", "cancelling", "completed", "inProgress", "notStarted", "postponed"], "x-cs-enum-type": "AzureDevOpsPipelineBuildStatus"}, "query_order": {"type": "string", "description": "Criteria to sort the builds in the response", "example": "finishTimeAscending", "enum": ["finishTimeAscending", "finishTimeDescending", "queueTimeAscending", "queueTimeDescending", "startTimeAscending", "startTimeDescending"], "x-cs-enum-type": "AzureDevOpsBuildQueryOrder"}, "search": {"type": "string", "description": "filter the build response with the provided search keyword"}}, "type": "object"}, "AzureDevOpsListBuildResponse": {"properties": {"builds": {"type": "array", "description": "List of project name", "items": {"$ref": "#/definitions/AzureDevOpsBuild"}}}, "type": "object"}, "AzureDevOpsListPipelinesRequest": {"required": ["project_id", "service_account_id"], "properties": {"service_account_id": {"type": "string", "description": "Service Account ID"}, "project_id": {"type": "string", "description": "Azure Devops Project ID"}}, "type": "object"}, "AzureDevOpsListPipelinesResponse": {"properties": {"pipelines": {"type": "array", "description": "List of project name", "items": {"$ref": "#/definitions/AzureDevOpsPipeline"}}}, "type": "object"}, "AzureDevOpsPipeline": {"properties": {"pipeline_id": {"type": "integer", "description": "Azure DevOps Pipeline ID"}, "pipeline_name": {"type": "string", "description": "Azure DevOps Pipeline Name"}}, "type": "object"}, "AzureDevOpsPipelineListProjectsRequest": {"required": ["service_account_id"], "properties": {"service_account_id": {"type": "string", "description": "Service Account ID"}}, "type": "object"}, "AzureDevOpsPipelineListProjectsResponse": {"properties": {"projects": {"type": "array", "description": "List of project name", "items": {"$ref": "#/definitions/AzureDevOpsProject"}}}, "type": "object"}, "AzureDevOpsProject": {"properties": {"project_name": {"type": "string", "description": "Azure DevOps Project Name"}, "project_id": {"type": "string", "description": "Azure DevOps Project ID"}}, "type": "object"}, "BackgroundJob": {"properties": {"id": {"$ref": "#/definitions/RecordIdentity"}, "created_at": {"type": "string", "format": "date-time", "description": "When the Background Job was created"}, "updated_at": {"type": "string", "format": "date-time", "description": "When the Background Job was last updated"}, "cancel_requested": {"type": "boolean", "description": "If True, the Background Job should stop processing as soon as possible"}, "status": {"type": "string", "description": "Status of Background Job", "example": "Ready", "enum": ["Ready", "Pending", "Waiting", "Failed", "Completed", "Cancelled"], "x-cs-enum-type": "BackgroundJobStatus"}, "priority": {"type": "integer", "description": "Priority of the Background Job"}, "next_activation": {"type": "string", "format": "date-time", "description": "When the Background Job will execute"}, "worker_id": {"type": "string", "description": "Identifier of the worker processing this job"}, "execution_start": {"type": "string", "format": "date-time", "description": "When the Background Job started executing"}, "execution_end": {"type": "string", "format": "date-time", "description": "When the Background Job completed execution"}, "auto_retries": {"type": "integer", "description": "Number of auto retries left for this Background Job"}, "auto_retry_delay": {"type": "number", "description": "Number of seconds to wait before a retry for this Background Job"}, "failure": {"type": "object", "description": "Details in case the execution of the job failed"}, "waiting_set": {"type": "array", "description": "Background Jobs this job is waiting for", "items": {"$ref": "#/definitions/RecordIdentity"}}, "waited_set": {"type": "array", "description": "Background Jobs this job waited on", "items": {"$ref": "#/definitions/RecordIdentity"}}, "waited_set_failed": {"type": "array", "description": "Failed Background Jobs this job waited on", "items": {"$ref": "#/definitions/RecordIdentity"}}, "payload": {"description": "Data associated with the Background Job", "$ref": "#/definitions/BackgroundJobPayloadBase"}}, "type": "object"}, "BackgroundJobBatchRequest": {"allOf": [{"$ref": "#/definitions/RecordIdentityBatchRequest"}, {"properties": {"include_details": {"type": "boolean", "description": "Include payload details if true"}, "include_only_status": {"type": "boolean", "description": "Include just the status field if true"}}, "type": "object"}]}, "BackgroundJobBatchResponse": {"properties": {"results": {"type": "object", "description": "Map from identifier to response model", "additionalProperties": {"$ref": "#/definitions/BackgroundJob"}}}, "type": "object"}, "BackgroundJobFilter": {"properties": {"executor": {"type": "string", "description": "Limit results to jobs from this executor", "example": "AI", "enum": ["AI", "BROKER", "COMPLIANCE", "COST", "GOVERNANCE", "HEATSTACK", "IDENTITY", "OPERATIONS", "REPORT_GENERATION", "RESOURCE_INVENTORY", "SECURITY"], "x-cs-enum-type": "BackgroundJobExecutor"}, "payload_type": {"type": "string", "description": "Limit results to jobs with the same payload type"}, "payload_identifier": {"type": "string", "description": "Limit results to jobs with the same payload identifier"}, "status": {"type": "array", "description": "Sets of Status values to filter on", "items": {"type": "string", "description": "Status of Background Job", "example": "Ready", "enum": ["Ready", "Pending", "Waiting", "Failed", "Completed", "Cancelled"], "x-cs-enum-type": "BackgroundJobStatus"}}}, "type": "object"}, "BackgroundJobHandlerConfiguration": {"properties": {"max_parallel_jobs": {"type": "integer", "description": "Maximum number of concurrent jobs to process"}, "max_processes": {"type": "integer", "description": "Maximum number of workers to run jobs"}, "default_max_parallel_jobs": {"type": "integer", "description": "Default value for number of concurrent jobs to process"}, "default_max_processes": {"type": "integer", "description": "Default value for number of workers to run jobs"}, "override_expiration": {"type": "string", "format": "date-time", "description": "Override defaults until expiration"}}, "type": "object"}, "BackgroundJobHandlerConfigurationRequest": {"properties": {"executor": {"type": "string", "description": "Target executor", "example": "AI", "enum": ["AI", "BROKER", "COMPLIANCE", "COST", "GOVERNANCE", "HEATSTACK", "IDENTITY", "OPERATIONS", "REPORT_GENERATION", "RESOURCE_INVENTORY", "SECURITY"], "x-cs-enum-type": "BackgroundJobExecutor"}, "payload_type": {"type": "string", "description": "Target payload type"}}, "type": "object"}, "BackgroundJobHandlerConfigurationUpdateRequest": {"allOf": [{"$ref": "#/definitions/BackgroundJobHandlerConfigurationRequest"}, {"properties": {"config": {"description": "New configuration", "$ref": "#/definitions/BackgroundJobHandlerConfiguration"}}, "type": "object"}]}, "BackgroundJobHandlerListResponse": {"properties": {"payload_types": {"type": "array", "description": "Active Background Job Handlers", "items": {"type": "string"}}}, "type": "object"}, "BackgroundJobHeapAnalysis": {"properties": {"started_at": {"type": "string", "format": "date-time", "description": "When the Background Job was created"}, "completed_at": {"type": "string", "format": "date-time", "description": "When the Background Job was created"}, "processes": {"type": "array", "description": "Process data", "items": {"$ref": "#/definitions/BackgroundJobHeapAnalysisProcess"}}}, "type": "object"}, "BackgroundJobHeapAnalysisModule": {"properties": {"name": {"type": "string", "description": "Module name"}, "size": {"type": "integer", "description": "Bytes used in module"}, "count": {"type": "integer", "description": "Object counted in module"}}, "type": "object"}, "BackgroundJobHeapAnalysisProcess": {"properties": {"name": {"type": "string", "description": "Process name"}, "modules": {"type": "array", "description": "Module data", "items": {"$ref": "#/definitions/BackgroundJobHeapAnalysisModule"}}}, "type": "object"}, "BackgroundJobInvalidation": {"properties": {"executors": {"type": "array", "description": "Sources of the event", "items": {"type": "string", "description": "Executor of the Background Job", "example": "AI", "enum": ["AI", "BROKER", "COMPLIANCE", "COST", "GOVERNANCE", "HEATSTACK", "IDENTITY", "OPERATIONS", "REPORT_GENERATION", "RESOURCE_INVENTORY", "SECURITY"], "x-cs-enum-type": "BackgroundJobExecutor"}}, "jobs": {"type": "array", "description": "Job context", "items": {"$ref": "#/definitions/RecordIdentity"}}, "domains": {"type": "array", "description": "Domain context", "items": {"type": "string"}}}, "type": "object"}, "BackgroundJobListRequest": {"properties": {"list_context": {"description": "Optional list context", "$ref": "#/definitions/ListContext"}, "sort": {"type": "array", "description": "Sort criteria", "items": {"$ref": "#/definitions/BackgroundJobSortCriteria"}}, "filters": {"description": "Filters for the request", "$ref": "#/definitions/BackgroundJobFilter"}}, "type": "object"}, "BackgroundJobLog": {"properties": {"timestamp": {"type": "string", "format": "date-time", "description": "When the log entry was created"}, "logger": {"type": "string", "description": "Name of the logger"}, "logger_level": {"type": "string", "description": "Level of the log entry"}, "code_context": {"type": "string", "description": "Where the log entry was generated"}, "message": {"type": "string", "description": "Content of the log"}}, "type": "object"}, "BackgroundJobLogRequest": {"properties": {"id": {"description": "The background job to extract the log for", "$ref": "#/definitions/RecordIdentity"}, "start_date": {"type": "string", "format": "date-time", "description": "Only return log entries after this date"}, "limit": {"type": "integer", "description": "Maximum number of log entries to return"}}, "type": "object"}, "BackgroundJobLogger": {"properties": {"executor": {"type": "string", "description": "Executor owning the logger", "example": "AI", "enum": ["AI", "BROKER", "COMPLIANCE", "COST", "GOVERNANCE", "HEATSTACK", "IDENTITY", "OPERATIONS", "REPORT_GENERATION", "RESOURCE_INVENTORY", "SECURITY"], "x-cs-enum-type": "BackgroundJobExecutor"}, "name": {"type": "string", "description": "Name of the logger"}, "level": {"type": "string", "description": "Level of a Background Job Logger", "example": "CRITICAL", "enum": ["CRITICAL", "ERROR", "WARNING", "INFO", "DEBUG", "NOTSET"], "x-cs-enum-type": "BackgroundJobLoggerLevel"}, "effective_level": {"type": "string", "description": "Level of a Background Job Logger", "example": "CRITICAL", "enum": ["CRITICAL", "ERROR", "WARNING", "INFO", "DEBUG", "NOTSET"], "x-cs-enum-type": "BackgroundJobLoggerLevel"}}, "type": "object"}, "BackgroundJobLoggerRequest": {"properties": {"executor": {"type": "string", "description": "Filter to loggers in this executor", "example": "AI", "enum": ["AI", "BROKER", "COMPLIANCE", "COST", "GOVERNANCE", "HEATSTACK", "IDENTITY", "OPERATIONS", "REPORT_GENERATION", "RESOURCE_INVENTORY", "SECURITY"], "x-cs-enum-type": "BackgroundJobExecutor"}}, "type": "object"}, "BackgroundJobPayloadBase": {"required": ["__type"], "properties": {"identifier": {"type": "string", "description": "Optional sub-key for payload."}}, "discriminator": "__type", "type": "object", "x-cs-subtypes": [{"subtype_model": "BackgroundJobPayloadForGenericTask", "subtype_name": "BackgroundJobPayloadForGenericTask"}, {"subtype_model": "BackgroundJobPayloadForReactiveTask", "subtype_name": "BackgroundJobPayloadForReactiveTask"}, {"subtype_model": "BackgroundJobPayloadForAssessmentFramework", "subtype_name": "BackgroundJobPayloadForAssessmentFramework"}, {"subtype_model": "BackgroundJobPayloadForAssessmentFrameworkRun", "subtype_name": "BackgroundJobPayloadForAssessmentFrameworkRun"}, {"subtype_model": "BackgroundJobPayloadForPeriodicBudgetAlert", "subtype_name": "BackgroundJobPayloadForPeriodicBudgetAlert"}, {"subtype_model": "BackgroundJobPayloadForBudgetAlertNotification", "subtype_name": "BackgroundJobPayloadForBudgetAlertNotification"}, {"subtype_model": "BackgroundJobPayloadForBudgetAlertTrigger", "subtype_name": "BackgroundJobPayloadForBudgetAlertTrigger"}, {"subtype_model": "BackgroundJobPayloadForPeriodicCloudUsageBilling", "subtype_name": "BackgroundJobPayloadForPeriodicCloudUsageBilling"}, {"subtype_model": "BackgroundJobPayloadForPeriodicScheduleRecommendation", "subtype_name": "BackgroundJobPayloadForPeriodicScheduleRecommendation"}, {"subtype_model": "BackgroundJobPayloadForCloudUsageBilling", "subtype_name": "BackgroundJobPayloadForCloudUsageBilling"}, {"subtype_model": "BackgroundJobPayloadForUpdateUnitRate", "subtype_name": "BackgroundJobPayloadForUpdateUnitRate"}, {"subtype_model": "BackgroundJobPayloadForPeriodicProviderRecommendations", "subtype_name": "BackgroundJobPayloadForPeriodicProviderRecommendations"}, {"subtype_model": "BackgroundJobPayloadForProviderRecommendations", "subtype_name": "BackgroundJobPayloadForProviderRecommendations"}, {"subtype_model": "BackgroundJobPayloadForReportGeneration", "subtype_name": "BackgroundJobPayloadForReportGeneration"}, {"subtype_model": "BackgroundJobPayloadForPeriodicReservedInstance", "subtype_name": "BackgroundJobPayloadForPeriodicReservedInstance"}, {"subtype_model": "BackgroundJobPayloadForReservedInstance", "subtype_name": "BackgroundJobPayloadForReservedInstance"}, {"subtype_model": "BackgroundJobPayloadForSyncBudgets", "subtype_name": "BackgroundJobPayloadForSyncBudgets"}, {"subtype_model": "BackgroundJobPayloadForPeriodicAccessGovernanceDataProcessing", "subtype_name": "BackgroundJobPayloadForPeriodicAccessGovernanceDataProcessing"}, {"subtype_model": "BackgroundJobPayloadForPeriodicAccessValidation", "subtype_name": "BackgroundJobPayloadForPeriodicAccessValidation"}, {"subtype_model": "BackgroundJobPayloadForPeriodicOnboardAndUpdateGCPAndAWSHierarchy", "subtype_name": "BackgroundJobPayloadForPeriodicOnboardAndUpdateGCPAndAWSHierarchy"}, {"subtype_model": "BackgroundJobPayloadForPeriodicSyncAccountSubscriptionAndMetadata", "subtype_name": "BackgroundJobPayloadForPeriodicSyncAccountSubscriptionAndMetadata"}, {"subtype_model": "BackgroundJobPayloadForPeriodicSyncGCPMasterBillingAccountMetadata", "subtype_name": "BackgroundJobPayloadForPeriodicSyncGCPMasterBillingAccountMetadata"}, {"subtype_model": "BackgroundJobPayloadForPeriodicSyncServiceAccountDetails", "subtype_name": "BackgroundJobPayloadForPeriodicSyncServiceAccountDetails"}, {"subtype_model": "BackgroundJobPayloadForPeriodicUpdateCSPAuthDetails", "subtype_name": "BackgroundJobPayloadForPeriodicUpdateCSPAuthDetails"}, {"subtype_model": "BackgroundJobPayloadForPeriodicUpdatePriorityAccountsSSMParameters", "subtype_name": "BackgroundJobPayloadForPeriodicUpdatePriorityAccountsSSMParameters"}, {"subtype_model": "BackgroundJobPayloadForPeriodicUpdateSkippedAlertAndJobIdStatus", "subtype_name": "BackgroundJobPayloadForPeriodicUpdateSkippedAlertAndJobIdStatus"}, {"subtype_model": "BackgroundJobPayloadForPeriodicValidateCredentialsAndUpdateUnitPriceViolations", "subtype_name": "BackgroundJobPayloadForPeriodicValidateCredentialsAndUpdateUnitPriceViolations"}, {"subtype_model": "BackgroundJobPayloadForScheduledTask", "subtype_name": "BackgroundJobPayloadForScheduledTask"}, {"subtype_model": "BackgroundJobPayloadForBlueprintExecution", "subtype_name": "BackgroundJobPayloadForBlueprintExecution"}, {"subtype_model": "BackgroundJobPayloadForScriptExecution", "subtype_name": "BackgroundJobPayloadForScriptExecution"}, {"subtype_model": "BackgroundJobPayloadForTemplateExecution", "subtype_name": "BackgroundJobPayloadForTemplateExecution"}, {"subtype_model": "BackgroundJobPayloadForPeriodicAwsSecurityHubFindingsSync", "subtype_name": "BackgroundJobPayloadForPeriodicAwsSecurityHubFindingsSync"}, {"subtype_model": "BackgroundJobPayloadForAwsSecurityHubFindingsSync", "subtype_name": "BackgroundJobPayloadForAwsSecurityHubFindingsSync"}, {"subtype_model": "BackgroundJobPayloadForPeriodicAwsSsmAutomationExecutionProgress", "subtype_name": "BackgroundJobPayloadForPeriodicAwsSsmAutomationExecutionProgress"}, {"subtype_model": "BackgroundJobPayloadForPeriodicAwsSsmCommandExecutionProgress", "subtype_name": "BackgroundJobPayloadForPeriodicAwsSsmCommandExecutionProgress"}, {"subtype_model": "BackgroundJobPayloadForPeriodicAwsSsmDocuments", "subtype_name": "BackgroundJobPayloadForPeriodicAwsSsmDocuments"}, {"subtype_model": "BackgroundJobPayloadForAwsSsmAutomationExecutionJobs", "subtype_name": "BackgroundJobPayloadForAwsSsmAutomationExecutionJobs"}, {"subtype_model": "BackgroundJobPayloadForAwsSsmCommandExecution", "subtype_name": "BackgroundJobPayloadForAwsSsmCommandExecution"}, {"subtype_model": "BackgroundJobPayloadForAwsSsmCommandExecutionJobs", "subtype_name": "BackgroundJobPayloadForAwsSsmCommandExecutionJobs"}, {"subtype_model": "BackgroundJobPayloadForAwsSsmDocuments", "subtype_name": "BackgroundJobPayloadForAwsSsmDocuments"}, {"subtype_model": "BackgroundJobPayloadForPeriodicAzureSentinelUpdate", "subtype_name": "BackgroundJobPayloadForPeriodicAzureSentinelUpdate"}, {"subtype_model": "BackgroundJobPayloadForPeriodicCloudOpsInsight", "subtype_name": "BackgroundJobPayloadForPeriodicCloudOpsInsight"}, {"subtype_model": "BackgroundJobPayloadForPeriodicCredentialExpirationCheck", "subtype_name": "BackgroundJobPayloadForPeriodicCredentialExpirationCheck"}, {"subtype_model": "BackgroundJobPayloadForPeriodicGovernanceInstanceStatus", "subtype_name": "BackgroundJobPayloadForPeriodicGovernanceInstanceStatus"}, {"subtype_model": "BackgroundJobPayloadForPeriodicGovernanceNotification", "subtype_name": "BackgroundJobPayloadForPeriodicGovernanceNotification"}, {"subtype_model": "BackgroundJobPayloadForPeriodicParseNetworkDetails", "subtype_name": "BackgroundJobPayloadForPeriodicParseNetworkDetails"}, {"subtype_model": "BackgroundJobPayloadForPeriodicRefreshUtilizationSummary", "subtype_name": "BackgroundJobPayloadForPeriodicRefreshUtilizationSummary"}, {"subtype_model": "BackgroundJobPayloadForPeriodicServiceAccountDelete", "subtype_name": "BackgroundJobPayloadForPeriodicServiceAccountDelete"}, {"subtype_model": "BackgroundJobPayloadForPeriodicSyncCSPTenant", "subtype_name": "BackgroundJobPayloadForPeriodicSyncCSPTenant"}, {"subtype_model": "BackgroundJobPayloadForPeriodicZabbixGovernance", "subtype_name": "BackgroundJobPayloadForPeriodicZabbixGovernance"}, {"subtype_model": "BackgroundJobPayloadForActivityExecutor", "subtype_name": "BackgroundJobPayloadForActivityExecutor"}, {"subtype_model": "BackgroundJobPayloadForIntegratedToolsAlert", "subtype_name": "BackgroundJobPayloadForIntegratedToolsAlert"}, {"subtype_model": "BackgroundJobPayloadForRefreshRecommendation", "subtype_name": "BackgroundJobPayloadForRefreshRecommendation"}, {"subtype_model": "BackgroundJobPayloadForResourceDiscoveryExecution", "subtype_name": "BackgroundJobPayloadForResourceDiscoveryExecution"}, {"subtype_model": "BackgroundJobPayloadForServiceAccountDelete", "subtype_name": "BackgroundJobPayloadForServiceAccountDelete"}, {"subtype_model": "BackgroundJobPayloadForPeriodicComplianceRefresh", "subtype_name": "BackgroundJobPayloadForPeriodicComplianceRefresh"}, {"subtype_model": "BackgroundJobPayloadForComplianceControl", "subtype_name": "BackgroundJobPayloadForComplianceControl"}, {"subtype_model": "BackgroundJobPayloadForComplianceStandard", "subtype_name": "BackgroundJobPayloadForComplianceStandard"}, {"subtype_model": "BackgroundJobPayloadForPolicyJobStatusUpdate", "subtype_name": "BackgroundJobPayloadForPolicyJobStatusUpdate"}, {"subtype_model": "BackgroundJobPayloadForPeriodicAzureSecurityGraph", "subtype_name": "BackgroundJobPayloadForPeriodicAzureSecurityGraph"}, {"subtype_model": "BackgroundJobPayloadForPeriodicSecurityDataProcessing", "subtype_name": "BackgroundJobPayloadForPeriodicSecurityDataProcessing"}, {"subtype_model": "BackgroundJobPayloadForVulnerabilityAndThreats", "subtype_name": "BackgroundJobPayloadForVulnerabilityAndThreats"}, {"subtype_model": "BackgroundJobPayloadForPeriodicPolicyRefresh", "subtype_name": "BackgroundJobPayloadForPeriodicPolicyRefresh"}, {"subtype_model": "BackgroundJobPayloadForPolicyExecution", "subtype_name": "BackgroundJobPayloadForPolicyExecution"}, {"subtype_model": "BackgroundJobPayloadForPolicyRefresh", "subtype_name": "BackgroundJobPayloadForPolicyRefresh"}, {"subtype_model": "BackgroundJobPayloadForPeriodicMarketPlacePoller", "subtype_name": "BackgroundJobPayloadForPeriodicMarketPlacePoller"}, {"subtype_model": "BackgroundJobPayloadForPeriodicAccessAssessment", "subtype_name": "BackgroundJobPayloadForPeriodicAccessAssessment"}, {"subtype_model": "BackgroundJobPayloadForPeriodicAlertConfiguration", "subtype_name": "BackgroundJobPayloadForPeriodicAlertConfiguration"}, {"subtype_model": "BackgroundJobPayloadForPeriodicAnomalyActivityGrouping", "subtype_name": "BackgroundJobPayloadForPeriodicAnomalyActivityGrouping"}, {"subtype_model": "BackgroundJobPayloadForPeriodicApplicationPerformanceMonitoring", "subtype_name": "BackgroundJobPayloadForPeriodicApplicationPerformanceMonitoring"}, {"subtype_model": "BackgroundJobPayloadForPeriodicCreateActivityMasterTemplate", "subtype_name": "BackgroundJobPayloadForPeriodicCreateActivityMasterTemplate"}, {"subtype_model": "BackgroundJobPayloadForPeriodicCreateAlertForNewResources", "subtype_name": "BackgroundJobPayloadForPeriodicCreateAlertForNewResources"}, {"subtype_model": "BackgroundJobPayloadForPeriodicCreateMetricMasterTemplate", "subtype_name": "BackgroundJobPayloadForPeriodicCreateMetricMasterTemplate"}, {"subtype_model": "BackgroundJobPayloadForPeriodicGovernanceValidation", "subtype_name": "BackgroundJobPayloadForPeriodicGovernanceValidation"}, {"subtype_model": "BackgroundJobPayloadForPeriodicLogAnalyticsWorkspace", "subtype_name": "BackgroundJobPayloadForPeriodicLogAnalyticsWorkspace"}, {"subtype_model": "BackgroundJobPayloadForPeriodicLogAnalyticsWorkspaceSync", "subtype_name": "BackgroundJobPayloadForPeriodicLogAnalyticsWorkspaceSync"}, {"subtype_model": "BackgroundJobPayloadForPeriodicMetricsToAnomalyDetection", "subtype_name": "BackgroundJobPayloadForPeriodicMetricsToAnomalyDetection"}, {"subtype_model": "BackgroundJobPayloadForPeriodicMetricValueStorage", "subtype_name": "BackgroundJobPayloadForPeriodicMetricValueStorage"}, {"subtype_model": "BackgroundJobPayloadForPeriodicOperationAssessment", "subtype_name": "BackgroundJobPayloadForPeriodicOperationAssessment"}, {"subtype_model": "BackgroundJobPayloadForPeriodicProcessAlertTemplateStatusUpdate", "subtype_name": "BackgroundJobPayloadForPeriodicProcessAlertTemplateStatusUpdate"}, {"subtype_model": "BackgroundJobPayloadForPeriodicProcessOrphanedConfigurationRecords", "subtype_name": "BackgroundJobPayloadForPeriodicProcessOrphanedConfigurationRecords"}, {"subtype_model": "BackgroundJobPayloadForAccessAssessment", "subtype_name": "BackgroundJobPayloadForAccessAssessment"}, {"subtype_model": "BackgroundJobPayloadForMetricValueStorage", "subtype_name": "BackgroundJobPayloadForMetricValueStorage"}, {"subtype_model": "BackgroundJobPayloadForResourceAlertConfiguration", "subtype_name": "BackgroundJobPayloadForResourceAlertConfiguration"}, {"subtype_model": "BackgroundJobPayloadForOrphanedCloudMonitoringAlert", "subtype_name": "BackgroundJobPayloadForOrphanedCloudMonitoringAlert"}, {"subtype_model": "BackgroundJobPayloadForPeriodicPatchManager", "subtype_name": "BackgroundJobPayloadForPeriodicPatchManager"}, {"subtype_model": "BackgroundJobPayloadForPatchManager", "subtype_name": "BackgroundJobPayloadForPatchManager"}, {"subtype_model": "BackgroundJobPayloadForPeriodicBackupConfiguration", "subtype_name": "BackgroundJobPayloadForPeriodicBackupConfiguration"}, {"subtype_model": "BackgroundJobPayloadForPeriodicDailyCostReport", "subtype_name": "BackgroundJobPayloadForPeriodicDailyCostReport"}, {"subtype_model": "BackgroundJobPayloadForPeriodicDailyGovernanceReport", "subtype_name": "BackgroundJobPayloadForPeriodicDailyGovernanceReport"}, {"subtype_model": "BackgroundJobPayloadForPeriodicDailyInventoryReport", "subtype_name": "BackgroundJobPayloadForPeriodicDailyInventoryReport"}, {"subtype_model": "BackgroundJobPayloadForPeriodicMonthlyCostReport", "subtype_name": "BackgroundJobPayloadForPeriodicMonthlyCostReport"}, {"subtype_model": "BackgroundJobPayloadForPeriodicRecoveryConfiguration", "subtype_name": "BackgroundJobPayloadForPeriodicRecoveryConfiguration"}, {"subtype_model": "BackgroundJobPayloadForPeriodicSecureScoresConfiguration", "subtype_name": "BackgroundJobPayloadForPeriodicSecureScoresConfiguration"}, {"subtype_model": "BackgroundJobPayloadForBackupConfiguration", "subtype_name": "BackgroundJobPayloadForBackupConfiguration"}, {"subtype_model": "BackgroundJobPayloadForDailyCostReport", "subtype_name": "BackgroundJobPayloadForDailyCostReport"}, {"subtype_model": "BackgroundJobPayloadForDailyGovernanceReport", "subtype_name": "BackgroundJobPayloadForDailyGovernanceReport"}, {"subtype_model": "BackgroundJobPayloadForDailyInventoryReport", "subtype_name": "BackgroundJobPayloadForDailyInventoryReport"}, {"subtype_model": "BackgroundJobPayloadForMonthlyCostReport", "subtype_name": "BackgroundJobPayloadForMonthlyCostReport"}, {"subtype_model": "BackgroundJobPayloadForRecoveryConfiguration", "subtype_name": "BackgroundJobPayloadForRecoveryConfiguration"}, {"subtype_model": "BackgroundJobPayloadForSecureScoresConfiguration", "subtype_name": "BackgroundJobPayloadForSecureScoresConfiguration"}, {"subtype_model": "BackgroundJobPayloadForPeriodicInventoryUnitRate", "subtype_name": "BackgroundJobPayloadForPeriodicInventoryUnitRate"}, {"subtype_model": "BackgroundJobPayloadForPeriodicResourcesDuplicationRemoval", "subtype_name": "BackgroundJobPayloadForPeriodicResourcesDuplicationRemoval"}, {"subtype_model": "BackgroundJobPayloadForPeriodicServiceResourceBillingCategory", "subtype_name": "BackgroundJobPayloadForPeriodicServiceResourceBillingCategory"}, {"subtype_model": "BackgroundJobPayloadForPeriodicSynchronizeNirmata", "subtype_name": "BackgroundJobPayloadForPeriodicSynchronizeNirmata"}, {"subtype_model": "BackgroundJobPayloadForPeriodicUnitPriceRate", "subtype_name": "BackgroundJobPayloadForPeriodicUnitPriceRate"}, {"subtype_model": "BackgroundJobPayloadForExtendedResourceDiscovery", "subtype_name": "BackgroundJobPayloadForExtendedResourceDiscovery"}, {"subtype_model": "BackgroundJobPayloadForInventoryUnitRate", "subtype_name": "BackgroundJobPayloadForInventoryUnitRate"}, {"subtype_model": "BackgroundJobPayloadForResourceActivityLogSync", "subtype_name": "BackgroundJobPayloadForResourceActivityLogSync"}, {"subtype_model": "BackgroundJobPayloadForResourceDependencyRelationship", "subtype_name": "BackgroundJobPayloadForResourceDependencyRelationship"}, {"subtype_model": "BackgroundJobPayloadForResourceTagRemediation", "subtype_name": "BackgroundJobPayloadForResourceTagRemediation"}, {"subtype_model": "BackgroundJobPayloadForResourceTagSync", "subtype_name": "BackgroundJobPayloadForResourceTagSync"}, {"subtype_model": "BackgroundJobPayloadForUnitRateCrawler", "subtype_name": "BackgroundJobPayloadForUnitRateCrawler"}, {"subtype_model": "BackgroundJobPayloadForPeriodicTransactionDiscovery", "subtype_name": "BackgroundJobPayloadForPeriodicTransactionDiscovery"}, {"subtype_model": "BackgroundJobPayloadForPeriodicCloudWatchMetrics", "subtype_name": "BackgroundJobPayloadForPeriodicCloudWatchMetrics"}, {"subtype_model": "BackgroundJobPayloadForPeriodicCloudWatchMetricsConfiguration", "subtype_name": "BackgroundJobPayloadForPeriodicCloudWatchMetricsConfiguration"}, {"subtype_model": "BackgroundJobPayloadForResourceLockSync", "subtype_name": "BackgroundJobPayloadForResourceLockSync"}, {"subtype_model": "BackgroundJobPayloadForPeriodicAssessmentDataCollection", "subtype_name": "BackgroundJobPayloadForPeriodicAssessmentDataCollection"}, {"subtype_model": "BackgroundJobPayloadForPeriodicAssessmentGovernanceCost", "subtype_name": "BackgroundJobPayloadForPeriodicAssessmentGovernanceCost"}, {"subtype_model": "BackgroundJobPayloadForPeriodicResourceDashboard", "subtype_name": "BackgroundJobPayloadForPeriodicResourceDashboard"}, {"subtype_model": "BackgroundJobPayloadForPeriodicResourceDiscovery", "subtype_name": "BackgroundJobPayloadForPeriodicResourceDiscovery"}, {"subtype_model": "BackgroundJobPayloadForAssessmentDataCollection", "subtype_name": "BackgroundJobPayloadForAssessmentDataCollection"}, {"subtype_model": "BackgroundJobPayloadForResourceDiscovery", "subtype_name": "BackgroundJobPayloadForResourceDiscovery"}, {"subtype_model": "BackgroundJobPayloadForPeriodicCustomWorkflowManager", "subtype_name": "BackgroundJobPayloadForPeriodicCustomWorkflowManager"}, {"subtype_model": "BackgroundJobPayloadForPeriodicServiceNowChangeStatusTracker", "subtype_name": "BackgroundJobPayloadForPeriodicServiceNowChangeStatusTracker"}, {"subtype_model": "BackgroundJobPayloadForServiceNowCmdbSync", "subtype_name": "BackgroundJobPayloadForServiceNowCmdbSync"}, {"subtype_model": "BackgroundJobPayloadForTagPosture", "subtype_name": "BackgroundJobPayloadForTagPosture"}, {"subtype_model": "BackgroundJobPayloadForAssessmentRun", "subtype_name": "BackgroundJobPayloadForAssessmentRun"}, {"subtype_model": "BackgroundJobPayloadForAssessmentRunScan", "subtype_name": "BackgroundJobPayloadForAssessmentRunScan"}, {"subtype_model": "BackgroundJobPayloadForAutoAssessment", "subtype_name": "BackgroundJobPayloadForAutoAssessment"}, {"subtype_model": "BackgroundJobPayloadForAssessmentRunReport", "subtype_name": "BackgroundJobPayloadForAssessmentRunReport"}]}, "BackgroundJobPayloadForAccessAssessment": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"summary_id": {"type": "string"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForAccessAssessment"}, "BackgroundJobPayloadForActivityExecutor": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["activity_type", "alert_data"], "properties": {"activity_type": {"type": "string", "description": "Type of activity executor action", "example": "activity_log", "enum": ["activity_log", "cloudops_parser", "secops_parser"], "x-cs-enum-type": "ActivityExecutorType"}, "alert_data": {"type": "string", "description": "alert data in json encoded text"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForActivityExecutor"}, "BackgroundJobPayloadForAssessmentDataCollection": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"service_account_id": {"type": "string"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForAssessmentDataCollection"}, "BackgroundJobPayloadForAssessmentFramework": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"assessment_id": {"type": "string", "description": "Assessment ID"}, "policy_job_id": {"type": "string", "description": "Policy Job ID"}, "policy_job_status": {"type": "string", "description": "Policy Job Status"}, "total_count": {"type": "integer", "description": "Total Count"}, "violation_count": {"type": "integer", "description": "Validation Count"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForAssessmentFramework"}, "BackgroundJobPayloadForAssessmentFrameworkRun": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"service_account_id": {"type": "string", "description": "Service account for which the assessments have to be triggered"}, "category_list": {"type": "array", "description": "Name of the categories for which the assessment has to be triggered", "items": {"type": "string"}}, "assessment_mode": {"type": "string", "description": "assessment is triggered by automation or manual mode", "example": "automated", "enum": ["automated", "manual"], "x-cs-enum-type": "AssessmentMode"}, "triggered_by": {"type": "string", "description": "assessment triggered by user or system"}, "user_id": {"type": "string", "description": "user id"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForAssessmentFrameworkRun"}, "BackgroundJobPayloadForAssessmentRun": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"state": {"type": "string", "description": "State of the background job", "example": "Setup", "enum": ["Setup", "StartScan", "Polling", "UpdateQuestions", "GenerateReport", "SendNotification"], "x-cs-enum-type": "BackgroundJobPayloadForAssessmentRunState"}, "assessment_run_history_id": {"type": "string", "description": "The assessment run history for this scan"}, "contexts": {"type": "array", "description": "Context triggering this background job", "items": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentContext"}}, "is_rescan": {"type": "boolean", "description": "States if the assessment is full scan or not"}, "report_ids": {"type": "array", "items": {"type": "string", "description": "List of Report IDs"}}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForAssessmentRun"}, "BackgroundJobPayloadForAssessmentRunReport": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"assessment_run": {"$ref": "#/definitions/RecordIdentity"}, "framework_id": {"type": "string", "description": "Identity of the Framework"}, "assessment_run_history": {"description": "ID of the assessment run history", "$ref": "#/definitions/RecordIdentity"}, "user_id": {"type": "string", "description": "User ID of user who requested the report"}, "report_type": {"type": "string", "description": "Type of Well Architected report", "example": "Full", "enum": ["Full", "Summary"], "x-cs-enum-type": "WellArchitectedReportType"}, "report_id": {"type": "string", "description": "ID of the report being generated"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForAssessmentRunReport"}, "BackgroundJobPayloadForAssessmentRunScan": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"assessment_run_history_id": {"type": "string", "description": "The assessment run history for this scan"}, "scan": {"description": "The scan to poll", "$ref": "#/definitions/WellArchitectedFrameworkAssessmentRunPolicyScan"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForAssessmentRunScan"}, "BackgroundJobPayloadForAutoAssessment": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["cloud_account_id"], "properties": {"state": {"type": "string", "description": "State of the AutoAssessment background job", "example": "BeginAssessment", "enum": ["BeginAssessment", "NotifyAssessment", "WaitingForScanComplete", "GenerateReport", "GetReport", "GetAttachment", "SendReport", "Skipped"], "x-cs-enum-type": "BackgroundJobPayloadForAutoAssessmentState"}, "cloud_account_id": {"type": "string"}, "assessment_run_id": {"type": "string"}, "report_id": {"type": "string"}, "attachment_id": {"type": "string"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForAutoAssessment"}, "BackgroundJobPayloadForAwsSecurityHubFindingsSync": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"cloud_account_id": {"type": "string", "description": "Cloud Account ID"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForAwsSecurityHubFindingsSync"}, "BackgroundJobPayloadForAwsSsmAutomationExecutionJobs": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"automation_execution_id": {"type": "string", "description": "Execution ID of the command document"}, "job_group_id": {"type": "string", "description": "SSM job group document id"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForAwsSsmAutomationExecutionJobs"}, "BackgroundJobPayloadForAwsSsmCommandExecution": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"cloud_account_id": {"type": "string", "description": "Cloud Account id for the background job command execution."}, "region": {"type": "string", "description": "Region of command execution."}, "execution_id": {"type": "string", "description": "ID of command execution in AWS."}, "status": {"type": "string", "description": "Command Execution Status."}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForAwsSsmCommandExecution"}, "BackgroundJobPayloadForAwsSsmCommandExecutionJobs": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"command_execution_id": {"type": "string", "description": "Execution ID of the command document"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForAwsSsmCommandExecutionJobs"}, "BackgroundJobPayloadForAwsSsmDocuments": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"master_account_id": {"type": "string", "description": "Master Account id for the background job need to processed"}, "cloud_account_id": {"type": "string", "description": "Cloud Account id for the background job need to processed"}, "sync_type": {"type": "string", "description": "Type of the document sync", "example": "automation", "enum": ["automation", "manual"], "x-cs-enum-type": "AwsSsmDocumentSyncType"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForAwsSsmDocuments"}, "BackgroundJobPayloadForBackupConfiguration": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["service_account_id"], "properties": {"service_account_id": {"type": "string"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForBackupConfiguration"}, "BackgroundJobPayloadForBlueprintExecution": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["execution_params", "execution_type", "job_id"], "properties": {"job_id": {"type": "string"}, "execution_type": {"type": "string", "example": "execute", "enum": ["execute", "resume"], "x-cs-enum-type": "BlueprintExecutionOption"}, "execution_params": {"type": "object", "description": "parameters to blueprint"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForBlueprintExecution"}, "BackgroundJobPayloadForBudgetAlertNotification": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["job_id", "status", "status_reason"], "properties": {"job_id": {"type": "string"}, "status": {"type": "string", "description": "status", "example": "completed", "enum": ["completed", "failed", "in_progress", "pending", "user_action_required"], "x-cs-enum-type": "BudgetAlertTriggerStatus"}, "status_reason": {"type": "string"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForBudgetAlertNotification"}, "BackgroundJobPayloadForBudgetAlertTrigger": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["budget_alert_trigger_id", "retries_remaining"], "properties": {"budget_alert_trigger_id": {"type": "string", "description": "Id of BUDGET_ALERT_TRIGGER_TRANSACTION_DETAILS document"}, "retries_remaining": {"type": "integer", "description": "number of retries remaining"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForBudgetAlertTrigger"}, "BackgroundJobPayloadForCloudUsageBilling": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["service_account_id"], "properties": {"service_account_id": {"type": "string", "description": "Target Cloud Account"}, "backfill_start_date": {"type": "string", "format": "date-time"}, "backfill_end_date": {"type": "string", "format": "date-time"}, "progress": {"description": "Progress of the cost processing", "$ref": "#/definitions/CostProcessingProgress"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForCloudUsageBilling"}, "BackgroundJobPayloadForComplianceControl": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"tenant_id": {"type": "string"}, "user_id": {"type": "string"}, "service_accounts": {"type": "array", "items": {"type": "string"}}, "assessment_jobs": {"type": "object", "additionalProperties": {"type": "string"}}, "compliance_control_uri": {"type": "string"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForComplianceControl"}, "BackgroundJobPayloadForComplianceStandard": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"tenant_id": {"type": "string"}, "user_id": {"type": "string"}, "service_accounts": {"type": "array", "items": {"type": "string"}}, "assessment_jobs": {"type": "object", "additionalProperties": {"type": "string"}}, "compliance_uri": {"type": "string"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForComplianceStandard"}, "BackgroundJobPayloadForDailyCostReport": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["service_account_id"], "properties": {"service_account_id": {"type": "string"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForDailyCostReport"}, "BackgroundJobPayloadForDailyGovernanceReport": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["service_account_id"], "properties": {"service_account_id": {"type": "string"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForDailyGovernanceReport"}, "BackgroundJobPayloadForDailyInventoryReport": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["service_account_id"], "properties": {"service_account_id": {"type": "string"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForDailyInventoryReport"}, "BackgroundJobPayloadForExtendedResourceDiscovery": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["extended_operation_details", "resource_inventory_id", "service_account_id"], "properties": {"service_account_id": {"type": "string"}, "resource_inventory_id": {"type": "string"}, "extended_operation_details": {"type": "object", "additionalProperties": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForExtendedResourceDiscovery"}, "BackgroundJobPayloadForGenericTask": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"target": {"type": "string"}, "args": {"type": "array", "items": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForGenericTask"}, "BackgroundJobPayloadForIntegratedToolsAlert": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["alert_data", "alert_type"], "properties": {"integrated_tool": {"type": "string", "description": "Integrated Tool to select", "example": "Anomaly_Detector", "enum": ["Anomaly_Detector", "AppDynamics", "App_Insights", "Azure_Devops", "Azure_Security_Graph", "Azure_Sentinel", "Canvas-LMS", "Chef", "CloudFlare", "Cloudstack", "DockerHub", "GitHub", "Hyperic_HQ", "JIRA_DataCenter", "JIRA_ServiceDesk", "Jenkins", "Logstash", "Microsoft_Teams", "Nagios", "Newrelic", "OpenDayLight", "PRTG", "Prometheus", "Qualys", "Rackspace", "RedHat_Satellite", "ServiceNow", "SkypeForBusiness", "Spacewalk", "TCL_ITSM", "Tenable_Nessus", "VMware", "VMware_VCDVyatta_vRouter", "ZOHO_ServiceDesk", "Zabbix"], "x-cs-enum-type": "IntegratedToolName"}, "alert_type": {"type": "string", "example": "cs_alert", "enum": ["cs_alert", "cs_budget_alert", "cs_policy_violation", "cmdb_message", "cs_activity", "itsm_activity", "snow_activity", "inventory_activity"], "x-cs-enum-type": "IntegratedToolAlertType"}, "alert_data": {"type": "string", "description": "alert data in json encoded text"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForIntegratedToolsAlert"}, "BackgroundJobPayloadForInventoryUnitRate": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"service_name": {"type": "string", "description": "cloud service name", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "service_account_id": {"type": "string"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForInventoryUnitRate"}, "BackgroundJobPayloadForMetricValueStorage": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"service_account_id": {"type": "string"}, "is_custom": {"type": "boolean"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForMetricValueStorage"}, "BackgroundJobPayloadForMonthlyCostReport": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["service_account_id"], "properties": {"service_account_id": {"type": "string"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForMonthlyCostReport"}, "BackgroundJobPayloadForOrphanedCloudMonitoringAlert": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["inventory_id"], "properties": {"inventory_id": {"type": "string", "description": "identifier of the resource"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForOrphanedCloudMonitoringAlert"}, "BackgroundJobPayloadForPatchManager": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"cloud_account_id": {"type": "string", "description": "ID of the cloud account"}, "status": {"type": "string", "description": "Patch manager sync status"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPatchManager"}, "BackgroundJobPayloadForPeriodicAccessAssessment": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicAccessAssessment"}, "BackgroundJobPayloadForPeriodicAccessGovernanceDataProcessing": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicAccessGovernanceDataProcessing"}, "BackgroundJobPayloadForPeriodicAccessValidation": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicAccessValidation"}, "BackgroundJobPayloadForPeriodicAlertConfiguration": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicAlertConfiguration"}, "BackgroundJobPayloadForPeriodicAnomalyActivityGrouping": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicAnomalyActivityGrouping"}, "BackgroundJobPayloadForPeriodicApplicationPerformanceMonitoring": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicApplicationPerformanceMonitoring"}, "BackgroundJobPayloadForPeriodicAssessmentDataCollection": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicAssessmentDataCollection"}, "BackgroundJobPayloadForPeriodicAssessmentGovernanceCost": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicAssessmentGovernanceCost"}, "BackgroundJobPayloadForPeriodicAwsSecurityHubFindingsSync": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicAwsSecurityHubFindingsSync"}, "BackgroundJobPayloadForPeriodicAwsSsmAutomationExecutionProgress": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicAwsSsmAutomationExecutionProgress"}, "BackgroundJobPayloadForPeriodicAwsSsmCommandExecutionProgress": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicAwsSsmCommandExecutionProgress"}, "BackgroundJobPayloadForPeriodicAwsSsmDocuments": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicAwsSsmDocuments"}, "BackgroundJobPayloadForPeriodicAzureSecurityGraph": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicAzureSecurityGraph"}, "BackgroundJobPayloadForPeriodicAzureSentinelUpdate": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicAzureSentinelUpdate"}, "BackgroundJobPayloadForPeriodicBackupConfiguration": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicBackupConfiguration"}, "BackgroundJobPayloadForPeriodicBudgetAlert": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicBudgetAlert"}, "BackgroundJobPayloadForPeriodicCloudOpsInsight": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicCloudOpsInsight"}, "BackgroundJobPayloadForPeriodicCloudUsageBilling": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicCloudUsageBilling"}, "BackgroundJobPayloadForPeriodicCloudWatchMetrics": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicCloudWatchMetrics"}, "BackgroundJobPayloadForPeriodicCloudWatchMetricsConfiguration": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicCloudWatchMetricsConfiguration"}, "BackgroundJobPayloadForPeriodicComplianceRefresh": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicComplianceRefresh"}, "BackgroundJobPayloadForPeriodicCreateActivityMasterTemplate": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicCreateActivityMasterTemplate"}, "BackgroundJobPayloadForPeriodicCreateAlertForNewResources": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicCreateAlertForNewResources"}, "BackgroundJobPayloadForPeriodicCreateMetricMasterTemplate": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicCreateMetricMasterTemplate"}, "BackgroundJobPayloadForPeriodicCredentialExpirationCheck": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicCredentialExpirationCheck"}, "BackgroundJobPayloadForPeriodicCustomWorkflowManager": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicCustomWorkflowManager"}, "BackgroundJobPayloadForPeriodicDailyCostReport": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicDailyCostReport"}, "BackgroundJobPayloadForPeriodicDailyGovernanceReport": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicDailyGovernanceReport"}, "BackgroundJobPayloadForPeriodicDailyInventoryReport": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicDailyInventoryReport"}, "BackgroundJobPayloadForPeriodicGovernanceInstanceStatus": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicGovernanceInstanceStatus"}, "BackgroundJobPayloadForPeriodicGovernanceNotification": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicGovernanceNotification"}, "BackgroundJobPayloadForPeriodicGovernanceValidation": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicGovernanceValidation"}, "BackgroundJobPayloadForPeriodicInventoryUnitRate": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicInventoryUnitRate"}, "BackgroundJobPayloadForPeriodicLogAnalyticsWorkspace": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicLogAnalyticsWorkspace"}, "BackgroundJobPayloadForPeriodicLogAnalyticsWorkspaceSync": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicLogAnalyticsWorkspaceSync"}, "BackgroundJobPayloadForPeriodicMarketPlacePoller": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicMarketPlacePoller"}, "BackgroundJobPayloadForPeriodicMetricValueStorage": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicMetricValueStorage"}, "BackgroundJobPayloadForPeriodicMetricsToAnomalyDetection": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicMetricsToAnomalyDetection"}, "BackgroundJobPayloadForPeriodicMonthlyCostReport": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicMonthlyCostReport"}, "BackgroundJobPayloadForPeriodicOnboardAndUpdateGCPAndAWSHierarchy": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicOnboardAndUpdateGCPAndAWSHierarchy"}, "BackgroundJobPayloadForPeriodicOperationAssessment": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicOperationAssessment"}, "BackgroundJobPayloadForPeriodicParseNetworkDetails": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicParseNetworkDetails"}, "BackgroundJobPayloadForPeriodicPatchManager": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {"cloud_accounts": {"type": "array", "items": {"type": "string"}}, "counter": {"type": "integer", "description": "Number of times the job has to retry for periodic job"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicPatchManager"}, "BackgroundJobPayloadForPeriodicPolicyRefresh": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicPolicyRefresh"}, "BackgroundJobPayloadForPeriodicProcessAlertTemplateStatusUpdate": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicProcessAlertTemplateStatusUpdate"}, "BackgroundJobPayloadForPeriodicProcessOrphanedConfigurationRecords": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicProcessOrphanedConfigurationRecords"}, "BackgroundJobPayloadForPeriodicProviderRecommendations": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicProviderRecommendations"}, "BackgroundJobPayloadForPeriodicRecoveryConfiguration": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicRecoveryConfiguration"}, "BackgroundJobPayloadForPeriodicRefreshUtilizationSummary": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicRefreshUtilizationSummary"}, "BackgroundJobPayloadForPeriodicReservedInstance": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicReservedInstance"}, "BackgroundJobPayloadForPeriodicResourceDashboard": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicResourceDashboard"}, "BackgroundJobPayloadForPeriodicResourceDiscovery": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicResourceDiscovery"}, "BackgroundJobPayloadForPeriodicResourcesDuplicationRemoval": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicResourcesDuplicationRemoval"}, "BackgroundJobPayloadForPeriodicScheduleRecommendation": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicScheduleRecommendation"}, "BackgroundJobPayloadForPeriodicSecureScoresConfiguration": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicSecureScoresConfiguration"}, "BackgroundJobPayloadForPeriodicSecurityDataProcessing": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicSecurityDataProcessing"}, "BackgroundJobPayloadForPeriodicServiceAccountDelete": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicServiceAccountDelete"}, "BackgroundJobPayloadForPeriodicServiceNowChangeStatusTracker": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicServiceNowChangeStatusTracker"}, "BackgroundJobPayloadForPeriodicServiceResourceBillingCategory": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicServiceResourceBillingCategory"}, "BackgroundJobPayloadForPeriodicSyncAccountSubscriptionAndMetadata": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicSyncAccountSubscriptionAndMetadata"}, "BackgroundJobPayloadForPeriodicSyncCSPTenant": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicSyncCSPTenant"}, "BackgroundJobPayloadForPeriodicSyncGCPMasterBillingAccountMetadata": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicSyncGCPMasterBillingAccountMetadata"}, "BackgroundJobPayloadForPeriodicSyncServiceAccountDetails": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicSyncServiceAccountDetails"}, "BackgroundJobPayloadForPeriodicSynchronizeNirmata": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicSynchronizeNirmata"}, "BackgroundJobPayloadForPeriodicTransactionDiscovery": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicTransactionDiscovery"}, "BackgroundJobPayloadForPeriodicUnitPriceRate": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicUnitPriceRate"}, "BackgroundJobPayloadForPeriodicUpdateCSPAuthDetails": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicUpdateCSPAuthDetails"}, "BackgroundJobPayloadForPeriodicUpdatePriorityAccountsSSMParameters": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicUpdatePriorityAccountsSSMParameters"}, "BackgroundJobPayloadForPeriodicUpdateSkippedAlertAndJobIdStatus": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicUpdateSkippedAlertAndJobIdStatus"}, "BackgroundJobPayloadForPeriodicValidateCredentialsAndUpdateUnitPriceViolations": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicValidateCredentialsAndUpdateUnitPriceViolations"}, "BackgroundJobPayloadForPeriodicZabbixGovernance": {"allOf": [{"$ref": "#/definitions/PeriodicBackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPeriodicZabbixGovernance"}, "BackgroundJobPayloadForPolicyExecution": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"policy_job_id": {"type": "string"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPolicyExecution"}, "BackgroundJobPayloadForPolicyJobStatusUpdate": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"policy_job_id": {"type": "string"}, "compliance_on_demand_job_id": {"type": "string"}, "violations_count": {"type": "integer"}, "status_reason": {"type": "string"}, "policy_details": {"type": "object", "additionalProperties": {"type": "string"}}, "compliance_status": {"type": "string"}, "service_account_id": {"type": "string"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPolicyJobStatusUpdate"}, "BackgroundJobPayloadForPolicyRefresh": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"service_account_id": {"type": "string"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForPolicyRefresh"}, "BackgroundJobPayloadForProviderRecommendations": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"cloud_service": {"type": "string", "description": "Cloud service for which to execute ProviderRecommendation (use only cloud_service or integrated_tools, not both)", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "integrated_tool": {"type": "string", "description": "Integrated tool for which to execute ProviderRecommendation (use only cloud_service or integrated_tools, not both)", "example": "Anomaly_Detector", "enum": ["Anomaly_Detector", "AppDynamics", "App_Insights", "Azure_Devops", "Azure_Security_Graph", "Azure_Sentinel", "Canvas-LMS", "Chef", "CloudFlare", "Cloudstack", "DockerHub", "GitHub", "Hyperic_HQ", "JIRA_DataCenter", "JIRA_ServiceDesk", "Jenkins", "Logstash", "Microsoft_Teams", "Nagios", "Newrelic", "OpenDayLight", "PRTG", "Prometheus", "Qualys", "Rackspace", "RedHat_Satellite", "ServiceNow", "SkypeForBusiness", "Spacewalk", "TCL_ITSM", "Tenable_Nessus", "VMware", "VMware_VCDVyatta_vRouter", "ZOHO_ServiceDesk", "Zabbix"], "x-cs-enum-type": "IntegratedToolName"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForProviderRecommendations"}, "BackgroundJobPayloadForReactiveTask": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForReactiveTask"}, "BackgroundJobPayloadForRecoveryConfiguration": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["service_account_id"], "properties": {"service_account_id": {"type": "string"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForRecoveryConfiguration"}, "BackgroundJobPayloadForRefreshRecommendation": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["recommendation_id"], "properties": {"recommendation_id": {"type": "string"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForRefreshRecommendation"}, "BackgroundJobPayloadForReportGeneration": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"html": {"type": "string", "description": "HTML content of report"}, "report_options": {"$ref": "#/definitions/ReportGenerationOptions"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForReportGeneration"}, "BackgroundJobPayloadForReservedInstance": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["cloud_service"], "properties": {"cloud_service": {"type": "string", "description": "Cloud Provider to select", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "service_account_id": {"type": "string", "description": "Service Account ID"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForReservedInstance"}, "BackgroundJobPayloadForResourceActivityLogSync": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"service_account_id": {"type": "string"}, "operation_id": {"type": "string"}, "resource_filter": {"type": "string"}, "meta_data": {"type": "object", "additionalProperties": {"type": "string"}}, "service_name": {"type": "string"}, "user_name": {"type": "string"}, "is_priority_account": {"type": "boolean"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForResourceActivityLogSync"}, "BackgroundJobPayloadForResourceAlertConfiguration": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"resource_audit_log_id": {"type": "string"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForResourceAlertConfiguration"}, "BackgroundJobPayloadForResourceDependencyRelationship": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"service_account_id": {"type": "string"}, "tenant_id": {"type": "string"}, "dependency type": {"type": "string", "example": "relationship", "enum": ["relationship", "dependency"], "x-cs-enum-type": "ResourceDependencyRelationshipType"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForResourceDependencyRelationship"}, "BackgroundJobPayloadForResourceDiscovery": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"tenant_id": {"type": "string"}, "service_account_id": {"type": "string"}, "action": {"type": "string", "description": "DiscoveryAction", "example": "create", "enum": ["create", "update", "delete"], "x-cs-enum-type": "ResourceDiscoveryActionType"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForResourceDiscovery"}, "BackgroundJobPayloadForResourceDiscoveryExecution": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["service_account_id"], "properties": {"service_account_id": {"type": "string"}, "is_compliance": {"type": "boolean"}, "on_create": {"type": "boolean"}, "event_name": {"type": "string"}, "event_resource": {"type": "string"}, "filter_request": {"type": "object", "additionalProperties": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForResourceDiscoveryExecution"}, "BackgroundJobPayloadForResourceLockSync": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForResourceLockSync"}, "BackgroundJobPayloadForResourceTagRemediation": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForResourceTagRemediation"}, "BackgroundJobPayloadForResourceTagSync": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForResourceTagSync"}, "BackgroundJobPayloadForScheduledTask": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"schedule_id": {"type": "string"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForScheduledTask"}, "BackgroundJobPayloadForScriptExecution": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["execution_params", "handler_type", "job_id", "version"], "properties": {"job_id": {"type": "string"}, "version": {"type": "string"}, "handler_type": {"type": "string", "description": "Script Configuration Type", "example": "chef", "enum": ["chef", "puppet", "shell", "ansible", "git", "Workload", "app"], "x-cs-enum-type": "ScriptExecutionConfigType"}, "execution_params": {"type": "object", "description": "parameters to script"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForScriptExecution"}, "BackgroundJobPayloadForSecureScoresConfiguration": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["service_account_id"], "properties": {"service_account_id": {"type": "string"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForSecureScoresConfiguration"}, "BackgroundJobPayloadForServiceAccountDelete": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"service_account_id": {"type": "string"}, "user_id": {"type": "string"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForServiceAccountDelete"}, "BackgroundJobPayloadForServiceNowCmdbSync": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"cloud_account_id": {"type": "string", "description": "Cloud Account ID"}, "progress": {"description": "Progress of the ServiceNow Cmdb sync", "$ref": "#/definitions/ServiceNowCmdbSyncProgress"}, "update_configuration_for_existing_records": {"type": "boolean", "description": "Configuration update flag"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForServiceNowCmdbSync"}, "BackgroundJobPayloadForSyncBudgets": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["account_event_type", "cloud_account_ids", "user_id"], "properties": {"cloud_account_ids": {"type": "array", "description": "List of cloud accounts", "items": {"type": "string"}}, "account_event_type": {"type": "string", "example": "create", "enum": ["create", "delete", "update"], "x-cs-enum-type": "SyncBudgetEventType"}, "user_id": {"type": "string"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForSyncBudgets"}, "BackgroundJobPayloadForTagPosture": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"snapshot_id": {"type": "string"}, "keep": {"type": "integer", "description": "Number of snapshots to keep"}, "progress": {"description": "Progress of the generation", "$ref": "#/definitions/TagPostureSnapshotProgress"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForTagPosture"}, "BackgroundJobPayloadForTemplateExecution": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["execution_params", "job_id", "notification_email_id"], "properties": {"job_id": {"type": "string"}, "template_type": {"type": "string", "description": "Type of template engine/dsl", "example": "cfn", "enum": ["cfn", "arm", "terraform", "mistral", "heat", "oracle", "dm"], "x-cs-enum-type": "TemplateEngineType"}, "notification_email_id": {"type": "string"}, "execution_params": {"type": "object", "description": "parameters to template"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForTemplateExecution"}, "BackgroundJobPayloadForUnitRateCrawler": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["configuration"], "properties": {"configuration": {"$ref": "#/definitions/UnitRateCrawlerConfiguration"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForUnitRateCrawler"}, "BackgroundJobPayloadForUpdateUnitRate": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"required": ["service_account_id"], "properties": {"service_account_id": {"type": "string", "description": "Target Cloud Account"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForUpdateUnitRate"}, "BackgroundJobPayloadForVulnerabilityAndThreats": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {"cloud_account_id": {"type": "string", "description": "Cloud Account ID"}, "security_category": {"type": "string", "description": "Security Category to select", "example": "threat_management", "enum": ["threat_management", "vulnerability_assessments"], "x-cs-enum-type": "SecurityCategory"}}, "type": "object"}], "x-cs-type-name": "BackgroundJobPayloadForVulnerabilityAndThreats"}, "BackgroundJobQueryCounter": {"properties": {"action": {"type": "string", "description": "Operation"}, "parametrized_query": {"type": "object", "description": "Summarized query"}, "query_planner": {"type": "object", "description": "Query Plan"}, "hits": {"type": "integer", "description": "Total number of calls"}, "hits_per_caller": {"type": "array", "description": "Frequency by callers", "items": {"$ref": "#/definitions/BackgroundJobQueryCounterPerCaller"}}}, "type": "object"}, "BackgroundJobQueryCounterPerCaller": {"properties": {"frames": {"type": "array", "description": "Stack frames for the thread", "items": {"$ref": "#/definitions/BackgroundJobThreadFrame"}}, "hits": {"type": "integer", "description": "Total number of calls"}}, "type": "object"}, "BackgroundJobQueryCounters": {"properties": {"entries": {"type": "array", "description": "Frequency by action and filter", "items": {"$ref": "#/definitions/BackgroundJobQueryCounter"}}}, "type": "object"}, "BackgroundJobQueueRequest": {"properties": {"executor": {"type": "string", "description": "Target Executor for the job", "example": "AI", "enum": ["AI", "BROKER", "COMPLIANCE", "COST", "GOVERNANCE", "HEATSTACK", "IDENTITY", "OPERATIONS", "REPORT_GENERATION", "RESOURCE_INVENTORY", "SECURITY"], "x-cs-enum-type": "BackgroundJobExecutor"}, "payload": {"description": "Data associated with the Background Job", "$ref": "#/definitions/BackgroundJobPayloadBase"}, "priority": {"type": "integer", "description": "Priority of the Background Job"}, "next_activation": {"type": "string", "format": "date-time", "description": "When the Background Job will execute"}, "check_for_queued_job": {"type": "boolean", "description": "Only queue if no other job is already queued. Queue if other job is already running"}, "check_for_running_job": {"type": "boolean", "description": "Only queue if no matching job is found"}, "queue_after_running_job": {"type": "boolean", "description": "Queue to run after any matching job"}, "auto_retries": {"type": "integer", "description": "Number of auto retries left for this Background Job"}, "auto_retry_delay": {"type": "number", "description": "Number of seconds to wait before a retry for this Background Job"}, "waiting_on": {"type": "array", "description": "Background Jobs this job is dependent for", "items": {"$ref": "#/definitions/RecordIdentity"}}}, "type": "object"}, "BackgroundJobQueueResponse": {"properties": {"created": {"description": "Background Job that got created", "$ref": "#/definitions/RecordIdentity"}, "existing": {"description": "Background Job that matched identifier", "$ref": "#/definitions/RecordIdentity"}}, "type": "object"}, "BackgroundJobSortCriteria": {"required": ["column"], "properties": {"column": {"type": "string", "example": "CreatedAt", "enum": ["CreatedAt", "NextActivation", "PayloadClass"], "x-cs-enum-type": "BackgroundJobSortColumn"}, "ascending": {"type": "boolean"}}, "type": "object"}, "BackgroundJobStatistics": {"properties": {"queued_jobs": {"type": "integer", "description": "Number of jobs queued with a worker"}, "executing_jobs": {"type": "integer", "description": "Number of jobs currently executing"}, "processed_jobs": {"type": "integer", "description": "Number of jobs processed"}, "failed_jobs": {"type": "integer", "description": "Number of jobs that failed"}, "invalidations": {"type": "object", "description": "Map from context to number of invalidations", "additionalProperties": {"type": "integer"}}, "query_counters": {"type": "object", "description": "Map from context to counter details", "additionalProperties": {"$ref": "#/definitions/BackgroundJobQueryCounters"}}, "heap_analysis_pending": {"type": "boolean", "description": "If true, heap processing is ongoing"}, "heap_analysis": {"type": "array", "description": "Historical heap analysis", "items": {"$ref": "#/definitions/BackgroundJobHeapAnalysis"}}}, "type": "object"}, "BackgroundJobStatisticsRequest": {"properties": {"executor": {"type": "string", "description": "Filter to threads in this executor", "example": "AI", "enum": ["AI", "BROKER", "COMPLIANCE", "COST", "GOVERNANCE", "HEATSTACK", "IDENTITY", "OPERATIONS", "REPORT_GENERATION", "RESOURCE_INVENTORY", "SECURITY"], "x-cs-enum-type": "BackgroundJobExecutor"}, "include_invalidations": {"type": "boolean", "description": "If true, invalidation counters will be returned"}, "include_query_counters": {"type": "boolean", "description": "If true, query counters will be returned"}, "include_query_counters_per_caller": {"type": "boolean", "description": "If true, query counters per caller will be returned"}, "trigger_heap_analysis": {"type": "boolean", "description": "If true, a new heap analysis is started"}, "include_heap_analysis": {"type": "boolean", "description": "If true, the historical heap analysis will be returned"}}, "type": "object"}, "BackgroundJobStatisticsResponse": {"properties": {"workers": {"type": "object", "description": "Map from identifier to service statistics model", "additionalProperties": {"$ref": "#/definitions/BackgroundJobStatistics"}}}, "type": "object"}, "BackgroundJobThread": {"properties": {"executor": {"type": "string", "description": "Executor of the Background Job", "example": "AI", "enum": ["AI", "BROKER", "COMPLIANCE", "COST", "GOVERNANCE", "HEATSTACK", "IDENTITY", "OPERATIONS", "REPORT_GENERATION", "RESOURCE_INVENTORY", "SECURITY"], "x-cs-enum-type": "BackgroundJobExecutor"}, "process_id": {"type": "integer", "description": "ID of the process"}, "process_name": {"type": "string", "description": "Name of the process"}, "thread_id": {"type": "integer", "description": "ID of the thread"}, "thread_name": {"type": "string", "description": "Name of the thread"}, "frames": {"type": "array", "description": "Stack frames for the thread", "items": {"$ref": "#/definitions/BackgroundJobThreadFrame"}}}, "type": "object"}, "BackgroundJobThreadFrame": {"properties": {"filename": {"type": "string", "description": "Name of the file for the function"}, "lineno": {"type": "integer", "description": "Number line for the function"}, "name": {"type": "string", "description": "Name of the function"}, "line": {"type": "string", "description": "Text of the line"}}, "type": "object"}, "BackgroundJobThreadRequest": {"properties": {"executor": {"type": "string", "description": "Filter to threads in this executor", "example": "AI", "enum": ["AI", "BROKER", "COMPLIANCE", "COST", "GOVERNANCE", "HEATSTACK", "IDENTITY", "OPERATIONS", "REPORT_GENERATION", "RESOURCE_INVENTORY", "SECURITY"], "x-cs-enum-type": "BackgroundJobExecutor"}}, "type": "object"}, "BackgroundJobUpdateActivationRequest": {"properties": {"job": {"description": "Background Job to update", "$ref": "#/definitions/RecordIdentity"}, "next_activation": {"type": "string", "format": "date-time", "description": "When the Background Job will execute"}}, "type": "object"}, "BackgroundJobUpdatePriorityRequest": {"properties": {"job": {"description": "Background Job to update", "$ref": "#/definitions/RecordIdentity"}, "priority": {"type": "integer", "description": "New priority of the Background Job"}}, "type": "object"}, "BackupReportResponse": {"required": ["data", "message", "status"], "properties": {"status": {"type": "string", "description": "status response"}, "message": {"type": "string", "description": "message response"}, "data": {"type": "object", "description": "Backup data"}}, "type": "object"}, "BaseChartWidgetConfigurationModel": {"allOf": [{"$ref": "#/definitions/BaseDataWidgetConfigurationModel"}, {"properties": {"chartType": {"type": "string", "description": "Chart type to display data", "example": "Bar", "enum": ["Bar", "Column", "GroupedColumn", "StackedColumn", "Pie", "Donut", "TreeMap", "Line", "Flow", "Map", "Sunburst", "Datatable", "Sankey", "HeatMap", "Bubble", "Area"], "x-cs-enum-type": "ChartType"}, "chartLimit": {"type": "string", "description": "Limit the amount of data to display", "example": "None", "enum": ["None", "Top5", "Top5PlusOther", "Bottom5", "Bottom5PlusOther"], "x-cs-enum-type": "ChartLimit"}, "legendDisplayConfiguration": {"$ref": "#/definitions/LegendDisplayConfiguration"}}, "type": "object"}], "x-cs-type-name": "BaseChartWidgetConfigurationModel"}, "BaseDataWidgetConfigurationModel": {"allOf": [{"$ref": "#/definitions/WidgetConfiguration"}, {"properties": {"contextSelector": {"type": "string"}, "context": {"$ref": "#/definitions/DataContext"}, "navigationDescriptors": {"type": "array", "items": {"$ref": "#/definitions/WidgetNavigationDescriptor"}}}, "type": "object"}], "x-cs-type-name": "BaseDataWidgetConfigurationModel"}, "BatchRequest": {"properties": {"ids": {"type": "array", "description": "Identifiers to fetch", "items": {"type": "string"}}}, "type": "object"}, "BillingAccountSummaryRequest": {"required": ["currency"], "properties": {"page": {"type": "integer", "description": "page number.Example 'page': 1"}, "limit": {"type": "integer", "description": "records limits. Example 'limit': 10"}, "filter": {"description": "Display fine tuned data", "$ref": "#/definitions/CostSavingsFilterValue"}, "currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}}, "type": "object"}, "BillingAccountSummaryResponse": {"required": ["message", "page_count", "status", "total_count"], "properties": {"status": {"type": "string", "description": "status response"}, "message": {"type": "string", "description": "message response"}, "total_count": {"type": "integer", "description": "Total count"}, "page_count": {"type": "integer", "description": "Page count"}, "account_summary": {"type": "array", "description": "Account wise Summary", "items": {"$ref": "#/definitions/AccountWiseSummary"}}}, "type": "object"}, "BillingTenantSummaryResponse": {"required": ["message", "page_count", "status", "total_count"], "properties": {"status": {"type": "string", "description": "status response"}, "message": {"type": "string", "description": "message response"}, "total_count": {"type": "integer", "description": "Total count"}, "page_count": {"type": "integer", "description": "Page count"}}, "type": "object"}, "BlueprintDetails": {"required": ["created_at", "created_by", "description", "id", "name", "resources", "scope", "status", "updated_at", "updated_by"], "properties": {"id": {"type": "string", "description": "Blueprint ID"}, "name": {"type": "string", "description": "Blueprint Name"}, "description": {"type": "string", "description": "Blueprints Description"}, "resources": {"type": "array", "description": "Resource Details", "items": {"$ref": "#/definitions/ResourcesDetails"}}, "scope": {"type": "string", "description": "Scope of the blueprint"}, "status": {"type": "string", "description": "Status of the blueprint"}, "created_by": {"type": "string", "description": "Who has created the blueprint"}, "created_at": {"type": "string", "description": "When was the blueprint created"}, "updated_by": {"type": "string", "description": "Who has updated the blueprint"}, "updated_at": {"type": "string", "description": "When was the blueprint updated"}}, "type": "object"}, "BrandingConfiguration": {"properties": {"primaryColor": {"type": "string"}, "secondaryColor": {"type": "string"}, "text": {"type": "string"}, "logoBase64": {"type": "string"}, "horizontalPlacement": {"type": "string", "example": "Left", "enum": ["Left", "Center", "Right"], "x-cs-enum-type": "HorizontalAlignment"}, "verticalPlacement": {"type": "string", "example": "Top", "enum": ["Top", "Middle", "Bottom"], "x-cs-enum-type": "VerticalAlignment"}}, "type": "object"}, "Budget": {"properties": {"budget_period": {"type": "string"}, "budget_amount": {"type": "number"}}, "type": "object"}, "BudgetAdvancedFilter": {"properties": {"tags": {"type": "array", "items": {"$ref": "#/definitions/BudgetAdvancedFilterDetails"}}, "compartments": {"type": "array", "items": {"$ref": "#/definitions/BudgetAdvancedFilterDetails"}}, "regions": {"type": "array", "items": {"$ref": "#/definitions/BudgetAdvancedFilterDetailsRegions"}}}, "type": "object"}, "BudgetAdvancedFilterDetails": {"properties": {"id": {"type": "string", "description": "tag id"}, "name": {"type": "string", "description": "tag name"}}, "type": "object"}, "BudgetAdvancedFilterDetailsRegions": {"properties": {"region": {"type": "array", "items": {"$ref": "#/definitions/BudgetFilterRegion"}}}, "type": "object"}, "BudgetAlertsExceedResponseModel": {"required": ["total_alerts_exceed_budgets_count"], "properties": {"total_alerts_exceed_budgets_count": {"type": "integer", "description": "alert exceeded budget count"}}, "type": "object"}, "BudgetAmountModel": {"required": ["amount"], "properties": {"amount": {"type": "integer", "description": "budget amount"}, "type": {"type": "string", "description": "type of budget amount. Allowed values will be auto_increment/auto_suggest/fixed"}, "planned_budget_limit": {"type": "array", "description": "planned budget_limit for auto_suggest/auto_increment type", "items": {"$ref": "#/definitions/BudgetLimitModel"}}, "budget_growth": {"type": "number", "description": "Percentage value for auto_increment type only"}}, "type": "object"}, "BudgetCreateFiltersModel": {"properties": {"environment": {"type": "array", "description": "environment with id name", "items": {"$ref": "#/definitions/FilterIdNameModel"}}, "application": {"type": "array", "description": "application with id name", "items": {"$ref": "#/definitions/FilterIdNameModel"}}, "application_group": {"type": "array", "description": "application_group with id name", "items": {"$ref": "#/definitions/FilterIdNameModel"}}, "cost_center": {"type": "array", "description": "cost_center with id name", "items": {"$ref": "#/definitions/FilterIdNameModel"}}, "resource_type": {"type": "array", "description": "resource_type with id name. Id and name can be obtained from /budget/filter_values API", "items": {"$ref": "#/definitions/FilterIdNameModel"}}, "tags": {"type": "object", "description": "tag filter values.Format should key nad list of values"}}, "type": "object"}, "BudgetCreateUpdateReqModel": {"required": ["budget_event_type", "budget_frequency", "budget_name", "budget_type", "tenant_id"], "properties": {"budget_name": {"type": "string", "description": "Provide a name for your budget"}, "budget_id": {"type": "string", "description": "Id of Budget to create budget data"}, "status": {"type": "string", "description": "The status of the budget corresponds to its budget ID and can be in one of the following states: \npending: This is the state before the budget has been synchronized.\nin_Progress: This is the state when the budget is currently being synchronized.\ncompleted: This is the state when the budget has successfully completed its synchronization.\n", "example": "pending", "enum": ["pending", "in_progress", "completed"], "x-cs-enum-type": "BudgetStatus"}, "tenant_id": {"type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, "budget_event_type": {"type": "string", "description": "budget event type.", "example": "create", "enum": ["create", "update"], "x-cs-enum-type": "BudgetEventType"}, "budget_frequency": {"type": "string", "description": "Specify the budget frequency. Example: 'budget frequency':'Daily' Allowed values - Daily,Monthly,Quarterly,Annually"}, "budget_type": {"type": "string", "description": "Budget type will Be COST for AWS and Cost for Azure"}, "budget_details": {"description": "Get details of a specific budget id within a given budget id", "$ref": "#/definitions/BudgetDetailsModel"}, "metadata": {"description": "Metadata like file name, file format", "$ref": "#/definitions/BudgetMetaModel"}, "budget_amount": {"description": "example: Currency of the cost. Example 'currency\u2019: \u2018USD\u2019", "$ref": "#/definitions/BudgetAmountModel"}}, "type": "object"}, "BudgetCreateUpdateResponseModel": {"required": ["budget_id", "budget_uri", "message"], "properties": {"message": {"type": "string", "description": "budget create/update success message"}, "tenant_id": {"type": "string", "description": "tenant id"}, "budget_name": {"type": "string", "description": "created/updated budget name"}, "is_corestack_created": {"type": "boolean", "description": "true if budget created in corestack"}, "is_recurring": {"type": "boolean", "description": "true if recurring budget"}, "budget_id": {"type": "string", "description": "Specify the budget ID.This is a unique ID and can be retrieved using the create budget_UI"}, "budget_engine": {"type": "string", "description": "budget engine"}, "budget_frequency": {"type": "string", "description": "Specify the budget frequency. Example: 'budget frequency':'Daily' Allowed values - Daily,Monthly,Quarterly,Annually"}, "budget_type": {"type": "string", "description": "budget type"}, "budget_uri": {"type": "string", "description": "budget uri"}}, "type": "object"}, "BudgetDeletetResponseModel": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Response message."}}, "type": "object"}, "BudgetDetailsModel": {"required": ["cloud_account_id", "currency", "from_date", "is_recurring"], "properties": {"is_recurring": {"type": "boolean", "description": "give false for non-recurring budget"}, "currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}, "from_date": {"type": "string", "description": "from date for that rule. Example: 'end_date': '2021-04-01T12:00:00.000Z"}, "to_date": {"type": "string", "description": "to date for that rule. Example: 'end_date': '2021-04-01T12:00:00.000Z"}, "cloud": {"type": "array", "description": "The name of the cloud service. for example, AWS.", "items": {"type": "string"}}, "cloud_account_id": {"type": "array", "description": "Specify the cloud account id to view, cloud account id is unique can be obtained from the list cloud account api.", "items": {"type": "string"}}, "filters": {"description": "budget filters", "$ref": "#/definitions/BudgetCreateFiltersModel"}}, "type": "object"}, "BudgetDriftDetail": {"properties": {"budget_drift": {"type": "number", "description": "Actual or Forecast Budget_Drift"}, "cost_spend": {"type": "number", "description": "Cost Spend for the clouds"}, "budget_amount": {"type": "number", "description": "Budget Amount."}, "budget_name": {"type": "string", "description": "Name of budget"}}, "type": "object"}, "BudgetDriftRequest": {"allOf": [{"$ref": "#/definitions/CommonCostRequest"}, {"required": ["configuration_type"], "properties": {"configuration_type": {"type": "string", "description": "Type of budget", "example": "actual", "enum": ["actual", "forecast"], "x-cs-enum-type": "BudgetType"}}, "type": "object"}]}, "BudgetDriftResponse": {"properties": {"tenant_id": {"type": "string", "description": "Id of the tenant"}, "budget_details": {"type": "array", "description": "Budget_details", "items": {"$ref": "#/definitions/BudgetDriftDetail"}}}, "type": "object"}, "BudgetDriftWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"required": ["configurationType"], "properties": {"configurationType": {"type": "string", "description": "Type of budget", "example": "actual", "enum": ["actual", "forecast"], "x-cs-enum-type": "BudgetType"}}, "type": "object"}], "x-cs-type-name": "BudgetDriftWidgetConfiguration"}, "BudgetFilterModel": {"properties": {"budget_frequency": {"type": "string", "description": "Specify the budget frequency. Example: 'budget frequency':'Daily' Allowed values - Daily,Monthly,Quarterly,Annually"}, "amount_from": {"type": "number", "description": "budget amount from value"}, "amount_to": {"type": "number", "description": "budget amount to value"}, "actual_amount_from": {"type": "number", "description": "actual amount from value"}, "actual_amount_to": {"type": "number", "description": "actual amount from value"}, "forecasted_amount_from": {"type": "number", "description": "forecasted amount from value"}, "forecasted_amount_to": {"type": "number", "description": "forecasted amount from value"}}, "type": "object"}, "BudgetFilterRegion": {"properties": {"type": {"type": "string", "description": "Type of region"}, "id": {"type": "string", "description": "Id of the region"}, "name": {"type": "string", "description": "Name of the region"}}, "type": "object"}, "BudgetHistoryDataModel": {"required": ["actual_amount", "budget_amount", "budget_id", "budget_variance", "budget_variance_percentage", "currency", "date"], "properties": {"budget_variance_percentage": {"type": "number", "description": "budget variance percentage"}, "budget_variance": {"type": "number", "description": "budget variance"}, "actual_amount": {"type": "number", "description": "actual amount"}, "budget_amount": {"type": "number", "description": "budget amount"}, "date": {"type": "string", "description": "budget amount until this date"}, "currency": {"type": "string", "description": "budget currency"}, "budget_id": {"type": "string", "description": "budget history of budget id"}}, "type": "object"}, "BudgetHistoryResModel": {"required": ["budget_history"], "properties": {"budget_history": {"type": "array", "description": "Budget History data", "items": {"$ref": "#/definitions/BudgetHistoryDataModel"}}}, "type": "object"}, "BudgetLimitModel": {"properties": {"amount": {"type": "integer", "description": "budget amount for that period"}, "month": {"type": "string", "description": "month format should be Jun-2015 and for annually 2020"}}, "type": "object"}, "BudgetListConstraintsReqModel": {"required": ["cloud_account_id", "filter_key", "tenant_id"], "properties": {"filter_key": {"type": "string", "description": "List constraints based on filter key. Allowed valaues are application/environment/application_group/cost_center/region/resource_group/linked_accounts/projects/resource_type/tags"}, "tenant_id": {"type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, "cloud_account_id": {"type": "array", "description": "Specify the cloud account id to view, cloud account id is unique can be obtained from the list cloud account api.", "items": {"type": "string"}}}, "type": "object"}, "BudgetListConstraintsResModel": {"required": ["data", "message", "status"], "properties": {"status": {"type": "string", "description": "budget filter list status"}, "message": {"type": "string", "description": "budget filter list status message"}, "data": {"type": "object", "description": "constraints listed for given filter key, cloud_account_id and tenant_id"}}, "type": "object"}, "BudgetListReqModel": {"required": ["cloud", "currency", "tenant_ids"], "properties": {"filters": {"description": "filter budgets based on filter data", "$ref": "#/definitions/BudgetFilterModel"}, "cloud": {"type": "array", "items": {"type": "string", "description": "Cloud Provider to select", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}}, "cloud_account_id": {"type": "array", "description": "Specify the cloud account id to view, cloud account id is unique and can be obtained from the list cloud account api.", "items": {"type": "string"}}, "tenant_ids": {"type": "array", "description": "Tenant ids", "items": {"type": "string"}}, "currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}}, "type": "object"}, "BudgetListResponseModel": {"required": ["budgets_list", "total_budgets_count"], "properties": {"total_budgets_count": {"type": "integer", "description": "Total Budgets count"}, "budgets_list": {"type": "array", "description": "Details of violation", "items": {"$ref": "#/definitions/ListBudgetsModel"}}}, "type": "object"}, "BudgetMetaModel": {"properties": {"tracking": {"description": "tracking details", "$ref": "#/definitions/BudgetTrackingModel"}}, "type": "object"}, "BudgetScopeDetails": {"properties": {"clouds": {"type": "array", "items": {"type": "string", "description": "cloud name", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}}, "filters": {"description": "advanced filters details of the specific budget mentioned", "$ref": "#/definitions/BudgetAdvancedFilter"}, "tenant_ids": {"type": "array", "items": {"type": "string", "description": "tenant name"}}, "cloud_accounts": {"type": "array", "items": {"type": "string"}}}, "type": "object"}, "BudgetSummaryFilterModel": {"properties": {"cloud": {"type": "array", "description": "The name of the cloud service. For example, AWS.", "items": {"type": "string"}}, "cloud_account_id": {"type": "array", "description": "Specify the cloud account id to view, cloud account id is unique can be obtained from the list cloud account api.", "items": {"type": "string"}}, "currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}}, "type": "object"}, "BudgetSummaryReqModel": {"properties": {"filter_params": {"description": "filter budgets based on filter data", "$ref": "#/definitions/BudgetSummaryFilterModel"}, "tenant_ids": {"type": "array", "description": "Tenant ids", "items": {"type": "string"}}, "type": {"type": "string", "description": "Type of filter.Type will be budget_summary/alert_exceeds_summary", "example": "budget_summary", "enum": ["budget_summary", "alert_exceeds_summary"], "x-cs-enum-type": "BudgetSummaryType"}}, "type": "object"}, "BudgetSummaryResponseModel": {"required": ["total_budgets_count"], "properties": {"total_budgets_count": {"type": "integer", "description": "budget count"}}, "type": "object"}, "BudgetThresholdViewModel": {"properties": {"percentage": {"type": "number", "description": "threshold percentage"}, "type": {"type": "string", "description": "threshold type like actual/forecasted"}, "amount": {"type": "number", "description": "Alert trigger when it reached this threshold amount"}}, "type": "object"}, "BudgetTrackingModel": {"properties": {"next_step": {"type": "integer", "description": "next step no"}}, "type": "object"}, "BudgetViewResModel": {"required": ["budget_event_type", "budget_frequency", "budget_name", "budget_type", "budget_uri", "cloud_account_id", "created_at", "created_by", "tenant_id", "threshold_uri", "updated_at", "updated_by"], "properties": {"threshold_uri": {"type": "array", "description": "threshold uri", "items": {"type": "string"}}, "cloud": {"type": "array", "description": "The name of the cloud service. For example, AWS.", "items": {"type": "string"}}, "cloud_account_id": {"type": "array", "description": "Cloud account id", "items": {"type": "string"}}, "created_at": {"type": "string", "description": "budget created at"}, "updated_at": {"type": "string", "description": "budget updated at"}, "created_by": {"type": "string", "description": "Name of the user who created the budget"}, "updated_by": {"type": "string", "description": "Name of the user who updated the budget"}, "tenant_id": {"type": "string", "description": "tenant id"}, "is_corestack_created": {"type": "boolean", "description": "true if budget created in corestack"}, "is_tenant_level": {"type": "boolean", "description": "true if budget is system budget"}, "budget_name": {"type": "string", "description": "budget name"}, "alias_budget_name": {"type": "string", "description": "budget name"}, "status": {"type": "string", "description": "budget creation status"}, "budget_type": {"type": "string", "description": "budget type"}, "budget_frequency": {"type": "string", "description": "Specify the budget frequency. Example: budget frequency':'Daily' Allowed values - Daily,Monthly,Quarterly,Annually"}, "budget_engine": {"type": "string", "description": "budget engine"}, "budget_event_type": {"type": "string", "description": "budget event type"}, "budget_uri": {"type": "string", "description": "budget uri"}, "metadata": {"description": "metadata to maintain step", "$ref": "#/definitions/BudgetMetaModel"}, "currency": {"type": "string", "description": "Name of the currency"}, "summary": {"description": "budget summary data", "$ref": "#/definitions/BudgetViewSummaryModel"}}, "type": "object"}, "BudgetViewSummaryModel": {"properties": {"budget_details": {"description": "budget details", "$ref": "#/definitions/BudgetDetailsModel"}, "budget_amount": {"description": "budget amount data", "$ref": "#/definitions/BudgetAmountModel"}, "threshold_details": {"type": "array", "description": "threshold details", "items": {"$ref": "#/definitions/BudgetThresholdViewModel"}}}, "type": "object"}, "CSPCustomerDataModel": {"required": ["created_at", "created_by", "csp_account_id", "csp_account_name", "csp_tenant_id", "customer_id", "customer_name", "subscriptions"], "properties": {"customer_name": {"type": "string", "description": "Name of the customer available in Azure."}, "customer_id": {"type": "string", "description": "ID of the customer available in Azure."}, "created_at": {"type": "string", "description": "Date at which the CSP parent account is on-boarded in Corestack"}, "created_by": {"type": "string", "description": "User who on-boarded the CSP parent account."}, "csp_account_name": {"type": "string", "description": "Name of the parent CSP-Direct account as available in Corestack."}, "csp_account_id": {"type": "string", "description": "ID of the parent CSP-Direct account as available in Corestack."}, "csp_tenant_id": {"type": "string", "description": "Tenant ID of the parent CSP-Direct account as available in Azure."}, "subscriptions": {"type": "string", "description": "Subscriptions count and their statuses pertaining to the customer"}}, "type": "object"}, "CSPCustomerListResponseModel": {"required": ["child_accounts", "page_count", "total_count"], "properties": {"total_count": {"type": "integer", "description": "Total customers count"}, "page_count": {"type": "string", "description": "Count of number of pages"}, "child_accounts": {"type": "array", "description": "List of customers.", "items": {"$ref": "#/definitions/CSPCustomerDataModel"}}}, "type": "object"}, "CSPOnboardSubscriptionRequestModel": {"required": ["access_type", "auth_values", "name", "scope"], "properties": {"name": {"type": "string", "description": "Unique name for the Cloud account to be created."}, "scope": {"type": "string", "description": "Scope of the cloud account", "example": "account", "enum": ["account", "tenant"], "x-cs-enum-type": "CloudAccountScope"}, "access_type": {"type": "string", "description": "Type of the access required to be enabled for the cloud account like assessment/assessment_and_governance", "example": "assessment", "enum": ["assessment", "assessment_and_governance"], "x-cs-enum-type": "AccessType"}, "auth_values": {"type": "object", "description": "Authentication credentials of Cloud account.Example\n                                                                                    \"auth_values\": {\n                                                                                       \"application_id\": \"****\",\n                                                                                       \"application_secret\": \"*****\",\n                                                                                       \"cloud_type\": \"Azure_Global/ Azure_Government/Azure_China\",\n                                                                                       \"tenant_id\": \"******\",\n                                                                                       \"subscription_id\": \"******\",\n                                                                                       \"subscription_type\": \"Azure_CSP-Direct\"\n                                                                                     }"}}, "type": "object"}, "CategoryCountRequest": {"required": ["filters", "identifier"], "properties": {"identifier": {"type": "string", "description": "Category/Resource based count for the cloud", "default": "category", "example": "category", "enum": ["category", "resource"], "x-cs-enum-type": "InventorySelector"}, "filters": {"description": "Resource filters detail", "$ref": "#/definitions/CountDetailsDataModel"}}, "type": "object"}, "CategoryCountResponse": {"properties": {"category_details": {"description": "Inventory category count details", "$ref": "#/definitions/CategoryCountResponseModelList"}, "resource_details": {"type": "object", "description": "Inventory resource count details"}}, "type": "object"}, "CategoryCountResponseModelList": {"properties": {"count": {"type": "string", "description": "Inventory category count details"}, "resource_category": {"type": "string", "description": "Name of the category"}}, "type": "object"}, "ChangePasswordRequest": {"required": ["current_password", "new_password"], "properties": {"current_password": {"type": "string", "description": "Current password of the user being used. If you are unaware of the current password, use forgot password option in the CoreStack portal."}, "new_password": {"type": "string", "description": "New Password to be set for the user. Password length must be of 8-15 characters with atleast one special character(_$^@*!#&.), one number and starting character must be an alphabet."}}, "type": "object"}, "ChangePasswordResponse": {"required": ["user_id"], "properties": {"status": {"type": "string", "description": "Status of change password API call."}, "message": {"type": "string", "description": "Message of change password API call."}, "user_id": {"type": "string", "description": "ID of the User to whom the password is changed"}}, "type": "object"}, "ChangeTimezoneData": {"required": ["id", "raw_offset"], "properties": {"raw_offset": {"type": "string", "description": "Raw offset of the timezone. It means the amount of time in milliseconds to add to UTC to get standard time in the required time zone"}, "id": {"type": "string", "description": "ID of the Timezone such as Asia/Kolkata, Asia/Dubai and so on"}}, "type": "object"}, "ChangeTimezoneRequest": {"required": ["new_timezone_id"], "properties": {"new_timezone_id": {"type": "string", "description": "New timezone id to be set for the user. For a valid list of timezone values to use, please refer https://en.wikipedia.org/wiki/List_of_tz_database_time_zones"}}, "type": "object"}, "ChangeTimezoneResponse": {"required": ["timezone", "user_id"], "properties": {"timezone": {"description": "Contains information about the timezone set for the user. Raw offset of the timezone. It means the amount of time in milliseconds to add to UTC to get standard time in the required time zone. Id of the Timezone such as Asia/Kolkata, Asia/Dubai and so on", "$ref": "#/definitions/ChangeTimezoneData"}, "user_id": {"type": "string", "description": "ID of the user to whom the timezone is changed"}}, "type": "object"}, "ChatBotButtonResponseModel": {"properties": {"payload": {"type": "string", "description": "type of the button"}, "title": {"type": "string", "description": "name of the button"}}, "type": "object"}, "ChatBotCustomResponseModel": {"properties": {"payload": {"type": "string", "description": "tabel or chart for the user request"}, "data": {"type": "object", "description": "data for the request"}}, "type": "object"}, "ChatBotRequestModel": {"properties": {"sender": {"type": "string", "description": "Sender name"}, "text": {"type": "string", "description": "Sender question"}}, "type": "object"}, "ChatBotResponseModel": {"properties": {"recipient_id": {"type": "string", "description": "user_name"}, "text": {"type": "string", "description": "title of the context"}, "buttons": {"type": "array", "description": "buttons details", "items": {"$ref": "#/definitions/ChatBotButtonResponseModel"}}, "custom": {"type": "array", "description": "buttons details", "items": {"$ref": "#/definitions/ChatBotCustomResponseModel"}}}, "type": "object"}, "ChildCloudAccountsResponseModel": {"required": ["child_accounts", "total_count"], "properties": {"child_accounts": {"type": "array", "description": "List of child accounts under an already on-boarded AWS master \" \n                                                                              \"account or Azure/EA/CSP accounts. Example: \n                                                                                                          \"child_accounts\":[{\n                                                                                                            \"is_editable\":true/false. true - if the account can \n                                                                                                                                                be edited,\n                                                                                                            \"status\":\"status of the cloud account whether active \n                                                                                                            or not on-boarded\",\n                                                                                                            \"is_accessible\":true/false. true - if the account is \n                                                                                                                                                accessible,\n                                                                                                            \"account_id\":\"******\",\n                                                                                                            \"configuration_status\":\"none\"}]\n                                                                                ", "items": {"type": "object"}}, "total_count": {"type": "integer", "description": "Total child accounts under an already on-boarded AWS master account or Azure/EA/CSP accounts"}}, "type": "object"}, "CloneTemplateRequest": {"required": ["clone_template_name", "is_default", "scope", "source_monitoring_template_uri"], "properties": {"clone_template_name": {"type": "string", "description": "Provide the clone template name."}, "is_default": {"type": "boolean", "description": "Boolean value to set template as default not not", "default": true}, "cloud_account_id": {"type": "array", "description": "Provide cloud_account_id when scope is selected as cloud_account scope", "items": {"type": "string"}}, "scope": {"type": "string", "description": "scope for the template to be cloned"}, "source_monitoring_template_uri": {"type": "string", "description": "monitoring_template_uri of a template from which it is being cloned"}, "constraints": {"description": "Provide the constraints, if the template need to be mapped with constraints", "$ref": "#/definitions/ConstraintsRequestModel"}}, "type": "object"}, "CloneTemplateResponse": {"required": ["data", "message"], "properties": {"message": {"type": "string", "description": "Clone template response"}, "data": {"type": "object", "description": "Create Monitoring Template Details"}}, "type": "object"}, "CloudAccount": {"required": ["cloud", "cloud_account_id"], "properties": {"cloud": {"type": "string", "description": "Displays the cloud associated with the template, for example, AWS, GCP, Azure etc"}, "cloud_account_id": {"type": "string", "description": "Unique Identifier of the cloud account onboarded in the on boarding section"}, "region": {"type": "string", "description": "The region of the cloud account where it needs to be executed. Mandatory for AWS"}, "zones": {"type": "string", "description": "The zones of the cloud account where it needs to be executed. Mandatory for GCP"}, "resourcegroup": {"type": "string", "description": "Resource group for which you need to execute the template for. Mandatory for Azure"}, "location": {"type": "string", "description": "Location under which you need to execute the template for. Mandatory for Azure"}}, "type": "object"}, "CloudAccountCreateRequestModel": {"required": ["access_type", "auth_values", "metadata", "name", "scope", "service"], "properties": {"name": {"type": "string", "description": "Unique name for the Cloud account to be created."}, "service": {"type": "string", "description": "Cloud provider of the cloud account to be created. Eg: AWS/Azure/Azure_CSP-Direct/Azure_EA"}, "access_type": {"type": "string", "description": "Type of the access required to be enabled for the cloud account like assessment/assessment_and_governance", "example": "assessment", "enum": ["assessment", "assessment_and_governance"], "x-cs-enum-type": "AccessType"}, "scope": {"type": "string", "description": "Scope of the cloud account", "example": "account", "enum": ["account", "tenant"], "x-cs-enum-type": "CloudAccountScope"}, "currency": {"type": "string", "description": "Currency by which the cloud account cost is estimated. By Default as USD ", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}, "metadata": {"description": "For AWS, regions to be configured while on-boarding the cloud account", "$ref": "#/definitions/PreferRegionModel"}, "auth_values": {"description": "Authentication credentials of Cloud account.", "$ref": "#/definitions/AuthValueModel"}}, "type": "object"}, "CloudAccountCreateResponse": {"required": ["cloud_account_id"], "properties": {"cloud_account_id": {"type": "string", "description": "Cloud account ID"}}, "type": "object"}, "CloudAccountDeleteResponse": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Response message."}}, "type": "object"}, "CloudAccountDescribeResponse": {"required": ["access_type", "account_id", "auth_values", "cloud", "cloud_account_id", "cloud_account_name", "cloud_type", "created_at", "created_by", "currency", "custom_billing_required", "locations", "master_account", "preferred_regions", "resource_groups", "scope", "status", "subscription_name", "subscription_type", "zones"], "properties": {"cloud_account_name": {"type": "string", "description": "Name of the cloud account."}, "cloud_account_id": {"type": "string", "description": "The unique identifier for a cloud account."}, "account_id": {"type": "string", "description": "The unique identifier for a cloud account from the AWS"}, "master_account": {"type": "string", "description": "The unique identifier for the AWS master cloud account"}, "subscription_name": {"type": "string", "description": "Name of the subscription from Azure"}, "subscription_type": {"type": "string", "description": "Type of subscription from Azure like Pay as you go"}, "cloud_type": {"type": "string", "description": "Type of cloud from cloud provider like AWS standard/Azure Global"}, "custom_billing_required": {"type": "string", "description": "To view whether custom billing is enabled for this cloud account"}, "currency": {"type": "string", "description": "Currency by which the cloud account is billed."}, "access_type": {"type": "string", "description": "Type of access enabled the cloud account like read/write"}, "status": {"type": "string", "description": "Indicates the status of the cloud account - active / inactive. Inactive cloud account can only be viewed."}, "cloud": {"type": "string", "description": "The name of the cloud service.for example, AWS."}, "scope": {"type": "string", "description": "Scope of the cloud account.for example, tenant"}, "auth_values": {"type": "object", "description": "Data that describes the authentication credentials."}, "preferred_regions": {"type": "object", "description": "Regions preferred by the user in that particular AWS account."}, "resource_groups": {"type": "object", "description": "Resource groups preferred by the user in that particular Azure account."}, "locations": {"type": "object", "description": "Locations preferred by the user in that particular Azure account."}, "zones": {"type": "object", "description": "Zones preferred by the user in that particular GCP account."}, "created_by": {"type": "string", "description": "Name of the user who created the cloud account."}, "created_at": {"type": "string", "description": "Cloud account creation time in UTC."}}, "type": "object"}, "CloudAccountDetail": {"required": ["id", "name"], "properties": {"name": {"type": "string", "description": "Cloud account name"}, "id": {"type": "string", "description": "Cloud Account ID"}, "preferred_regions": {"type": "array", "description": "Preferred regions of AWS", "items": {"type": "string"}}}, "type": "object"}, "CloudAccountDetails": {"required": ["id"], "properties": {"id": {"type": "string", "description": "Cloud account id is unique can be obtained from the list cloud"}}, "type": "object"}, "CloudAccountDetailsExtended": {"required": ["cloud_account_id", "cloud_account_name", "currency", "service_name"], "properties": {"cloud_account_id": {"type": "string", "description": "Cloud Account Id"}, "currency": {"type": "string", "description": "Currency Selected"}, "service_name": {"type": "string", "description": "Cloud Service Name"}, "cloud_account_name": {"type": "string", "description": "Cloud Account Name"}}, "type": "object"}, "CloudAccountDetailsResponse": {"required": ["cloud", "cloud_account_id"], "properties": {"cloud": {"type": "string", "description": "Displays the cloud associated with the template, for example, AWS, Azure etc"}, "cloud_account_id": {"type": "string", "description": "Unique Identifier of the cloud account onboarded in the on boarding section"}, "region": {"type": "string", "description": "The region of the cloud account where it needs to be executed. Mandatory for AWS"}, "resourcegroup": {"type": "string", "description": "Resource group for which you need to execute the template for. Mandatory for Azure"}, "location": {"type": "string", "description": "Location under which you need to execute the template for. Mandatory for Azure"}}, "type": "object"}, "CloudAccountList": {"required": ["access_type", "cloud", "cloud_account_id", "cloud_account_name", "created_at", "created_by", "delete_status", "is_editable", "overall_rediscover_sync_status", "scope", "service_discovery", "status"], "properties": {"cloud_account_name": {"type": "string", "description": "Name of the cloud account."}, "cloud_account_id": {"type": "string", "description": "ID of the cloud account."}, "status": {"type": "string", "description": "Cloud account status.Indicates the status of the cloud account - active / inactive.Inactive cloud account can only be viewed."}, "cloud": {"type": "string", "description": "The name of the cloud service.for example, AWS."}, "access_type": {"type": "string", "description": "Type of access for the cloud account like read/write"}, "scope": {"type": "string", "description": "Scope of the cloud account.for example, tenant"}, "created_by": {"type": "string", "description": "Name of the user who created the cloud account."}, "created_at": {"type": "string", "description": "Cloud account creation time in UTC."}, "service_discovery": {"type": "string", "description": " Service Discovery "}, "is_editable": {"type": "string", "description": "Flag to allow/disallow cloud account edit, either true/false"}, "delete_status": {"type": "string", "description": " Delete Status "}, "overall_rediscover_sync_status": {"type": "string", "description": " Rediscover Sync Status "}}, "type": "object"}, "CloudAccountListRequest": {"required": ["cloud_name", "tenant_id"], "properties": {"tenant_id": {"type": "array", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API", "items": {"type": "string"}}, "cloud_name": {"type": "string", "description": "Cloud Provider to select", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "access_type": {"type": "string", "description": "Cloud access type to select", "example": "read", "enum": ["read", "write"], "x-cs-enum-type": "CloudAccountAccessType"}, "status": {"type": "string", "description": "Cloud account status. Indicates the status of the cloud account - active / inactive.", "example": "active", "enum": ["active", "inactive"], "x-cs-enum-type": "CloudAccountStatus"}, "account_type": {"type": "string", "description": "Cloud account type to select", "example": "master_account", "enum": ["master_account", "linked_account"], "x-cs-enum-type": "CloudAccountType"}, "onboarded_from": {"type": "string", "format": "date-time", "description": "specify the date. yyyy-mm-dd"}, "page": {"type": "integer", "description": "page number.Example 'page':'1'"}, "limit": {"type": "integer", "description": "records limits.Example 'limit':'10'"}, "search": {"type": "string", "description": "Search for all the columns displayed in the table"}}, "type": "object"}, "CloudAccountListResponse": {"required": ["cloud_accounts", "total_count"], "properties": {"total_count": {"type": "integer", "description": "Number of CloudAccounts"}, "cloud_accounts": {"type": "array", "description": "Metadata Info.", "items": {"$ref": "#/definitions/CloudAccountList"}}}, "type": "object"}, "CloudAccountUpdateRequestModel": {"required": ["access_type", "auth_values", "name", "preferred_regions", "scope", "service"], "properties": {"name": {"type": "string", "description": "Unique name for the Cloud account to be created."}, "service": {"type": "string", "description": "Cloud provider of the cloud account to be created. Eg: AWS/Azure"}, "scope": {"type": "string", "description": "Scope of the cloud account", "example": "account", "enum": ["account", "tenant"], "x-cs-enum-type": "CloudAccountScope"}, "access_type": {"type": "string", "description": "Type of the access required to be enabled for the cloud account like assessment/assessment_and_governance", "example": "assessment", "enum": ["assessment", "assessment_and_governance"], "x-cs-enum-type": "AccessType"}, "preferred_regions": {"description": "For AWS, regions to be configured while on-boarding the cloud account", "$ref": "#/definitions/PreferRegionModel"}, "auth_values": {"description": "Authentication credentials of Cloud account.", "$ref": "#/definitions/AuthValueModel"}}, "type": "object"}, "CloudAccountUpdateResponse": {"required": ["cloud_account_id", "message"], "properties": {"message": {"type": "string", "description": "Response message."}, "cloud_account_id": {"type": "string", "description": "Cloud account ID"}}, "type": "object"}, "CloudAccounts": {"required": ["cloud_accounts", "message", "status"], "properties": {"status": {"type": "string", "description": "Response status on cloud accounts fetched successfully"}, "message": {"type": "string", "description": "Cloud accounts fetched successfully"}, "cloud_accounts": {"type": "object", "description": "cloud account details"}}, "type": "object"}, "CloudAccountsSummaryResponseModel": {"required": ["cloudwise_summary"], "properties": {"cloudwise_summary": {"type": "object", "description": "Summary of total cloud accounts on-boarded under a specific \n                                                                                               tenant segregated by account type like master account/linked \n                                                                                               account in case of AWS, subscriptions/EA/CSP in case of Azure.\n                                                                                               Example:\n                                                                                                  \"cloudwise_summary\": {\n                                                                                                          \"AWS\": [{\n                                                                                                              \"count\": 1,\n                                                                                                              \"service_name\": \"AWS\",\n                                                                                                              \"account_type\": \"master_account\"\n                                                                                                          }, {\n                                                                                                              \"count\": 1,\n                                                                                                              \"service_name\": \"AWS\",\n                                                                                                              \"account_type\": \"linked_account\"\n                                                                                                          }],\n                                                                                                          \"Azure\": [{\n                                                                                                              \"count\": 1,\n                                                                                                              \"service_name\": \"Azure\"\n                                                                                                          }]\n                                                                                                      }\n                                                                                                 "}}, "type": "object"}, "CloudForecasterForSixMonthsRequest": {"required": ["currency", "start_date"], "properties": {"filter": {"$ref": "#/definitions/AccountFilters"}, "currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}, "start_date": {"type": "string", "format": "date-time", "description": "specify the start date. start_date: yyyy-mm-dd"}, "time_zone": {"type": "string", "description": "Optional timezone of the caller"}}, "type": "object"}, "CloudForecasterForSixMonthsResponse": {"required": ["date"], "properties": {"date": {"type": "string", "format": "date-time", "description": "specify the start date. start_date: yyyy-mm-dd"}, "cloud": {"type": "string", "description": "Cloud Provider for the cloud account", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "cost_spend": {"type": "number"}}, "type": "object"}, "CloudForecasterForSixMonthsWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"required": ["granularity"], "properties": {"granularity": {"type": "string", "description": "Granularity to aggregate data", "example": "day", "enum": ["day", "month", "year"], "x-cs-enum-type": "TrendGranularity"}}, "type": "object"}], "x-cs-type-name": "CloudForecasterForSixMonthsWidgetConfiguration"}, "ColorConfiguration": {"properties": {"segments": {"type": "array", "items": {"$ref": "#/definitions/ColorSegment"}}, "paletteName": {"type": "string"}}, "type": "object"}, "ColorSegment": {"properties": {"color": {"type": "string"}, "stopPoint": {"type": "string", "example": "MIN", "enum": ["MIN", "MIDPOINT", "MAX", "CUSTOM"], "x-cs-enum-type": "ColorStopPoint"}, "stopPointValue": {"type": "integer"}}, "type": "object"}, "CommonCostRequest": {"required": ["currency"], "properties": {"filter": {"$ref": "#/definitions/AccountFilters"}, "currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}, "start_date": {"type": "string", "format": "date-time", "description": "specify the start date. start_date: yyyy-mm-dd"}, "end_date": {"type": "string", "format": "date-time", "description": "specify the end date. end_date: yyyy-mm-dd"}, "time_zone": {"type": "string", "description": "Optional timezone of the caller"}}, "type": "object"}, "ComplianceAssessmentHistorySummaryModel": {"required": ["assessment_job_status", "categorized_count", "policy_success_percentage", "status", "total_count"], "properties": {"status": {"type": "string", "description": "Status response of api hit to fetch the summary of compliance assessment."}, "assessment_job_status": {"type": "string", "description": "Status of the assessment job number given as input params."}, "total_count": {"type": "integer", "description": "Totally number of policies in assessment."}, "policy_success_percentage": {"type": "number", "description": "Percentage of policies in success status by total policies in assessment."}, "categorized_count": {"description": "Number of policies status wise detail.", "$ref": "#/definitions/PolicyCountModel"}}, "type": "object"}, "ComplianceConfigurationsResponseModel": {"required": ["configuration_status", "message", "status", "summary"], "properties": {"status": {"type": "string", "description": "success"}, "message": {"type": "string", "description": "Compliance Standards Configuration Status"}, "summary": {"type": "object", "description": "Summary for Compliance Standards Configuration Status"}, "configuration_status": {"type": "object", "description": "configuration_status for Compliance Standards Configuration Status"}}, "type": "object"}, "ComplianceControlMappingResModel": {"required": ["data", "message", "status"], "properties": {"status": {"type": "string", "description": "success"}, "message": {"type": "string", "description": "compliance control mappings list"}, "data": {"type": "object", "description": "data for compliance control mappings list"}}, "type": "object"}, "ComplianceControlReqModel": {"required": ["cloud_accounts", "compliance_control_uri"], "properties": {"cloud_accounts": {"type": "array", "description": "ID of the cloud account. The ID is unique, it can be obtained from the list cloud account api.", "items": {"type": "string"}}, "compliance_control_uri": {"type": "string", "description": "URI of compliance_control. This can be fetched from controls mapped under standards."}}, "type": "object"}, "ComplianceControlRes": {"required": ["data", "message", "status"], "properties": {"status": {"type": "string", "description": "status response"}, "message": {"type": "string", "description": "message response"}, "data": {"type": "object", "description": "compliance data"}}, "type": "object"}, "ComplianceControlResponseModel": {"required": ["assessment_jobs_by_account", "message", "status"], "properties": {"status": {"type": "string", "description": "success"}, "message": {"type": "string", "description": "compliance control execute triggered"}, "assessment_jobs_by_account": {"type": "object", "description": "execute data."}}, "type": "object"}, "ComplianceDetailsForPoliciesReqModel": {"properties": {"tenant_id": {"type": "array", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API", "items": {"type": "string"}}, "services": {"type": "array", "description": "allowed values:'AWS', 'Azure', 'Azure_CSP-Direct', 'Azure_EA', 'GCP'", "items": {"type": "string"}}, "cloud_accounts": {"type": "array", "description": "ID of the cloud account. This can be fetched from list cloud accounts API", "items": {"type": "string"}}}, "type": "object"}, "ComplianceDetailsForPoliciesResponseModel": {"required": ["definition_id", "impact", "message", "page_count", "policy_name", "resolution_status", "resource_counts", "skip_allowed", "status", "total_count"], "properties": {"status": {"type": "string", "description": "success"}, "message": {"type": "string", "description": "Compliance Posture Details For Policies"}, "skip_allowed": {"type": "string", "description": "Skip allowed true/false"}, "resolution_status": {"type": "string", "description": "resolution_status"}, "page_count": {"type": "string", "description": "page_count"}, "actions": {"type": "array", "description": "actions", "items": {"type": "object"}}, "policy_name": {"type": "string", "description": "policy_name"}, "resource_counts": {"type": "string", "description": "resource_counts"}, "impact": {"type": "string", "description": "impact"}, "total_count": {"type": "string", "description": "total_count"}, "definition_id": {"type": "string", "description": "definition_id"}}, "type": "object"}, "ComplianceFilterPolicyResModel": {"required": ["data", "message", "status"], "properties": {"status": {"type": "string", "description": "success"}, "message": {"type": "string", "description": "Compliance Posture Policies list"}, "data": {"type": "object", "description": "data for Compliance Posture Policies list"}}, "type": "object"}, "ComplianceFilterResModel": {"required": ["compliance_standards", "message", "policies", "resource_type", "severity", "status", "tenants"], "properties": {"status": {"type": "string", "description": "success"}, "message": {"type": "string", "description": "compliance posture filters"}, "resource_type": {"type": "array", "description": "Return all of the Resource type given the tenant as input", "items": {"type": "object"}}, "tenants": {"description": "Tenants data for compliance posture filters", "$ref": "#/definitions/ComplianceStandard"}, "policies": {"type": "array", "description": "Policies for compliance posture filters", "items": {"type": "object"}}, "compliance_standards": {"type": "array", "description": "Compliance standards for compliance posture filters", "items": {"type": "object"}}, "severity": {"type": "array", "description": "severity for compliance posture filters", "items": {"type": "object"}}}, "type": "object"}, "ComplianceFilterResponseModel": {"required": ["message", "status", "tenants"], "properties": {"status": {"type": "string", "description": "success"}, "message": {"type": "string", "description": "compliance posture filters"}, "tenants": {"description": "Tenants data for compliance posture filters", "$ref": "#/definitions/ComplianceStandard"}}, "type": "object"}, "ComplianceMappingResponseModel": {"required": ["data", "message", "page_count", "status", "total_count"], "properties": {"status": {"type": "string", "description": "success"}, "message": {"type": "string", "description": "compliance control mappings list"}, "total_count": {"type": "string"}, "page_count": {"type": "string", "description": "page count"}, "data": {"type": "object", "description": "compliance control mappings list."}}, "type": "object"}, "CompliancePostureVisibilityResponseModel": {"required": ["data", "message", "status"], "properties": {"status": {"type": "string", "description": "success"}, "message": {"type": "string", "description": "Compliance Standard Visibility For Cloud Account"}, "data": {"type": "object", "description": "data for compliance posture visibility"}}, "type": "object"}, "ComplianceStandard": {"required": ["cloud_accounts", "id", "name", "services"], "properties": {"services": {"type": "object", "description": "Return all of the Services given the tenant as input"}, "cloud_accounts": {"type": "object", "description": "Return all of the Cloud accounts given the tenant as input"}, "id": {"type": "string", "description": "ID for tenant"}, "name": {"type": "string"}}, "type": "object"}, "ComplianceStandardReqModel": {"required": ["cloud_accounts", "compliance_uri"], "properties": {"cloud_accounts": {"type": "array", "description": "ID of the cloud account. The ID is unique, it can be obtained from the list cloud account api.", "items": {"type": "string"}}, "compliance_uri": {"type": "string", "description": "uri of compliance standard This can be fetched from the compliance standards list API call."}}, "type": "object"}, "ComplianceStandardResponseModel": {"required": ["assessment_jobs_by_account", "message", "status"], "properties": {"status": {"type": "string", "description": "success"}, "message": {"type": "string", "description": "summary listed successfully"}, "assessment_jobs_by_account": {"type": "object", "description": "execute data."}}, "type": "object"}, "ComplianceStandards": {"required": ["_id", "compliance_name", "compliance_number", "compliance_uri", "created_at", "created_by", "description", "is_deleted", "is_internal", "logo", "reference", "scope", "updated_at", "updated_by", "valid_service_types", "version"], "properties": {"is_internal": {"type": "boolean", "description": "is_internal"}, "is_deleted": {"type": "boolean", "description": "is_deleted"}, "description": {"type": "string", "description": "Description for Compliance Standard"}, "reference": {"description": "Reference", "$ref": "#/definitions/ReferenceResponse"}, "compliance_name": {"type": "string", "description": "Name of the Compliance Standard"}, "updated_at": {"type": "string", "description": "Date and Time of Update"}, "created_by": {"type": "string", "description": "Creator of the particular Compliance"}, "version": {"type": "array", "description": "Version", "items": {"type": "string"}}, "compliance_uri": {"type": "string", "description": "Compliance URI"}, "compliance_number": {"type": "string", "description": "Compliance Number"}, "valid_service_types": {"type": "array", "description": "Valid Service Types", "items": {"type": "string"}}, "scope": {"type": "string", "description": "Scope"}, "_id": {"type": "string", "description": "ID"}, "created_at": {"type": "string", "description": "Date and Time of Creation"}, "updated_by": {"type": "string", "description": "Updated By"}, "logo": {"type": "string", "description": "Logo of standard"}}, "type": "object"}, "ComplianceStandardsResponseModel": {"required": ["data", "message", "status"], "properties": {"status": {"type": "string", "description": "Response status for compliance standards"}, "message": {"type": "string", "description": "Response message for compliance standards"}, "data": {"type": "array", "description": "Compliance Standards data list", "items": {"$ref": "#/definitions/ComplianceStandards"}}}, "type": "object"}, "ComplianceSummary": {"required": ["page", "page_count", "records", "total_count"], "properties": {"total_count": {"type": "string"}, "page_count": {"type": "string", "description": "page count"}, "page": {"type": "string", "description": "page"}, "records": {"type": "object", "description": "records"}}, "type": "object"}, "ComplianceSummaryByPoliciesReqModel": {"required": ["tenant_id"], "properties": {"tenant_id": {"type": "array", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API", "items": {"type": "string"}}, "standards": {"type": "array", "description": "compliance standards to filter policies", "items": {"type": "string"}}, "policy_id": {"type": "array", "description": "policies to  filter", "items": {"type": "string"}}, "services": {"type": "array", "description": "allowed values:'AWS', 'Azure', 'Azure_CSP-Direct', 'Azure_EA', 'GCP'", "items": {"type": "string"}}, "cloud_accounts": {"type": "array", "description": "ID of the cloud account. This can be fetched from list cloud accounts API", "items": {"type": "string"}}, "severity": {"type": "array", "description": "severities to filter policies", "items": {"type": "string"}}, "resource_type": {"type": "array", "description": "resource types to filter policies", "items": {"type": "string"}}}, "type": "object"}, "ComplianceSummaryByPoliciesResponseModel": {"required": ["message", "page_count", "policies", "status", "total_count"], "properties": {"status": {"type": "string", "description": "success"}, "message": {"type": "string", "description": "Compliance Posture By Policy"}, "total_count": {"type": "string", "description": "total_count"}, "page_count": {"type": "string", "description": "page_count"}, "policies": {"type": "object", "description": "policies"}}, "type": "object"}, "ComplianceSummaryReqModel": {"required": ["tenant_id"], "properties": {"tenant_id": {"type": "array", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API", "items": {"type": "string"}}, "services": {"type": "array", "description": "allowed values:'AWS', 'Azure', 'Azure_CSP-Direct', 'Azure_EA', 'GCP'", "items": {"type": "string"}}, "cloud_accounts": {"type": "array", "description": "ID of the cloud account. This can be fetched from list cloud accounts API", "items": {"type": "string"}}, "compliance_uri": {"type": "array", "description": "uri of compliance standard This can be fetched from the compliance standards list API call", "items": {"type": "string"}}}, "type": "object"}, "ComplianceSummaryResponseModel": {"required": ["data", "message", "status"], "properties": {"status": {"type": "string", "description": "success"}, "message": {"type": "string", "description": "compliance posture summary by cloud accounts"}, "data": {"description": "Data of Compliance posture summary by cloud accounts", "$ref": "#/definitions/ComplianceSummary"}}, "type": "object"}, "ComplianceVisibilityResponseModel": {"required": ["data", "status"], "properties": {"status": {"type": "string", "description": "success"}, "data": {"type": "object", "description": "list of visibility summary."}}, "type": "object"}, "ComplianceVisibilityTrendResponseModel": {"required": ["data", "message", "status"], "properties": {"status": {"type": "string", "description": "success"}, "message": {"type": "string", "description": "Compliance Standard Trend"}, "data": {"type": "object", "description": "data for compliance visibility trend"}}, "type": "object"}, "ConfigValidationRequest": {"required": ["policy_engine", "service_name"], "properties": {"policy_engine": {"type": "string", "description": "Supported Policy engines are corestack_policy, aws_config and azure_policy", "example": "corestack_policy", "enum": ["corestack_policy", "aws_organization_policy", "azure_policy", "chef_inspec", "congress", "aws_config", "gcp_organization_policy", "gcp_policy", "kubernetes_policy", "oracle_cloud_guard"], "x-cs-enum-type": "PolicyEngineType"}, "service_name": {"type": "string", "description": "Supported Clouds for the respective Policy engine are AWS and Azure", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}}, "type": "object"}, "ConfigValidationResponse": {"properties": {"status": {"type": "string", "description": "Status response"}, "mandatory_requirements": {"type": "object", "description": "Mandatory requirements", "additionalProperties": {"type": "string"}}, "optional_requirements": {"type": "object", "description": "Optional requirements", "additionalProperties": {"type": "string"}}, "config_validations": {"type": "array", "description": "Config validation results", "items": {"$ref": "#/definitions/ConfigValidationSummary"}}}, "type": "object"}, "ConfigValidationSummary": {"properties": {"region": {"type": "string", "description": "Region"}, "recorder_status": {"type": "string", "description": "Recorder status", "example": "running", "enum": ["running", "not_running", "error"], "x-cs-enum-type": "ConfigValidationRecorderStatus"}, "role_name": {"type": "string", "description": "Role name"}, "availability_status": {"type": "string", "description": "Availability status", "example": "success", "enum": ["success"], "x-cs-enum-type": "ConfigValidationAvailabilityStatus"}}, "type": "object"}, "ConstraintsRequestModel": {"properties": {"option": {"type": "string", "description": "Option Value of Tag Details", "example": "new", "enum": ["new"], "x-cs-enum-type": "ConstraintsOption"}, "type": {"type": "string", "description": "Type of Template Details", "example": "tag", "enum": ["tag"], "x-cs-enum-type": "ConstraintsType"}, "tags": {"type": "object", "description": "Tag keys and Tag values of Template Details. eg) {\"XZV\":[\"ZNCDF\", \"dfsgsg\"]}"}}, "type": "object"}, "ControlHealthWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "ControlHealthWidgetConfiguration"}, "ControlMappingsListData": {"required": ["Compliance_control_uri", "Compliance_uri", "Control_action_attributes", "Control_attributes", "Control_family", "Control_name", "Id", "Policy_mappings", "Severity"], "properties": {"Control_action_attributes": {"type": "object", "description": "attributes of controls which dictate actions specific to corestack"}, "Control_family": {"type": "string", "description": "security risk family that control belongs to"}, "Compliance_control_uri": {"type": "string", "description": "the unique identifier of the control in the tenant"}, "Control_attributes": {"type": "object", "description": "attributes associated with the controls unique to the standard"}, "Severity": {"type": "string", "description": "severity of control data"}, "Policy_mappings": {"type": "object", "description": "attributes of controls which dictate actions specific to corestack"}, "Compliance_uri": {"type": "string", "description": "the compliance standard associated with the control"}, "Control_name": {"type": "string", "description": "name of the control"}, "Id": {"type": "object", "description": "unique DB id of the control"}}, "type": "object"}, "ControlViolationsWithHighRiskLevelWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "ControlViolationsWithHighRiskLevelWidgetConfiguration"}, "ControlViolationsWithStandardCoverageWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "ControlViolationsWithStandardCoverageWidgetConfiguration"}, "ControlsListData": {"required": ["Audit_status", "Compliance_control_uri", "Compliance_uri", "Control_action_attributes", "Control_attributes", "Count_of_status", "Id", "Policy_mappings"], "properties": {"Control_action_attributes": {"type": "object", "description": "attributes of controls which dictate actions specific to corestack"}, "Count_of_status": {"type": "integer", "description": "the count of assessed service accounts for the control"}, "Compliance_control_uri": {"type": "string", "description": "the unique identifier of the control in the tenant"}, "Control_attributes": {"type": "object", "description": "attributes associated with the controls unique to the standard"}, "Policy_mappings": {"type": "integer", "description": "count of policies mapped to the control"}, "Compliance_uri": {"type": "string", "description": "the compliance standard associated with the control"}, "Audit_status": {"type": "string", "description": "current audit status of the control"}, "Id": {"type": "object", "description": "unique DB id of the control"}}, "type": "object"}, "ControlsListMappingResponse": {"required": ["Control_records", "Total_count"], "properties": {"Total_count": {"type": "integer", "description": "Number of controls in the standard"}, "Control_records": {"description": "list of application details.", "$ref": "#/definitions/ControlMappingsListData"}}, "type": "object"}, "ControlsListResponse": {"required": ["Control_records", "Total_count"], "properties": {"Total_count": {"type": "integer", "description": "Number of controls in the standard"}, "Control_records": {"description": "list of application details.", "$ref": "#/definitions/ControlsListData"}}, "type": "object"}, "CostAnomalyByCloudRequest": {"allOf": [{"$ref": "#/definitions/CommonCostRequest"}, {"required": ["granularity"], "properties": {"granularity": {"type": "string", "description": "Granularity to aggregate data", "example": "day", "enum": ["day", "month", "year"], "x-cs-enum-type": "TrendGranularity"}}, "type": "object"}]}, "CostAnomalyByCloudResponse": {"properties": {"cloud": {"type": "string"}, "date": {"type": "string", "format": "date"}, "cost_anomaly": {"type": "number"}}, "type": "object"}, "CostAnomalyByCloudWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"required": ["granularity"], "properties": {"granularity": {"type": "string", "description": "Granularity to aggregate data", "example": "day", "enum": ["day", "month", "year"], "x-cs-enum-type": "TrendGranularity"}}, "type": "object"}], "x-cs-type-name": "CostAnomalyByCloudWidgetConfiguration"}, "CostAnomalyImpactByBillingWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"required": ["categoryType"], "properties": {"categoryType": {"type": "string", "description": "Type of Category", "example": "CloudProvider", "enum": ["CloudProvider", "CloudAccount", "ProductCategory", "ResourceCategory"], "x-cs-enum-type": "CategoryType"}}, "type": "object"}], "x-cs-type-name": "CostAnomalyImpactByBillingWidgetConfiguration"}, "CostAnomalyImpactByEventWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"required": ["categoryType"], "properties": {"categoryType": {"type": "string", "description": "Type of Category", "example": "CloudProvider", "enum": ["CloudProvider", "CloudAccount", "ProductCategory", "ResourceCategory"], "x-cs-enum-type": "CategoryType"}}, "type": "object"}], "x-cs-type-name": "CostAnomalyImpactByEventWidgetConfiguration"}, "CostAnomalyProductCategorySummary": {"required": ["anomaly_type", "product_category", "resource_category"], "properties": {"product_category": {"type": "string", "description": "Name of the Product category"}, "resource_category": {"type": "string", "description": "Name of the Resource category"}, "anomaly_type": {"type": "string", "description": "Anomaly Type", "example": "below_threshold", "enum": ["below_threshold", "above_threshold", "sudden_drop", "sudden_spike"], "x-cs-enum-type": "AnomalyType"}, "anomaly_count": {"type": "integer", "description": "Product category wise anomaly count"}, "cost_impact": {"type": "number", "description": "Product category level cost impact"}, "resources": {"type": "array", "description": "Anomalous resource details", "items": {"$ref": "#/definitions/CostAnomalyResourceDetails"}}}, "type": "object"}, "CostAnomalyResourceDetails": {"required": ["cost_impact", "resource_name"], "properties": {"resource_name": {"type": "string", "description": "Name of the resource"}, "cost_impact": {"type": "number", "description": "Cost incurred by the resource"}}, "type": "object"}, "CostAnomalyRuleProductCategory": {"required": ["reason", "rule_name"], "properties": {"rule_name": {"type": "string", "description": "Cost Anomaly rule name"}, "reason": {"type": "string", "description": "Reason for rule  violation"}, "categories": {"type": "array", "description": "Rule wise cost anomaly resource details", "items": {"$ref": "#/definitions/CostAnomalyRuleResourceCategory"}}}, "type": "object"}, "CostAnomalyRuleResourceCategory": {"required": ["product_category", "resource_category"], "properties": {"product_category": {"type": "string", "description": "Product Category name"}, "resource_category": {"type": "string", "description": "Resource Category name"}, "resources": {"type": "array", "description": "Anomalous resource details", "items": {"$ref": "#/definitions/CostAnomalyResourceDetails"}}}, "type": "object"}, "CostAnomalyRuleSummaryAccount": {"required": ["bill_date", "cloud_account_id"], "properties": {"cloud_account_id": {"type": "string", "description": "service account id"}, "bill_date": {"type": "string", "description": "Billing date in yyyy-mm-dd format"}, "rule_cost_impact_summary": {"type": "array", "description": "Anomalous resource details", "items": {"$ref": "#/definitions/CostAnomalyRuleProductCategory"}}}, "type": "object"}, "CostAnomalyRuleSummaryResponse": {"properties": {"details": {"type": "array", "description": "Cost Anomaly rule wise daily summary", "items": {"$ref": "#/definitions/CostAnomalyRuleSummaryAccount"}}}, "type": "object"}, "CostAnomalySummaryAccount": {"required": ["bill_date", "cloud_account_id"], "properties": {"cloud_account_id": {"type": "string", "description": "service account id"}, "bill_date": {"type": "string", "description": "Billing date in yyyy-mm-dd format"}, "product_categories": {"type": "array", "description": "Product category wise daily cost anomaly summary", "items": {"$ref": "#/definitions/CostAnomalyProductCategorySummary"}}}, "type": "object"}, "CostAnomalySummaryRequest": {"required": ["currency", "end_date", "start_date"], "properties": {"filter": {"$ref": "#/definitions/AccountFilters"}, "currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}, "start_date": {"type": "string", "format": "date-time", "description": "specify the start date"}, "end_date": {"type": "string", "format": "date-time", "description": "specify the end date"}, "time_zone": {"type": "string", "description": "Optional timezone of the caller"}}, "type": "object"}, "CostAnomalySummaryResponse": {"properties": {"details": {"type": "array", "description": "Cost Anomaly account  wise daily summary", "items": {"$ref": "#/definitions/CostAnomalySummaryAccount"}}}, "type": "object"}, "CostCenter": {"required": ["cloud_account_details", "cost_center_id", "name", "tag_list"], "properties": {"cost_center_id": {"type": "string", "description": "Unique ID of the Cost Center."}, "name": {"type": "string", "description": "Name of the Cost Center."}, "description": {"type": "string", "description": "Description for the Cost Center"}, "tag_list": {"type": "object", "description": "Tags associated with cost center"}, "owner": {"type": "string", "description": "Name of the owner."}, "cloud_account_details": {"type": "object", "description": "Cloud account"}}, "type": "object"}, "CostCenterCreateResponse": {"required": ["cost_center_id"], "properties": {"cost_center_id": {"type": "string", "description": "Unique Id of the environment"}}, "type": "object"}, "CostCenterListResponse": {"required": ["CostCenter", "total_count"], "properties": {"total_count": {"type": "integer", "description": "Number of cost center"}, "CostCenter": {"description": "list of cost center details.", "$ref": "#/definitions/CostCenter"}}, "type": "object"}, "CostCenterRemoveResModel": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Delete Response message."}}, "type": "object"}, "CostCenterUpdateResponse": {"properties": {"cost_center_id": {"type": "string", "description": "Unique ID of the environment"}}, "type": "object"}, "CostCenterViewResponse": {"required": ["cloud_account_details", "cost_center_id", "created_at", "name", "tag_list"], "properties": {"cost_center_id": {"type": "string", "description": "Unique ID of the Cost Center."}, "name": {"type": "string", "description": "Name of the Cost Center."}, "description": {"type": "string", "description": "Description for the Cost Center"}, "created_at": {"type": "string", "description": "Cost Center Creation time in UTC"}, "tag_list": {"type": "object", "description": "Tags associated with cost center"}, "cloud_account_details": {"type": "object", "description": "Cloud account"}}, "type": "object"}, "CostDashboardAccount": {"required": ["account_id", "account_name", "account_type", "currency", "last_updated", "scope", "service_type", "tenant_id", "tenant_name", "total_cost"], "properties": {"tenant_name": {"type": "string", "description": "tenant name"}, "currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}, "last_updated": {"type": "string", "description": "cost data updated time time in UTC"}, "scope": {"type": "string", "description": "scope of cloud account"}, "service_type": {"type": "string", "description": "cloud type can be Azure, aws, GCP etc", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "account_type": {"type": "string", "description": "what is the type of cloud account"}, "account_name": {"type": "string", "description": "cloud account name with which it is on boarded"}, "account_id": {"type": "string", "description": "cloud account id"}, "cloud_provider_unique_id": {"type": "string", "description": "Cloud Provider ID"}, "tenant_id": {"type": "string", "description": "project id"}, "hierarchy_existence": {"type": "string", "description": "hierarchy_existence"}, "total_cost": {"type": "number", "description": "Total cost for the usage"}, "total_cost_discounted": {"type": "number", "description": "Total cost that is being discounted"}}, "type": "object"}, "CostDashboardSummaryFilters": {"properties": {"scope": {"type": "array", "description": "Scope of the cloud account for fetching data by account,tenant", "items": {"type": "string"}}, "account_type": {"type": "array", "description": "what is the type of cloud_account_type.Example 'account_type':'master_account','linked_account','Pay_as_You_Go',Azure_CSP-Direct','Azure_CSP-InDirect','Enterprise','billing_account',linked_project_account'", "items": {"type": "string"}}, "service_type": {"type": "array", "items": {"type": "string", "description": "cloud type can be Azure, AWS, GCP etc", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}}, "total_cost": {"description": "Total cost for the usage. Example range from:0, to:1000000", "$ref": "#/definitions/FiltersRangeValueModel"}, "projected_cost": {"description": "Projected cost. example range from:0, to:1000000", "$ref": "#/definitions/FiltersRangeValueModel"}}, "type": "object"}, "CostDashboardSummaryPeriod": {"properties": {"id": {"type": "string", "description": "ID of period"}, "name": {"type": "string", "description": "Name of period"}}, "type": "object"}, "CostDashboardSummaryRequest": {"required": ["list_by"], "properties": {"list_by": {"type": "string", "description": "specify the list by if require to fetch data account,tenant,service_type"}, "cost_with_markup": {"type": "boolean", "description": "specify the value true or false. if require to fetch the data with cost_with_markup discount pass true, if not require to fetch data with cost_with_markup discount pass false value ", "default": false}, "date_filter": {"type": "array", "description": "Date Filters", "items": {"type": "string", "description": "Date Filter to select", "example": "current_month", "enum": ["current_month", "current_month_minus_1", "current_month_minus_2", "current_month_minus_3", "current_month_minus_4", "current_month_minus_5", "current_month_minus_6", "current_month_minus_7", "current_month_minus_8", "current_month_minus_9", "current_month_minus_10", "current_month_minus_11", "current_month_minus_12"], "x-cs-enum-type": "DashboardDateFilter"}}, "currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}, "page": {"type": "integer", "description": "page number.Example 'page':'1'"}, "limit": {"type": "string", "description": "records limits.Example 'limit':'10'"}, "tenant": {"type": "array", "description": "Specify the tenant. Can be retrieved using the List Tenants API.", "items": {"type": "string"}}, "filter": {"description": "Filters vary according to user's need.", "$ref": "#/definitions/CostDashboardSummaryFilters"}, "search": {"type": "string", "description": "Search by account_name wise"}, "ea_info": {"type": "boolean", "description": "For Enterprise Agreement Account. Example: 'ea_info':false", "default": false}, "csp_info": {"type": "boolean", "description": "For CSP Account. Example 'csp_info':false", "default": false}, "by_billing_freq": {"type": "boolean", "description": "billing freq should be set true if the value of month_frequency field is set to last_3_months.Example 'by_billing_freq':false", "default": false}}, "type": "object"}, "CostDashboardSummaryResponse": {"properties": {"total_count": {"type": "integer", "description": "total count of records"}, "page_count": {"type": "integer", "description": "total number of page count"}, "available_currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}, "selected_currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}, "available_period": {"type": "array", "description": "Selected period for data", "items": {"$ref": "#/definitions/CostDashboardSummaryPeriod"}}, "selected_period": {"type": "array", "description": "Selected period for data", "items": {"$ref": "#/definitions/CostDashboardSummaryPeriod"}}, "service_type_usage": {"type": "array", "description": "Service Dashboard summary", "items": {"$ref": "#/definitions/ServiceTypeWiseUsage"}}, "account_usage": {"type": "array", "description": "Account Dashboard summary", "items": {"$ref": "#/definitions/CostDashboardAccount"}}, "tenant_usage": {"type": "array", "description": "Tenant Dashboard Summary", "items": {"$ref": "#/definitions/CostDashboardTenant"}}}, "type": "object"}, "CostDashboardTenant": {"required": ["AWS_cost", "Azure_cost", "GCP_cost", "OCI_cost", "currency", "tenant_id", "tenant_name", "total_cost"], "properties": {"tenant_name": {"type": "string", "description": "tenant name"}, "tenant_id": {"type": "string", "description": "tenant id"}, "total_cost": {"type": "number", "description": "Total cost for the usage"}, "currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}, "AWS_cost": {"type": "number", "description": "Aws cost"}, "Azure_cost": {"type": "number", "description": "Azure cost"}, "GCP_cost": {"type": "number", "description": "GCP cost"}, "OCI_cost": {"type": "number", "description": "OCI cost"}}, "type": "object"}, "CostDetailResponse": {"required": ["account_id", "cost", "service_account_id", "service_account_name"], "properties": {"cost": {"type": "number", "description": "Total Cost"}, "account_id": {"type": "string", "description": "Account Id"}, "service_account_name": {"type": "string", "description": "Service Account Name"}, "service_account_id": {"type": "string", "description": "Service Account Id"}}, "type": "object"}, "CostOptimizationByOptimizationTypeWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"required": ["optimizationType"], "properties": {"optimizationType": {"type": "string", "description": "Type of Optimization", "example": "Usage", "enum": ["Usage", "Rate", "Region", "ResourceType"], "x-cs-enum-type": "OptimizationType"}}, "type": "object"}], "x-cs-type-name": "CostOptimizationByOptimizationTypeWidgetConfiguration"}, "CostOptimizationByOptimizationTypesRequest": {"required": ["currency"], "properties": {"filter": {"$ref": "#/definitions/AccountFilters"}, "currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}}, "type": "object"}, "CostOptimizationByOptimizationTypesResponse": {"properties": {"cost_savings": {"type": "number", "description": "savings of the optimization types"}, "cost_forecast": {"type": "number", "description": "forecast spend of the optimization type"}, "optimization_type": {"type": "string", "description": "optimization type"}, "cloud_account": {"type": "string", "description": "cloud account id"}, "cloud_provider": {"type": "string", "description": "Cloud Provider for the cloud account", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "region": {"type": "string", "description": "region"}, "resource_name": {"type": "string", "description": "resource name"}, "resource_type": {"type": "string", "description": "resource type"}, "resource_category": {"type": "string", "description": "resource category"}, "optimization_name": {"type": "string", "description": "optimization name"}}, "type": "object"}, "CostOptimizationCloudAccTypeResponse": {"required": ["data", "message", "status"], "properties": {"status": {"type": "string", "description": "Response status on cloud account types"}, "message": {"type": "string", "description": "Listing Cloud account types retrieved successfully"}, "data": {"type": "object", "description": "cloud account type and cloud account name"}}, "type": "object"}, "CostOptimizationCloudAccountSummaryRequest": {"required": ["cloud_account_id", "cloud_account_type", "currency"], "properties": {"page": {"type": "integer", "description": "page number.Example 'page': 1"}, "limit": {"type": "integer", "description": "records limits.Example 'limit': 10"}, "currency": {"type": "string", "description": "currency type"}, "cloud_account_type": {"type": "array", "description": "Cloud account type", "items": {"type": "string"}}, "cloud_account_id": {"type": "array", "description": "Cloud account id", "items": {"type": "string"}}}, "type": "object"}, "CostOptimizationCloudAccountSummaryResponse": {"required": ["message", "overall_savings_percentage", "page_count", "potential_cost_savings_total", "potential_cost_savings_total_info", "status", "total_count"], "properties": {"status": {"type": "string", "description": "Response status on Account Summary"}, "message": {"type": "string", "description": "Account Summary"}, "total_count": {"type": "integer", "description": "Total Count"}, "page_count": {"type": "integer", "description": "Page Count"}, "overall_savings_percentage": {"type": "string", "description": "Total Saving Percentage"}, "potential_cost_savings_total_info": {"type": "string", "description": "Potential cost savings total info"}, "potential_cost_savings_total": {"type": "string", "description": "Potential cost savings total"}, "account_summary": {"type": "array", "items": {"$ref": "#/definitions/AccountSummary"}}}, "type": "object"}, "CostOptimizationCloudAccountTypeRequest": {"required": ["cloud_account_id", "cloud_account_type", "currency"], "properties": {"currency": {"type": "string", "description": "currency type"}, "cloud_account_type": {"type": "array", "description": "Cloud account type", "items": {"type": "string"}}, "cloud_account_id": {"type": "array", "description": "Cloud account id", "items": {"type": "string"}}}, "type": "object"}, "CostOptimizationScheduleRecommendationResponse": {"required": ["hourly_recommendations", "impacting_resources", "potential_savings", "total_recommendations", "weekly_recommendations"], "properties": {"hourly_recommendations": {"type": "integer", "description": "Hourly Recommendations"}, "total_recommendations": {"type": "integer", "description": "TotalRecommendations"}, "weekly_recommendations": {"type": "integer", "description": "Weekly Recommendations"}, "impacting_resources": {"type": "integer", "description": "Resources Impacted"}, "potential_savings": {"type": "string", "description": "Potential Savings"}}, "type": "object"}, "CostOptimizationTenResponse": {"required": ["message", "status", "tenant"], "properties": {"status": {"type": "string", "description": "Response status on tenant details"}, "message": {"type": "string", "description": "Listing tenants data retrieved successfully"}, "tenant": {"type": "object", "description": "tenant details"}}, "type": "object"}, "CostOptimizationTrendRequest": {"required": ["currency"], "properties": {"filter": {"$ref": "#/definitions/AccountFilters"}, "currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}}, "type": "object"}, "CostOptimizationTrendResponse": {"properties": {"cloud": {"type": "string", "description": "Cloud Provider", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "cost_forecast": {"type": "number"}, "potential_forecasted_cost": {"type": "number"}, "potential_savings": {"type": "number"}, "date": {"type": "string", "format": "date-time"}}, "type": "object"}, "CostOptimizationTrendWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "CostOptimizationTrendWidgetConfiguration"}, "CostOptimizationViewRecommendationRequest": {"required": ["cloud_account_id", "currency"], "properties": {"page": {"type": "integer", "description": "page number.Example 'page': 1"}, "limit": {"type": "integer", "description": "records limits.Example 'limit': 10"}, "cloud_account_id": {"type": "string", "description": "Cloud account id"}, "currency": {"type": "string", "description": "currency type"}}, "type": "object"}, "CostOptimizationViewRecommendationResponse": {"required": ["message", "overall_savings_percentage", "page_count", "potential_cost_savings_total", "potential_cost_savings_total_info", "status", "total_count"], "properties": {"status": {"type": "string", "description": "Response status on policy recommendation view"}, "message": {"type": "string", "description": "Policy Recommendation View"}, "total_count": {"type": "integer", "description": "Total Count"}, "page_count": {"type": "integer", "description": "Page Count"}, "overall_savings_percentage": {"type": "string", "description": "Total Saving Percentage"}, "potential_cost_savings_total_info": {"type": "string", "description": "Potential cost savings total information"}, "potential_cost_savings_total": {"type": "string", "description": "Potential cost savings total"}, "recommendation_data": {"type": "array", "items": {"$ref": "#/definitions/RecommendationView"}}}, "type": "object"}, "CostPostureFilter": {"required": ["aws", "azure", "gcp", "oci"], "properties": {"oci": {"type": "array", "items": {"type": "string"}}, "aws": {"type": "array", "items": {"type": "string"}}, "azure": {"type": "array", "items": {"type": "string"}}, "gcp": {"type": "array", "items": {"type": "string"}}}, "type": "object"}, "CostPostureFilterReq": {"required": ["dashboard", "filter_details"], "properties": {"filter_details": {"type": "string", "description": "specify filter details for fetching cost dashboard filter details.allowed values true"}, "dashboard": {"type": "string", "description": "specify dashboard type for fetching cost dashboard filter details.allowed values cost"}}, "type": "object"}, "CostPostureFilterResponse": {"required": ["scopes", "service_providers", "tenants"], "properties": {"scopes": {"type": "array", "description": "list of scope details", "items": {"type": "string"}}, "tenants": {"type": "array", "description": "List of tenants details for cost dashboard", "items": {"type": "string"}}, "service_providers": {"type": "array", "description": "list of service providers", "items": {"$ref": "#/definitions/CostPostureFilter"}}}, "type": "object"}, "CostProcessingProgress": {"properties": {"total_records_processed": {"type": "integer", "description": "Total number of records processed from all files"}}, "type": "object"}, "CostSavings": {"required": ["charge_unit", "cost", "currency_code"], "properties": {"charge_unit": {"type": "string", "description": "Charge Unit"}, "cost": {"type": "integer", "description": "Total cost"}, "currency_code": {"type": "string", "description": "Currency code"}}, "type": "object"}, "CostSavingsFilterValue": {"properties": {"tenant": {"type": "array", "description": "Specify the tenant ID. This is a unique ID  and can be retrieved using the List Tenants API.", "items": {"type": "string"}}, "scope": {"type": "array", "description": "Define the Scope. Example: 'scope': 'account'", "items": {"type": "string"}}, "account_type": {"type": "array", "description": "account type.Example 'account_type': 'master_account','linked_account','Pay_as_You_Go','Azure_CSP-InDirect','Enterprise','billing_account','linked_project_account'", "items": {"type": "string"}}, "cloud": {"type": "array", "description": "Define the Cloud. Example: 'cloud': 'AWS'/'GCP'/'Azure'", "items": {"type": "string"}}, "potential_cost_saving": {"description": "Cost saved based on recommendation suggested", "$ref": "#/definitions/RangeValue"}}, "type": "object"}, "CostSavingsRecommendationsResponse": {"required": ["currency_selected", "saving_wise_summary"], "properties": {"currency_selected": {"type": "string", "description": "Currency Selected"}, "saving_wise_summary": {"description": "data filter selected if any", "$ref": "#/definitions/SavingsWiseSummary"}}, "type": "object"}, "CostServiceFilterLabel": {"properties": {"label": {"type": "string", "description": "Label"}, "identifier": {"type": "string", "description": "Identifier"}}, "type": "object"}, "CostServiceFilterRequestModel": {"required": ["cloud_name"], "properties": {"cloud_name": {"type": "string", "description": "Cloud Provider to select", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}}, "type": "object"}, "CostServiceFilterResponseModel": {"required": ["labels"], "properties": {"labels": {"type": "array", "description": "Service Filters for Cost Data", "items": {"$ref": "#/definitions/CostServiceFilterLabel"}}}, "type": "object"}, "CostSettingsModel": {"properties": {"discount_applicable": {"type": "boolean", "default": true}, "discount_file_path": {"type": "string", "description": "Discount csv file path uploaded"}, "discount_file_name": {"type": "string", "description": "Discount file name"}}, "type": "object"}, "CostSpendByBillingTypeRequest": {"allOf": [{"$ref": "#/definitions/CommonCostRequest"}, {"properties": {}, "type": "object"}]}, "CostSpendByBillingTypeResponse": {"properties": {"cloud": {"type": "string", "description": "Cloud Provider for the accounts", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "cost_spend": {"type": "number"}, "billing_type": {"type": "string"}, "product_category": {"type": "string"}}, "type": "object"}, "CostSpendByBillingTypeWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "CostSpendByBillingTypeWidgetConfiguration"}, "CostSpendByCloudAccountRequest": {"allOf": [{"$ref": "#/definitions/CommonCostRequest"}, {"properties": {}, "type": "object"}]}, "CostSpendByCloudAccountResponse": {"properties": {"cloud": {"type": "string", "description": "Cloud Provider for the accounts", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "cloud_account": {"type": "string"}, "cost_spend": {"type": "number"}}, "type": "object"}, "CostSpendByCloudAccountWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "CostSpendByCloudAccountWidgetConfiguration"}, "CostSpendByCloudRequest": {"allOf": [{"$ref": "#/definitions/CommonCostRequest"}, {"properties": {}, "type": "object"}]}, "CostSpendByCloudResourceCategoryRequest": {"allOf": [{"$ref": "#/definitions/CommonCostRequest"}, {"properties": {}, "type": "object"}]}, "CostSpendByCloudResourceCategoryResponse": {"properties": {"cloud": {"type": "string", "description": "Cloud Provider for the resource", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "resource_type": {"type": "string"}, "resource_category": {"type": "string"}, "cost_spend": {"type": "number"}, "total_resources": {"type": "integer"}}, "type": "object"}, "CostSpendByCloudResourceWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "CostSpendByCloudResourceWidgetConfiguration"}, "CostSpendByCloudResponse": {"properties": {"cloud": {"type": "string", "description": "Cloud Provider", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "cost_spend": {"type": "number"}}, "type": "object"}, "CostSpendByCloudTenantRequest": {"allOf": [{"$ref": "#/definitions/CommonCostRequest"}, {"properties": {}, "type": "object"}]}, "CostSpendByCloudTenantResponse": {"properties": {"cloud": {"type": "string", "description": "Cloud Provider for the cloud account", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "tenant": {"type": "string"}, "cost_spend": {"type": "number"}, "total_cloud_accounts": {"type": "integer"}}, "type": "object"}, "CostSpendByCloudTenantWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "CostSpendByCloudTenantWidgetConfiguration"}, "CostSpendByCloudWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "CostSpendByCloudWidgetConfiguration"}, "CostSpendByRegionRequest": {"allOf": [{"$ref": "#/definitions/CommonCostRequest"}, {"properties": {}, "type": "object"}]}, "CostSpendByRegionResponse": {"properties": {"region": {"type": "string", "description": "Region of the cloud"}, "cost_spend": {"type": "number", "description": "Cost Spend for the clouds"}, "cloud": {"type": "string", "description": "Cloud Provider", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}}, "type": "object"}, "CostSpendByRegionWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "CostSpendByRegionWidgetConfiguration"}, "CostSpendByTagLevelWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"required": ["tagLevelType"], "properties": {"tagLevelType": {"type": "string", "description": "Type of Tag Level", "example": "Overall", "enum": ["Overall", "Cloud", "CloudAccount", "ProductCategory", "Region", "Tenant"], "x-cs-enum-type": "TagLevelType"}}, "type": "object"}], "x-cs-type-name": "CostSpendByTagLevelWidgetConfiguration"}, "CostSummaryDataReqServiceType": {"required": ["currency", "date_filter", "tenant_id"], "properties": {"cost_with_markup": {"type": "boolean", "description": "specify the value true or false. if require to fetch the data with cost_with_markup discount pass true, if not require to fetch data with cost_with_markup discount pass false value "}, "date_filter": {"type": "array", "description": "Date Filters", "items": {"type": "string", "description": "Date Filter to select", "example": "current_month", "enum": ["current_month", "current_month_minus_1", "current_month_minus_2", "current_month_minus_3", "current_month_minus_4", "current_month_minus_5", "current_month_minus_6", "current_month_minus_7", "current_month_minus_8", "current_month_minus_9", "current_month_minus_10", "current_month_minus_11", "current_month_minus_12"], "x-cs-enum-type": "DashboardDateFilter"}}, "currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}, "tenant_id": {"type": "array", "description": "Specify the tenant. Can be retrieved using the List Tenants API.", "items": {"type": "string"}}, "by_billing_freq": {"type": "boolean", "description": "billing freq should be set true if the value of month_frequency field is set to last_3_months. Example 'by_billing_freq':false", "default": false}}, "type": "object"}, "CostSummaryDataResponseCurrentAndLast3Months": {"properties": {"parent_account": {"type": "string", "description": "parent account"}, "tenant_name": {"type": "string", "description": "tenant name"}, "last_updated": {"type": "string", "description": "cost data updated time time in UTC"}, "cloud_account_id": {"type": "string", "description": "cloud account id"}, "account_type": {"type": "string", "description": "what is the type of cloud account"}, "total_cost": {"type": "number", "description": "Total cost for the usage"}, "currency": {"type": "string", "description": "currency for the cost"}, "cloud_type": {"type": "string", "description": "cloud type can be Azure, aws, GCP etc"}, "scope": {"type": "string", "description": "scope of cloud account"}, "tenant_id": {"type": "string", "description": "Tenant id"}, "account_name": {"type": "string", "description": "cloud account name with which it is on boarded"}, "cloud_provider_unique_id": {"type": "string", "description": "Unique ID of cloud provider"}, "enrollment_id": {"type": "string", "description": "Enrollment ID"}, "month": {"type": "object", "description": "month wise usage"}, "potential_cost_escalation": {"type": "object", "description": "cost escalation percentage w.r.t budget"}, "projected_cost": {"type": "number", "description": "forecasted cost"}, "projected_cost_saving": {"type": "number", "description": "projected cost that can be saved"}, "total_cost_discounted": {"type": "number", "description": "Total cost that is being discounted"}, "departments_count": {"type": "integer", "description": "Departments Count"}, "accounts_count": {"type": "integer", "description": "Accounts Count"}, "subscription_count": {"type": "integer", "description": "Subscription Count"}, "customer_count": {"type": "integer", "description": "Customer Count"}, "budget": {"type": "object", "description": "set budget for the account"}}, "type": "object"}, "CostSummaryDataResponseServiceType": {"required": ["total_cost"], "properties": {"total_cost": {"type": "number", "description": "Total cost for the usage"}, "service_type_usage": {"type": "array", "description": "Service type usage", "items": {"$ref": "#/definitions/ServiceTypeWiseUsage"}}}, "type": "object"}, "CostSummaryDataResponseTenantForCurrentAndLast3Months": {"required": ["date_filter_selected", "page_count", "tenant_wise_usage", "total_count"], "properties": {"date_filter_selected": {"type": "string", "description": "data filter selected if any"}, "total_count": {"type": "integer", "description": "total count of records"}, "page_count": {"type": "integer", "description": "Page count"}, "tenant_wise_usage": {"type": "array", "description": "Tenant wise total cost", "items": {"$ref": "#/definitions/TenantWiseUsageForCurrentAndLast3Months"}}}, "type": "object"}, "CostSummaryEAOrCSPReqModel": {"required": ["cloud_account_id", "currency", "identifier", "limit", "page"], "properties": {"page": {"type": "integer", "description": "page number. Example 'page':'1'"}, "limit": {"type": "string", "description": "records limits. Example 'limit':'10'"}, "identifier": {"type": "string", "description": "Identifier for EA - Cumulative, Departments, Accounts. Identifier for CSP - Customers, Subscriptions. Example 'identifier':'Cumulative'", "example": "Cumulative", "enum": ["Cumulative", "Departments", "Accounts", "Customers", "Subscriptions"], "x-cs-enum-type": "CostSummaryVisibilityIdentifier"}, "cloud_account_id": {"type": "string", "description": "Cloud Account ID to fetch Enterprise Agreement details. Example 'cloud_account_id':'60366d50c0ce4758eec77e71'"}, "currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}, "filter": {"description": "Filters vary according to user's need.", "$ref": "#/definitions/FiltersReqModel"}, "ea_info": {"type": "boolean", "description": "For Enterprise Agreement Account.Example 'ea_info':false", "default": false}, "csp_info": {"type": "boolean", "description": "For CSP Account.Example 'csp_info': false", "default": false}, "date_filter": {"type": "array", "description": "Date Filters", "items": {"type": "string", "description": "Date Filter to select", "example": "current_month", "enum": ["current_month", "current_month_minus_1", "current_month_minus_2", "current_month_minus_3", "current_month_minus_4", "current_month_minus_5", "current_month_minus_6", "current_month_minus_7", "current_month_minus_8", "current_month_minus_9", "current_month_minus_10", "current_month_minus_11", "current_month_minus_12"], "x-cs-enum-type": "DashboardDateFilter"}}, "tenant_id": {"type": "array", "description": "Specify the tenant. Can be retrieved using the List Tenants API.", "items": {"type": "string"}}}, "type": "object"}, "CostSummaryEAOrCSPVisibilityReqModel": {"required": ["cloud_account_id", "identifier"], "properties": {"identifier": {"type": "string", "description": "Identifier for EA - Cumulative, Departments, Accounts\nIdentifier for CSP - Customers, Cumulative.\nExample: 'identifier':'Cumulative'", "example": "Cumulative", "enum": ["Cumulative", "Departments", "Accounts", "Customers", "Subscriptions"], "x-cs-enum-type": "CostSummaryVisibilityIdentifier"}, "cloud_account_id": {"type": "string", "description": "Cloud Account ID to fetch Enterprise Agreement details. Example: 'cloud_account_id':'60366d50c0ce4758eec77e71'"}, "currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}, "ea_info": {"type": "boolean", "description": "For Enterprise Agreement Account. Example: 'ea_info':false", "default": false}, "csp_info": {"type": "boolean", "description": "For CSP Account.Example 'csp_info': false", "default": false}, "date_filter": {"type": "array", "description": "Date Filters", "items": {"type": "string", "description": "Date Filter to select", "example": "current_month", "enum": ["current_month", "current_month_minus_1", "current_month_minus_2", "current_month_minus_3", "current_month_minus_4", "current_month_minus_5", "current_month_minus_6", "current_month_minus_7", "current_month_minus_8", "current_month_minus_9", "current_month_minus_10", "current_month_minus_11", "current_month_minus_12"], "x-cs-enum-type": "DashboardDateFilter"}}}, "type": "object"}, "CostSummaryIdentifierEAOrCSPResponse": {"required": ["account_wise_usage", "date_filter_selected", "page_count", "total_count"], "properties": {"date_filter_selected": {"type": "array", "description": "data filter selected if any", "items": {"type": "string"}}, "total_count": {"type": "integer", "description": "total count of records"}, "page_count": {"type": "integer", "description": "Page count"}, "account_wise_usage": {"type": "array", "description": "Account wise total cost", "items": {"$ref": "#/definitions/IdentifierEAorCSP"}}}, "type": "object"}, "CostSummaryReqModel": {"required": ["currency", "date_filter", "filter", "limit", "page"], "properties": {"page": {"type": "integer", "description": "page number.Example 'page':'1'"}, "limit": {"type": "string", "description": "records limits.Example 'limit':'10'"}, "filter": {"description": "filters as per user need", "$ref": "#/definitions/FiltersReqModel"}, "currency": {"type": "string", "description": "Currency"}, "search": {"type": "string", "description": "Search by account_name wise"}, "ea_info": {"type": "boolean", "description": "For Enterprise Agreement Account. Example: 'ea_info':false", "default": false}, "csp_info": {"type": "boolean", "description": "For CSP Account.Example 'csp_info':false", "default": false}, "date_filter": {"type": "array", "description": "Date Filters", "items": {"type": "string", "description": "Date Filter to select", "example": "current_month", "enum": ["current_month", "current_month_minus_1", "current_month_minus_2", "current_month_minus_3", "current_month_minus_4", "current_month_minus_5", "current_month_minus_6", "current_month_minus_7", "current_month_minus_8", "current_month_minus_9", "current_month_minus_10", "current_month_minus_11", "current_month_minus_12"], "x-cs-enum-type": "DashboardDateFilter"}}, "tenant_id": {"type": "array", "description": "Specify the tenant. Can be retrieved using the List Tenants API.", "items": {"type": "string"}}, "by_billing_freq": {"type": "boolean", "description": "billing freq should be set true if the value of month_frequency field is set to last_3_months.Example 'by_billing_freq':false", "default": false}}, "type": "object"}, "CostSummaryReqModelTenant": {"required": ["currency", "date_filter", "filter", "limit", "page"], "properties": {"page": {"type": "integer", "description": "page number.Example 'page':'1'"}, "limit": {"type": "string", "description": "records limits.Example 'limit':'10'"}, "filter": {"description": "Filters vary according to user's need.", "$ref": "#/definitions/FiltersReqModel"}, "currency": {"type": "string", "description": "Currency. Example 'currency':'USD'"}, "date_filter": {"type": "array", "description": "Date Filters", "items": {"type": "string", "description": "Date Filter to select", "example": "current_month", "enum": ["current_month", "current_month_minus_1", "current_month_minus_2", "current_month_minus_3", "current_month_minus_4", "current_month_minus_5", "current_month_minus_6", "current_month_minus_7", "current_month_minus_8", "current_month_minus_9", "current_month_minus_10", "current_month_minus_11", "current_month_minus_12"], "x-cs-enum-type": "DashboardDateFilter"}}, "tenant_id": {"type": "array", "description": "Specify the tenant. Can be retrieved using the List Tenants API.", "items": {"type": "string"}}, "by_billing_freq": {"type": "boolean", "description": "billing freq should be set true if the value of month_frequency field is set to last_3_months"}}, "type": "object"}, "CostSummaryResponseAccountForCurrentAndLast3Months": {"required": ["account_wise_usage", "date_filter_selected", "page_count", "total_count"], "properties": {"date_filter_selected": {"type": "array", "description": "data filter selected if any", "items": {"type": "string"}}, "total_count": {"type": "integer", "description": "total count of records"}, "page_count": {"type": "integer", "description": "Page count"}, "account_wise_usage": {"type": "array", "description": "Account wise total cost", "items": {"$ref": "#/definitions/CostSummaryDataResponseCurrentAndLast3Months"}}}, "type": "object"}, "CostSummaryWidgetConfigurationModel": {"allOf": [{"$ref": "#/definitions/BaseDataWidgetConfigurationModel"}, {"required": ["summaryType"], "properties": {"summaryType": {"type": "string", "description": "Type of cost summary", "example": "Total", "enum": ["Total", "TopCloud", "TopTenant", "TopRegion", "CostOptimizationPotentialSavings", "CostOptimizationImpactedResources", "CostOptimizationCloudAccounts", "CostOptimizationRegions", "TotalCostImpactByBilling", "TotalAnomaliesByBilling", "TotalCostImpactByEvent", "TotalAnomaliesByEvent"], "x-cs-enum-type": "CostSummaryType"}}, "type": "object"}], "x-cs-type-name": "CostSummaryWidgetConfigurationModel"}, "CostTag": {"properties": {"key": {"type": "string", "description": "Tag key"}, "values": {"type": "array", "description": "Values for the tag key", "items": {"type": "string"}}}, "type": "object"}, "CostTagBatchResponse": {"properties": {"results": {"type": "object", "description": "Map from identifier to response model", "additionalProperties": {"$ref": "#/definitions/CostTag"}}}, "type": "object"}, "CostTagListRequest": {"properties": {"list_context": {"description": "Optional list context", "$ref": "#/definitions/ListContext"}, "sort": {"type": "array", "description": "Sort criteria", "items": {"$ref": "#/definitions/CostTagSortCriteria"}}, "filters": {"description": "Filters for the request", "$ref": "#/definitions/AccountFilters"}}, "type": "object"}, "CostTagReportReq": {"required": ["cloud_account_id", "tag_key", "tenant_id"], "properties": {"tag_key": {"type": "string", "description": "Provide tag key which is associated with any of the resource in cloud account"}, "cloud_account_id": {"type": "string", "description": "Specify the Cloud Account ID. This can be fetched from List CloudAccounts API call."}, "tenant_id": {"type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}}, "type": "object"}, "CostTagReportRes": {"required": ["data", "message", "status"], "properties": {"status": {"type": "string", "description": "status response"}, "message": {"type": "string", "description": "message response"}, "data": {"type": "object", "description": "cost tag data"}}, "type": "object"}, "CostTagSortCriteria": {"required": ["column"], "properties": {"column": {"type": "string", "example": "Key", "enum": ["Key"], "x-cs-enum-type": "CostTagSortColumn"}, "ascending": {"type": "boolean"}}, "type": "object"}, "CostTrendByCloudRequest": {"allOf": [{"$ref": "#/definitions/CommonCostRequest"}, {"required": ["granularity"], "properties": {"granularity": {"type": "string", "description": "Granularity to aggregate data", "example": "day", "enum": ["day", "month", "year"], "x-cs-enum-type": "TrendGranularity"}}, "type": "object"}]}, "CostTrendByCloudResponse": {"properties": {"cloud": {"type": "string", "description": "Cloud Provider for the cloud account", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "cost_spend": {"type": "number", "description": "Cost Spend for the clouds"}, "date": {"type": "string", "format": "date", "description": "Month in which the cost is spent"}}, "type": "object"}, "CostTrendByCloudWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"required": ["granularity"], "properties": {"granularity": {"type": "string", "description": "Granularity to aggregate data", "example": "day", "enum": ["day", "month", "year"], "x-cs-enum-type": "TrendGranularity"}}, "type": "object"}], "x-cs-type-name": "CostTrendByCloudWidgetConfiguration"}, "CostTrendReportReq": {"required": ["cloud_account_id", "tenant_id"], "properties": {"cloud_account_id": {"type": "string", "description": "Specify the Cloud Account ID. This can be fetched from List CloudAccounts API call."}, "tenant_id": {"type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}}, "type": "object"}, "CostTrendReportRes": {"required": ["data", "message", "status"], "properties": {"status": {"type": "string", "description": "status response"}, "message": {"type": "string", "description": "message response"}, "data": {"type": "object", "description": "cost trend data"}}, "type": "object"}, "CostVisibilityEaOrCspViewResponse": {"required": ["identifier", "value"], "properties": {"identifier": {"type": "string", "description": "Identifier for EA or CSP Of Visibility"}, "value": {"type": "object", "description": "usage details"}}, "type": "object"}, "CostWiseSummary": {"required": ["AWS", "Azure", "GCP", "total_cost"], "properties": {"total_cost": {"type": "number", "description": "Total cost saved"}, "Azure": {"type": "number", "description": "Cost saved for Azure based on recommendation"}, "AWS": {"type": "number", "description": "Cost saved for AWS based on recommendation"}, "GCP": {"type": "number", "description": "Cost saved for GCP based on recommendation"}}, "type": "object"}, "CountDetailsDataModel": {"required": ["cloud_account", "service"], "properties": {"cloud_account": {"type": "array", "description": "Id's for the cloud account", "items": {"$ref": "#/definitions/CloudAccountDetail"}}, "service": {"type": "string", "description": "Cloud service name", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "default_value": {"type": "boolean", "description": "Default value [by default: false]\nIf default = true, displays count only for that particular default_resource/default_category \nIf default = false, displays count for all the category/resource except that mentioned in default_resource/default_category.", "default": false}, "category": {"type": "string", "description": "Category value [by default: Compute]\n Give this value if the value of identifier is resource.\nDisplays all the resources for the particular category provided."}, "default_resource": {"type": "string", "description": "Default resource [by default: based upon Category]\nGive this value if the value of identifier is resource.\nDisplays count for resource."}, "default_category": {"type": "string", "description": "Default category [by default: Compute]\n Give this value if the value of identifier is category.\nDisplays count for category."}}, "type": "object"}, "CountUserNotificationsResponse": {"required": ["messages", "notifications"], "properties": {"notifications": {"type": "integer", "description": "Number of notifications"}, "messages": {"type": "integer", "description": "Number of messages"}}, "type": "object"}, "CreateActivityRequestModel": {"required": ["operations", "resource", "resource_type", "scope", "service"], "properties": {"service": {"type": "string", "description": "Service name associated with the activity", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "resource_type": {"type": "string", "description": "Specify the resource_type, This can be retrieved using the Get Operations Resource Details API"}, "resource": {"type": "string", "description": "Specify the resource, This can be retrieved using the Get Operations Resource Details API"}, "operations": {"type": "array", "description": "List of operations to be configured as activities", "items": {"type": "string"}}, "status": {"type": "string", "description": "Status of the activity after creation", "default": "active", "example": "active", "enum": ["active", "inactive"], "x-cs-enum-type": "ActivityStatus"}, "scope": {"type": "string", "description": "Scope of the activity to be configured", "example": "account", "enum": ["account", "tenant", "cloud_account"], "x-cs-enum-type": "ActivityScope"}, "cloud_accounts": {"type": "array", "description": "Specify the cloud accounts ids only when the scope is selected as cloud_account. ID can be obtained from cloud_account_id of ActivityConfigurationSummary", "items": {"type": "string"}}}, "type": "object"}, "CreateActivityResponseModel": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Create Activity Response"}}, "type": "object"}, "CreateAlertConfigurationRequest": {"properties": {"create_new": {"description": "Provide this request, when the configure_type is selected as create_new", "$ref": "#/definitions/CreateNew"}, "existing": {"type": "array", "description": "Provide this request, when the configure_type is selected as existing and this existing configure is supported for only Azure.\n                                                                                           The request body should be like:\n                                                                                          [{\n                                                                                              \"resource_group\": \"resource_group1\",\n                                                                                              \"actiongroup_name\": \"action_group_name1\"\n                                                                                          },\n                                                                                          {\n                                                                                              \"resource_group\": \"resource_group2\",\n                                                                                              \"actiongroup_name\": \"action_group_name2\"\n                                                                                          }]", "items": {"$ref": "#/definitions/Existing"}}}, "type": "object"}, "CreateAlertConfigurationResponse": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Message of create alert configuration"}}, "type": "object"}, "CreateApplicationGroupRequest": {"required": ["cloud", "cloud_account_details", "tag_list"], "properties": {"name": {"type": "string", "description": "Name of the Application group. Please mention name or app_code"}, "app_code": {"type": "string", "description": "Application group code.Please mention name or app_code"}, "description": {"type": "string", "description": "Description for the Application group"}, "tag_list": {"type": "object", "description": "Tags associated with application"}, "owner": {"type": "string", "description": "Name of the owner."}, "cloud_account_details": {"type": "object", "description": "Cloud account associated with application group. For example:\n\"cloud_account_details\":{\n\"612cce7aafb269b0220b4439\":{\"resourcegroup/regions\":[{\n\"id\":\"us-east-1\",\"name\":\"US East (N. Virginia)\",\n\"type\": \"aws_standard\"}]}}"}, "cloud": {"type": "array", "description": "Name of the Cloud.Allowed Values are - AWS, Azure, GCP, Azure_EA", "items": {"type": "string"}}}, "type": "object"}, "CreateApplicationsRequest": {"required": ["cloud", "cloud_account_details", "tag_list"], "properties": {"name": {"type": "string", "description": "Name of the Application.Please mention name or app_code"}, "app_code": {"type": "string", "description": "Application code.Please mention name or app_code"}, "description": {"type": "string", "description": "Description for the Application"}, "tag_list": {"type": "object", "description": "Tags. For example: tag_list:{\"tag\":\"123\"}"}, "environment": {"type": "string", "description": "Environment Id.Can be fetched from get api call of environments"}, "cost_center": {"type": "string", "description": "Cost Center Id.Can be fetched from get api call of cost center"}, "application_group": {"type": "string", "description": "Application Group Id.Can be fetched from get api call of application group"}, "dns": {"type": "string", "description": "Name of dns"}, "owner": {"type": "string", "description": "Name of owner"}, "cloud": {"type": "array", "description": "Name of the Cloud.Allowed Values are - AWS, Azure, GCP, Azure_EA", "items": {"type": "string"}}, "cloud_account_details": {"type": "object", "description": "Cloud account associated with application. For example:\n\"cloud_account_details\":{\n\"612cce7aafb269b0220b4439\":{\"resourcegroup/regions\":[{\n\"id\":\"us-east-1\",\"name\":\"US East (N. Virginia)\",\n\"type\": \"aws_standard\"}]}}"}}, "type": "object"}, "CreateBackupReport": {"required": ["cloud_account_id", "span", "tenant_id"], "properties": {"span": {"type": "string", "description": "span name", "example": "PreviousMonth", "enum": ["PreviousMonth", "PreviousTwoMonths", "CurrentMonth"], "x-cs-enum-type": "BackupReportSpan"}, "cloud_account_id": {"type": "string", "description": "Specify the Cloud Account ID. This can be fetched from List CloudAccounts API call."}, "tenant_id": {"type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}}, "type": "object"}, "CreateBlueprintDetails": {"required": ["blueprint_id", "message", "status"], "properties": {"status": {"type": "string", "description": "Status of the create call for the blueprint"}, "message": {"type": "string", "description": "Message of the create call for the blueprint"}, "blueprint_id": {"type": "string", "description": "Blueprint ID"}}, "type": "object"}, "CreateBlueprintRequest": {"required": ["name", "resources", "scope"], "properties": {"name": {"type": "string", "description": "Blueprint Name"}, "resources": {"type": "array", "description": "Resource Details", "items": {"$ref": "#/definitions/ResourceRequest"}}, "scope": {"type": "string", "description": "Scope of the Blueprint", "example": "private", "enum": ["private", "tenant", "global", "account"], "x-cs-enum-type": "BlueprintScope"}}, "type": "object"}, "CreateCostCenterRequest": {"required": ["cloud", "cloud_account_details", "tag_list"], "properties": {"name": {"type": "string", "description": "Name of the Cost Center."}, "app_code": {"type": "string", "description": "Cost Center code. Please mention name or code"}, "description": {"type": "string", "description": "Description for the Cost Center"}, "tag_list": {"type": "object", "description": "Tags associated with cost center"}, "owner": {"type": "string", "description": "Name of the owner."}, "cloud": {"type": "array", "description": "Name of the Cloud. Allowed Values are - AWS, Azure, GCP, Azure_EA", "items": {"type": "string"}}, "cloud_account_details": {"type": "object", "description": "Cloud account. For example:\n\"cloud_account_details\":{\n\"603735c7c0ce4758eec78082\":{\"regions\":[{\n\"id\":\"us-east-1\",\"name\":\"US East (N. Virginia)\",\n\"type\": \"aws_standard\"}]}}"}}, "type": "object"}, "CreateEnvironmentRequest": {"required": ["cloud", "cloud_account_details", "tag_list"], "properties": {"name": {"type": "string", "description": "Name of the Environment. Please mention name or env_code."}, "app_code": {"type": "string", "description": "Environment code. Please mention name or code"}, "description": {"type": "string", "description": "Description for the Environment"}, "tag_list": {"type": "object", "description": "Tags associated with environment"}, "cloud": {"type": "array", "description": "Name of the Cloud. Allowed Values are - AWS, Azure, GCP, Azure_EA", "items": {"type": "string"}}, "cloud_account_details": {"type": "object", "description": "Cloud account. For example:\n\"cloud_account_details\":{\n\"603735c7c0ce4758eec78082\":{\"regions\":[{\n\"id\":\"us-east-1\",\"name\":\"US East (N. Virginia)\",\ntype\": \"aws_standard\"}]}}"}}, "type": "object"}, "CreateLockConfigRuleResponse": {"required": ["config_rule_id"], "properties": {"config_rule_id": {"type": "string", "description": "Config rule id"}}, "type": "object"}, "CreateLockFilterRequest": {"properties": {"regions": {"type": "array", "description": "Displays the list of regions", "items": {"$ref": "#/definitions/ScopeFilterRegion"}}, "resources": {"type": "array", "description": "Displays the list of resources", "items": {"type": "string"}}, "resource_groups": {"type": "array", "description": "Displays the list of resource groups", "items": {"$ref": "#/definitions/ScopeResourceGroup"}}, "tags": {"type": "array", "description": "applied tags for lock", "items": {"type": "object"}}, "zone": {"type": "array", "description": "List zone of cloud account", "items": {"$ref": "#/definitions/ScopeFilterZone"}}}, "type": "object"}, "CreateMarkupRequest": {"allOf": [{"$ref": "#/definitions/MarkupDetails"}, {"properties": {}, "type": "object"}]}, "CreateMarkupResponse": {"properties": {"name": {"type": "string", "description": "Created Rule name"}}, "type": "object"}, "CreateMasterAccountRequest": {"required": ["name", "tenant_name"], "properties": {"name": {"type": "string", "description": "Name of the master account. It can be only alphanumeric"}, "is_full_access": {"type": "boolean", "default": false}, "subscription_info": {"description": "Subscription Info", "$ref": "#/definitions/SubscriptionModel"}, "tenant_name": {"type": "string", "description": "Tenant name. It can be only alphanumeric"}, "crm_id": {"type": "string", "description": "CRM id"}, "product_bundles": {"type": "array", "description": "Product Bundle List", "items": {"$ref": "#/definitions/ProductBundleModel"}}, "cost_settings": {"description": "Discount config info", "$ref": "#/definitions/CostSettingsModel"}, "notification_settings": {"description": "Notification settings", "$ref": "#/definitions/NotificationSettingModel"}, "hierarchy_level": {"type": "string", "description": "Hierarchy level"}, "supported_bundles": {"type": "array", "description": "Supported Bundle List", "items": {"type": "string"}}, "parent_master_account_id": {"type": "string", "description": "ID of the parent master account."}, "require_access_key": {"type": "boolean", "description": "Flag to set API keys generation is allowed or not for the users of this master account."}}, "type": "object"}, "CreateMasterAccountResponse": {"properties": {"id": {"type": "string", "description": "Account master id"}, "status": {"type": "string", "description": "Account master status"}, "tenant_id": {"type": "string", "description": "Tenant id"}, "role_info": {"$ref": "#/definitions/RoleInfoModel"}}, "type": "object"}, "CreateNew": {"properties": {"resource_group": {"type": "array", "description": "Provide the resource groups, if service selected as Azure and configure_type as create_new", "items": {"type": "string"}}, "actiongroup_name": {"type": "string", "description": "Provide the action group name, if service selected as Azure and configure_type as create_new"}, "notification_channel_name": {"type": "string", "description": "Provide the notification channel name, if service selected as GCP and configure_type as create_new"}}, "type": "object"}, "CreatePolicyRequest": {"required": ["category", "classification", "cloud", "content", "content_type", "description", "engine_type", "name", "scope", "severity", "sub_classification"], "properties": {"name": {"type": "string", "description": "policy name which is unique and does not allow special character or space"}, "display_name": {"type": "string", "description": "Display name of policy which allow space this is to mostly show on the ui"}, "description": {"type": "string", "description": "A brief explanation of the policy."}, "type": {"type": "array", "description": "Indicates the type of policy", "items": {"type": "string"}}, "category": {"type": "string", "description": "The category will be either service or resource"}, "content": {"type": "string", "description": "The policy content"}, "is_system_policy": {"type": "boolean", "description": "Flag to identify system policies"}, "engine_type": {"type": "string", "description": "Engine type of the policy", "example": "corestack_policy", "enum": ["corestack_policy", "aws_organization_policy", "azure_policy", "chef_inspec", "congress", "aws_config", "gcp_organization_policy", "gcp_policy", "kubernetes_policy", "oracle_cloud_guard"], "x-cs-enum-type": "PolicyEngineType"}, "cloud": {"type": "array", "description": "Displays the cloud associated with the policy, for example, AWS, Azure etc", "items": {"type": "string"}}, "classification": {"type": "string", "description": "Policies are classified based on the basis of the activity they perform, for example provisioning, Account Management, Utilization, etc. This value is displayed in this field"}, "sub_classification": {"type": "string", "description": "Sub classification for policy"}, "scope": {"type": "string", "description": "The scope of the policy Account scope - All users under that account will have access to view and execute Only Account admins can update/delete the policies, Tenant Scope - Users with access to the specific tenant will haveaccess to policies who can describe or execute policies. Tenant admins can  only update/delete. Private Scope - User who created will only have access", "example": "tenant", "enum": ["tenant", "private", "account"], "x-cs-enum-type": "AccountScope"}, "content_type": {"type": "string", "description": "Policy content source (git, file)", "example": "git", "enum": ["git", "file"], "x-cs-enum-type": "ContentType"}, "content_password_or_key": {"type": "string", "description": "Password or private key to access of Git repo if repo is authenticated required only in case of content type git"}, "content_username": {"type": "string", "description": "Username of Git repo if repo is authenticated required only in case of content type git"}, "content_url": {"type": "string", "description": "Git project URL when the content type is git required only in case of content type git"}, "content_path": {"type": "string", "description": "Root path of the policy in git repo required only in case of content type git"}, "severity": {"type": "string", "description": "Severity of policy", "example": "low", "enum": ["low", "medium", "high"], "x-cs-enum-type": "PolicySeverity"}}, "type": "object"}, "CreateRemediationRequest": {"required": ["cloud"], "properties": {"service_account_id": {"type": "string", "description": "service account id"}, "service_account_name": {"type": "string", "description": "service account id"}, "cloud": {"type": "string", "description": "cloud service name", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "category": {"type": "string", "description": "corresponds with resource_category in TagPosture models"}, "component": {"type": "string", "description": "corresponds with resource_component in TagPosture models"}, "resource": {"type": "string", "description": "corresponds with resource_type in TagPosture models"}, "resource_filter": {"type": "string", "description": "resource filter will be region, resourcegroup or zone name"}, "resource_id": {"type": "string", "description": "resource_id (corresponds with resource_name in TagPosture models)"}, "tags": {"type": "object", "description": "Tags", "additionalProperties": {"type": "string"}}}, "type": "object"}, "CreateRemediationResponse": {"properties": {"resource_enforce_tag_id": {"type": "string", "description": "Tag Remediation ID"}}, "type": "object"}, "CreateReportRequest": {"properties": {"html": {"type": "string", "description": "HTML content of report"}, "report_generation_url": {"type": "string", "description": "Relative URL used to generate the report."}, "report_configuration": {"description": "Dynamic report configuration. Cannot be used with 'html' field.", "$ref": "#/definitions/ReportConfiguration"}, "user_id": {"type": "string", "description": "User ID of user who requested the report"}, "report_options": {"$ref": "#/definitions/ReportGenerationOptions"}}, "type": "object"}, "CreateResourceLockRequest": {"required": ["cloud", "cloud_account_id", "cloud_account_name", "scope", "tenant_ids"], "properties": {"cloud_account_id": {"type": "string", "description": "cloud_acccount_id"}, "cloud_account_name": {"type": "string", "description": "cloud_account_name"}, "cloud": {"type": "string", "description": "The category will be either service or resource"}, "tenant_ids": {"type": "array", "description": "Displays the list of tenant ids", "items": {"type": "string"}}, "scope": {"type": "string", "description": "Account Scope - For account scope,user can apply lock to particular cloud account,Tenant Scope - Users with tenant can apply lock for multiple tenants., allowed values are tenant, cloud_account"}, "filters": {"type": "array", "description": "filters for cloud _account_scope", "items": {"$ref": "#/definitions/CreateLockFilterRequest"}}, "lock_type": {"type": "string", "description": "lock type"}, "config_rule_id": {"type": "string", "description": "config rule id to enable/disable config rule"}, "action": {"type": "string", "description": "action to enable/disable config rule. allowed values are enable or diable"}}, "type": "object"}, "CreateResourceTagRequest": {"required": ["cloud", "cloud_account_id", "cloud_account_name", "resources", "scope", "tenant_ids"], "properties": {"cloud_account_id": {"type": "string", "description": "cloud_acccount_id"}, "cloud_account_name": {"type": "string", "description": "cloud_account_name"}, "cloud": {"type": "string", "description": "The category will be either service or resource"}, "tenant_ids": {"type": "array", "description": "Displays the list of tenant ids", "items": {"type": "string"}}, "scope": {"type": "string", "description": "Account Scope - For account scope,user can apply lock to particular cloud account,Tenant Scope - Users with tenant can apply lock for multiple tenants., allowed values are tenant, cloud_account"}, "resources": {"type": "array", "description": "Displays the list of resources", "items": {"type": "string"}}, "tags": {"type": "array", "description": "applied tags for lock", "items": {"type": "string"}}, "filters": {"type": "array", "description": "filters for cloud _account_scope", "items": {"$ref": "#/definitions/CreateTagFilterRequest"}}, "config_rule_id": {"type": "string", "description": "config rule id to enable/disable config rule"}, "action": {"type": "string", "description": "action to enable/disable config rule. allowed values are enable or disable"}}, "type": "object"}, "CreateScheduleResponse": {"required": ["message", "schedule_id", "status"], "properties": {"status": {"type": "string", "description": "Status of the Create Schedule Call"}, "message": {"type": "string", "description": "Message of the Create Schedule Call"}, "schedule_id": {"type": "string", "description": "Schedule ID"}}, "type": "object"}, "CreateScriptRequest": {"required": ["category", "config_type", "name", "operating_system", "scope"], "properties": {"name": {"type": "string", "description": "Name of the script and it should be unique."}, "uri": {"type": "string", "description": "Unique URI for script - eg: script/ansi/linux/lamp_install. If not provided, corestack will generate it automatically"}, "description": {"type": "string", "description": "Detailed description about script"}, "category": {"type": "array", "description": "Script Category", "items": {"type": "string", "example": "Application", "enum": ["Application", "Languages", "Database", "Security", "System", "Web Server", "Others"], "x-cs-enum-type": "ScriptCategory"}}, "platform": {"type": "array", "items": {"type": "string", "description": "Platforms supported by script.", "example": "linux", "enum": ["linux", "windows"], "x-cs-enum-type": "Platform"}}, "operating_system": {"type": "array", "description": "OS supported by script", "items": {"type": "string", "example": "centos", "enum": ["centos", "ubuntu", "Win-2008(Server)", "Win-2012(Server)", "redhat", "fedora", "debian", "Win-2016(Server)", "Win-7(Desktop)", "Win-8(Desktop)"], "x-cs-enum-type": "Os"}}, "config_type": {"type": "string", "description": "Config type of the script. Create is supported for ansible type scripts alone for now", "example": "ansible", "enum": ["ansible"], "x-cs-enum-type": "ScriptConfigType"}, "scope": {"type": "string", "description": "Scope of the script. Account - Only Account admins can create/update/delete. Tenant - Only Tenant admins can create/update/delete. Private - All Users can create/update/delete.", "example": "tenant", "enum": ["tenant", "private", "account"], "x-cs-enum-type": "AccountScope"}, "script_info": {"type": "array", "items": {"description": "script info", "$ref": "#/definitions/ScriptInfo"}}, "dependencies": {"type": "array", "items": {"description": "Details of the dependent scripts if any. For eg., A LAMP script will have apache, mysql, php as dependent scripts.This can be skipped if there are no dependent scripts or if the actual script takes care of installing all dependencies", "$ref": "#/definitions/ScriptInfo"}}, "minimum_requirement": {"description": "Minimum requirements of the target machine to install the script", "$ref": "#/definitions/ScriptMinimumRequirements"}, "playbook_yaml": {"type": "string", "description": "Playbook yaml path - mandatory for ansible scripts"}}, "type": "object"}, "CreateScriptResponse": {"properties": {"script_id": {"type": "string", "description": "Unique ID of the script"}}, "type": "object"}, "CreateTagConfigRuleResponse": {"required": ["message"], "properties": {"message": {"type": "string", "description": "message"}}, "type": "object"}, "CreateTagFilterRequest": {"properties": {"regions": {"type": "array", "description": "Displays the list of regions", "items": {"type": "string"}}, "resource_groups": {"type": "array", "description": "Displays the list of resource groups", "items": {"type": "string"}}}, "type": "object"}, "CreateTagPatternsRequest": {"required": ["auto_create", "case_sensitive", "match_type", "name", "patterns", "scope", "tag_key", "tag_value_mapper"], "properties": {"name": {"type": "string", "description": "Name of the tag pattern."}, "scope": {"type": "string", "description": "Scope of the tag pattern", "example": "cloud_account", "enum": ["cloud_account", "tenant"], "x-cs-enum-type": "RuleScope"}, "match_type": {"type": "string", "description": "Match type of the tag pattern", "example": "StringMatch", "enum": ["StringMatch", "Regex"], "x-cs-enum-type": "MatchType"}, "tag_key": {"type": "string", "description": "Tag key to be matched for the tag pattern."}, "tag_value_mapper": {"type": "string", "description": "Tag value mapper of the tag pattern.", "example": "Environment", "enum": ["Environment", "ApplicationGroup", "Application", "CostCenter"], "x-cs-enum-type": "TagValueMapper"}, "patterns": {"type": "array", "description": "Patterns to match", "items": {"type": "string"}}, "case_sensitive": {"type": "boolean", "description": "Is case sensitive or not. Give false if match_type is Regex"}, "auto_create": {"type": "boolean", "description": "is auto create or not"}, "application_identifier": {"type": "string", "description": "Application Identifier of the tag pattern. Give this only if auto_create is given as Yes.", "example": "application_name", "enum": ["application_name", "application_code"], "x-cs-enum-type": "ApplicationIdentifier"}, "cloud_account_details": {"type": "object", "description": "Give the required cloud account details if the scope is given as cloud account.\nFor example:\n\"cloud_account_details\":{\n\"612cce7aafb269b0220b4439\":{\"resourcegroup/regions\":[{\n\"id\":\"us-east-1\",\"name\":\"US East (N. Virginia)\",\n\"type\": \"aws_standard\"}]}}"}, "cloud": {"type": "array", "description": "List of clouds chosen. Give this only if the scope is cloud_account.Allowed Values are - AWS, Azure, GCP, Azure_EA", "items": {"type": "string"}}, "metadata": {"description": "Details about the file to be uploaded", "$ref": "#/definitions/MetaData"}}, "type": "object"}, "CreateTemplateReq": {"required": ["classification", "content", "engine_type", "name", "services", "type"], "properties": {"name": {"type": "string", "description": "template name which is unique and does not allow special character or space"}, "description": {"type": "string", "description": "Usage of the tempate."}, "content": {"type": "string", "description": "The template content"}, "metadata": {"description": "Metadata like file name, file format", "$ref": "#/definitions/MetaDataModel"}, "status": {"type": "string", "description": "Status of the template [active/inactive].\nactive:- Templates which can be executed.\ninactive:- Template which cannot be executed"}, "classification": {"type": "array", "description": "Templates are classified based orchestration actions like Provision, Configure, Backup, Catalog Builder, Deployment, Autoscaling", "items": {"type": "string"}}, "scope": {"type": "string", "description": "Scope of the template [Account,Tenant,Private]", "example": "tenant", "enum": ["tenant", "private", "account"], "x-cs-enum-type": "AccountScope"}, "type": {"type": "array", "description": "Type of the template (Cloud, Monitoring, Virtualisation)", "items": {"type": "string"}}, "services": {"type": "array", "description": "Displays the service associated with the template, for example, AWS, AzureRM, Openstack., etc", "items": {"type": "string"}}, "engine_type": {"type": "string", "description": "Template formats such as AWS CFN, Azure ARM, Openstack Heat and Mistral", "example": "cfn", "enum": ["cfn", "arm", "terraform", "mistral", "heat", "oracle", "dm"], "x-cs-enum-type": "TemplateEngineType"}, "blueprint_support": {"type": "boolean", "description": "Flag to add template to blueprints"}}, "type": "object"}, "CreateTemplateRequest": {"required": ["create_template_name", "is_default", "scope", "service"], "properties": {"service": {"type": "string", "description": "Specify the cloud service"}, "create_template_name": {"type": "string", "description": "Provide the create template name."}, "is_default": {"type": "boolean", "description": "Boolean value to set template as default not not"}, "cloud_account_id": {"type": "array", "description": "Provide cloud_account_id when scope is selected as cloud_account scope", "items": {"type": "string"}}, "scope": {"type": "string", "description": "scope for the template to be created"}, "constraints": {"description": "Provide the constraints, if the template need to be mapped with constraints", "$ref": "#/definitions/ConstraintsRequestModel"}}, "type": "object"}, "CreateTemplateResponse": {"required": ["data", "message"], "properties": {"message": {"type": "string", "description": "Create template response"}, "data": {"type": "object", "description": "Create Monitoring Template Details"}}, "type": "object"}, "CreateTenantRequest": {"required": ["account_id", "name"], "properties": {"name": {"type": "string", "description": "Name of the new tenant to be created. Tenant Name must be globally unique within CoreStack. If the same tenant name is used in another account, creation wil fail. Tenant Name must start with alphabet and can contain 2-50 characters. Special characters ' \" # ? / \\ are not allowed."}, "description": {"type": "string", "description": "Description of the new tenant to be created."}, "metadata": {"type": "object", "description": "metadata is a freeform JSON. It allows to store custom keys and values. It will be useful for storing information about an external applications that will refer to CoreStack tenant."}, "account_id": {"type": "string", "description": "Id of the CoreStack account under which the new tenant to be created."}}, "type": "object"}, "CustomerAccountResponse": {"required": ["account_id", "cost", "linked_accounts", "service_account_id", "service_account_name"], "properties": {"cost": {"type": "number", "description": "Total Cost"}, "account_id": {"type": "string", "description": "Account Id"}, "linked_accounts": {"type": "array", "description": "Linked Accounts", "items": {"$ref": "#/definitions/CostDetailResponse"}}, "service_account_name": {"type": "string", "description": "Service Account Name"}, "service_account_id": {"type": "string", "description": "Service Account Id"}}, "type": "object"}, "CustomerDashboardReportModel": {"required": ["data"], "properties": {"data": {"type": "object", "description": "catalog type"}}, "type": "object"}, "CustomerTotalCostResponse": {"required": ["accounts", "cost_per_unit", "message", "status", "total_cost"], "properties": {"status": {"type": "string", "description": "Response status"}, "message": {"type": "string", "description": "Response Message"}, "total_cost": {"type": "number", "description": "Total Cost For The Usage"}, "accounts": {"type": "array", "description": "Account Details", "items": {"$ref": "#/definitions/CustomerAccountResponse"}}, "cost_per_unit": {"type": "string", "description": "Cost Per Unit"}}, "type": "object"}, "DashboardBannerSegment": {"properties": {"widthRatio": {"type": "integer"}, "branding": {"$ref": "#/definitions/BrandingConfiguration"}}, "type": "object"}, "DashboardConfiguration": {"properties": {"title": {"type": "string"}, "description": {"type": "string"}, "showTitle": {"type": "boolean"}, "widgetPrimaryColor": {"type": "string"}, "widgetSecondaryColor": {"type": "string"}, "bannerSegments": {"type": "array", "items": {"$ref": "#/definitions/DashboardBannerSegment"}}, "widgets": {"type": "array", "items": {"$ref": "#/definitions/WidgetComposition"}}, "portalFilter": {"$ref": "#/definitions/FilterWidgetConfiguration"}}, "type": "object"}, "DashboardDefinition": {"properties": {"sysId": {"type": "string"}, "createdOn": {"type": "string", "format": "date-time"}, "updatedOn": {"type": "string", "format": "date-time"}, "user": {"$ref": "#/definitions/RecordIdentity"}, "headVersion": {"$ref": "#/definitions/RecordIdentity"}, "releaseVersion": {"$ref": "#/definitions/RecordIdentity"}}, "type": "object"}, "DashboardDefinitionAcl": {"properties": {"entries": {"type": "array", "items": {"$ref": "#/definitions/DashboardDefinitionAclEntry"}}, "portalPath": {"type": "array", "items": {"type": "string"}}}, "type": "object"}, "DashboardDefinitionAclContext": {"properties": {"is_product_admin": {"type": "boolean", "description": "True if user has product admin role"}, "is_account_admin": {"type": "boolean", "description": "True if user has account admin role"}, "product_bundles": {"type": "array", "description": "Product bundles for the user", "items": {"type": "string"}}, "role_types": {"type": "array", "description": "Role types for the user", "items": {"$ref": "#/definitions/DashboardDefinitionAclRoleType"}}, "roles": {"type": "array", "description": "Roles for the user", "items": {"$ref": "#/definitions/DashboardDefinitionAclRole"}}, "accounts": {"type": "array", "description": "Accounts for the user", "items": {"$ref": "#/definitions/DashboardDefinitionAclContextDetails"}}, "tenants": {"type": "array", "description": "Tenants for the user", "items": {"$ref": "#/definitions/DashboardDefinitionAclContextDetails"}}}, "type": "object"}, "DashboardDefinitionAclContextDetails": {"properties": {"id": {"type": "string"}, "name": {"type": "string"}}, "type": "object"}, "DashboardDefinitionAclEntry": {"required": ["scope"], "properties": {"users": {"type": "array", "items": {"type": "string"}}, "user_groups": {"type": "array", "items": {"type": "string"}}, "granted": {"type": "array", "description": "Actions granted for matching users", "items": {"type": "string"}}, "denied": {"type": "array", "description": "Actions denied for matching users", "items": {"type": "string"}}}, "discriminator": "scope", "type": "object", "x-cs-subtypes": [{"subtype_model": "DashboardDefinitionAclEntryGlobal", "subtype_name": "global"}, {"subtype_model": "DashboardDefinitionAclEntryTenant", "subtype_name": "tenant"}, {"subtype_model": "DashboardDefinitionAclEntryAccount", "subtype_name": "account"}]}, "DashboardDefinitionAclEntryAccount": {"allOf": [{"$ref": "#/definitions/DashboardDefinitionAclEntry"}, {"properties": {"account_id": {"type": "string"}, "role_types": {"type": "array", "items": {"$ref": "#/definitions/DashboardDefinitionAclRoleType"}}}, "type": "object"}], "x-cs-type-name": "account"}, "DashboardDefinitionAclEntryGlobal": {"allOf": [{"$ref": "#/definitions/DashboardDefinitionAclEntry"}, {"properties": {"role_types": {"type": "array", "items": {"$ref": "#/definitions/DashboardDefinitionAclRoleType"}}}, "type": "object"}], "x-cs-type-name": "global"}, "DashboardDefinitionAclEntryTenant": {"allOf": [{"$ref": "#/definitions/DashboardDefinitionAclEntry"}, {"properties": {"account_id": {"type": "string"}, "tenant_id": {"type": "string"}, "roles": {"type": "array", "items": {"$ref": "#/definitions/DashboardDefinitionAclRole"}}}, "type": "object"}], "x-cs-type-name": "tenant"}, "DashboardDefinitionAclEval": {"properties": {"is_owner": {"type": "boolean", "description": "True if user is the owner of the dashboard"}, "granted": {"type": "array", "description": "Actions granted to user", "items": {"type": "string"}}}, "type": "object"}, "DashboardDefinitionAclRole": {"properties": {"id": {"type": "string"}, "tenant_id": {"type": "string"}, "name": {"type": "string"}}, "type": "object"}, "DashboardDefinitionAclRoleType": {"properties": {"product_bundle": {"type": "string"}, "role_type": {"type": "string"}}, "type": "object"}, "DashboardDefinitionToPortal": {"properties": {"dashboard_id": {"type": "string"}, "portalPath": {"type": "array", "items": {"type": "string"}}}, "type": "object"}, "DashboardDefinitionVersion": {"properties": {"sysId": {"type": "string"}, "createdOn": {"type": "string", "format": "date-time"}, "updatedOn": {"type": "string", "format": "date-time"}, "version": {"type": "integer"}, "definition": {"$ref": "#/definitions/RecordIdentity"}, "details": {"$ref": "#/definitions/DashboardConfiguration"}, "predecessor": {"$ref": "#/definitions/RecordIdentity"}}, "type": "object"}, "DataContext": {"properties": {"filter": {"$ref": "#/definitions/AccountFilters"}, "currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}, "timeRange": {"$ref": "#/definitions/RangeSelection"}, "overrideTenants": {"type": "boolean"}, "overrideCloudProviders": {"type": "boolean"}, "overrideCloudAccounts": {"type": "boolean"}, "overrideCurrency": {"type": "boolean"}, "overrideTimeRange": {"type": "boolean"}, "overrideRegions": {"type": "boolean"}, "overrideProductCategories": {"type": "boolean"}, "hideTenants": {"type": "boolean"}, "hideCloudProviders": {"type": "boolean"}, "hideCloudAccounts": {"type": "boolean"}, "hideCurrency": {"type": "boolean"}, "hideTimeRange": {"type": "boolean"}, "hideRegions": {"type": "boolean"}, "hideProductCategories": {"type": "boolean"}}, "type": "object"}, "DatatableColumnConfiguration": {"properties": {"id": {"type": "string"}, "name": {"type": "string"}, "enabled": {"type": "boolean"}}, "type": "object"}, "DatatableConfiguration": {"properties": {"columns": {"type": "array", "items": {"$ref": "#/definitions/DatatableColumnConfiguration"}}}, "type": "object"}, "DateAndTimeDetails": {"required": ["dayofmonth", "month", "time", "weekday", "year"], "properties": {"month": {"type": "string", "description": "Month when the Template/Script/Policy is scheduled to run. Allowed values: 01-12"}, "time": {"description": "Time when the Template/Script/Policy is scheduled to run.", "$ref": "#/definitions/TimeDetails"}, "dayofmonth": {"description": "At which day of that month the Template/Script/Policy is scheduled to run.Note - weekday and dayofmonth are alternate.Allowed values: 01-31", "$ref": "#/definitions/DayDetails"}, "weekday": {"description": "At which day of that week the Template/Script/Policy is scheduled to run.Note - weekday and dayofmonth are alternate.Allowed values: 01-07", "$ref": "#/definitions/DayDetails"}, "year": {"type": "string", "description": "Year when the Template/Script/Policy is scheduled to run. Example:'year':'2022'"}}, "type": "object"}, "DayDetails": {"required": ["day"], "properties": {"day": {"type": "string", "description": "At which day of that month the Template/Script/Policy is scheduled to run.Allowed values: 01-31"}}, "type": "object"}, "DeleteAlertConfiguration": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Message of delete configuration"}}, "type": "object"}, "DeleteBlueprintDetails": {"required": ["message", "status"], "properties": {"status": {"type": "string", "description": "Status of the delete call for the blueprint"}, "message": {"type": "string", "description": "Message of the delete call for the blueprint"}}, "type": "object"}, "DeleteConfigTagRuleRequest": {"properties": {"config_rule_id": {"type": "string", "description": "Config rule id, it can be fetched from List Resource Tag Config Rules API"}}, "type": "object"}, "DeleteLockConfigRuleRequest": {"properties": {"config_rule_id": {"type": "string", "description": "Config rule id, it can be fetched from List Resource Lock Config Rules API"}}, "type": "object"}, "DeleteMarkupResponse": {"properties": {"name": {"type": "string", "description": "Deleted Rule name"}}, "type": "object"}, "DeleteScheduleResponse": {"required": ["message", "status"], "properties": {"status": {"type": "string", "description": "Status of the Delete Schedule Call"}, "message": {"type": "string", "description": "Message of the Delete Schedule Call"}}, "type": "object"}, "DerivedDetails": {"required": ["display_name", "score", "weight"], "properties": {"display_name": {"type": "string", "description": "Display name of policy which allow space this is to mostly show on the ui"}, "score": {"description": "Secure score for the tenant", "$ref": "#/definitions/ScoreDetails"}, "weight": {"type": "integer", "description": "Secure score for the tenant"}}, "type": "object"}, "DetailTenantModel": {"required": ["id", "is_default", "name", "policy", "roles", "service_accounts", "services"], "properties": {"id": {"type": "string", "description": "Id of the tenant. This will be used for performing tenant level operations such as createPolicy, createScript, onboardCloudAccount and so on."}, "name": {"type": "string", "description": "Unique name of the tenant provided as input when creating."}, "roles": {"type": "array", "description": "Roles for a particular tenant", "items": {"$ref": "#/definitions/Role"}}, "is_default": {"type": "boolean", "description": "If user created under particular tenant it will be set to True or else False"}, "service_accounts": {"type": "array", "description": "Entitlements for a particular tenant", "items": {"type": "string"}}, "policy": {"type": "object", "description": "Policy for a particular tenant", "additionalProperties": {"type": "array", "items": {"type": "string"}}}, "services": {"type": "object", "description": "Services applicable for a particular tenant", "additionalProperties": {"type": "array", "items": {"type": "string"}}}}, "type": "object"}, "DetailsRequest": {"required": ["all_tenants"], "properties": {"tenant_id": {"type": "string", "description": "ID of the tenant to filter the violation detail.\nPlease get tenant_id from cloud_accounts of AccessVisibilityFilters in Access Visibility Dashboard"}, "cloud_account_id": {"type": "string", "description": "ID of the cloud account to filter the violation detail.\nPlease get cloud_account_id from cloud_accounts of AccessVisibilityFilters in Access Visibility Dashboard"}, "all_tenants": {"type": "string", "description": "To get violations from all the tenants, please give Yes. If selected No, then it is mandatory to provide tenant_id and cloud_account_id", "example": "Yes", "enum": ["Yes", "No"], "x-cs-enum-type": "YesNo"}, "search": {"type": "string", "description": "Search by account_name wise"}}, "type": "object"}, "DetailsResponse": {"required": ["details", "page_count", "total_count"], "properties": {"total_count": {"type": "integer", "description": "Total violations count"}, "page_count": {"type": "string", "description": "Page count for the violations"}, "details": {"type": "array", "description": "Details of the violation", "items": {"type": "object"}}}, "type": "object"}, "EditTemplateNameRequest": {"required": ["name"], "properties": {"name": {"type": "string", "description": "Provide the name for the template to be updated"}}, "type": "object"}, "EditTemplateNameResponse": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Edit template name response"}}, "type": "object"}, "EditTemplateRequest": {"required": ["configuration_data"], "properties": {"configuration_data": {"type": "object", "description": "Refer the View configuration response for data formation\n                                                                             For AWS\n                                                                             ex:\n                                                                             {\n                                                                             \"Compute\": {\n                                                                                 \"EC2\": {\n                                                                                     \"Instances\": [{\n                                                                                         \"threshold_settings\": {\n                                                                                             \"EvaluationPeriods\": 2,\n                                                                                             \"Dimensions\": [],\n                                                                                             \"AlarmActions\": [],\n                                                                                             \"AlarmDescription\": \"\",\n                                                                                             \"Namespace\": \"\",\n                                                                                             \"Period\": 5,\n                                                                                             \"ComparisonOperator\": \"GreaterThanOrEqualToThreshold\",\n                                                                                             \"Statistic\": \"Average\",\n                                                                                             \"Threshold\": 75,\n                                                                                             \"OKActions\": []\n                                                                                         },\n                                                                                         \"service_resource_metric_uri\": \"AWS/Compute/EC2/Instances/CPUUtilization\",\n                                                                                         \"status\": \"enabled/disabled\",\n                                                                                         \"metric_name\": \"CPUUtilization\"\n                                                                                     }]\n                                                                                 }\n                                                                             }\n                                                                             For Azure\n                                                                             ex:\n                                                                             {\n                                                                             \"Compute\": {\n                                                                                 \"Virtual_Machines\": {\n                                                                                     \"Virtual_Machines\": [{\n                                                                                         \"threshold_settings\": {\n                                                                                             \"threshold\" : 95,\n                                                                                             \"operator\" : \"GreaterThan\",\n                                                                                             \"window_size\" : \"PT15M\",\n                                                                                             \"aggregation\" : \"Total\"\n                                                                                         },\n                                                                                         \"service_resource_metric_uri\": \"Azure/Compute/Virtual_Machines/Virtual_Machines/Percentage CPU\",\n                                                                                         \"status\": \"enabled/disabled\",\n                                                                                         \"metric_name\": \"Percentage CPU\"\n                                                                                     }]\n                                                                                 }\n                                                                             }\n                                                                             }\n                                                                             For GCP\n                                                                             ex:\n                                                                             {\n                                                                             \"Compute\": {\n                                                                                 \"Compute_Engine\": {\n                                                                                     \"VM_Instances\": [{\n                                                                                         \"threshold_settings\": {\n                                                                                             \"Comparison\" : \"COMPARISON_GT\",\n                                                                                             \"Aggregator\" : \"REDUCE_MEAN\",\n                                                                                             \"Period\" : 5,\n                                                                                             \"Aligner\" : \"ALIGN_MEAN\",\n                                                                                             \"Threshold\" : 90,\n                                                                                             \"Duration\" : 1\n                                                                                         },\n                                                                                         \"service_resource_metric_uri\": \"GCP/Compute/Compute_Engine/VM_Instances/compute.googleapis.com/instance/cpu/utilization\",\n                                                                                         \"status\": \"enabled/disabled\",\n                                                                                         \"metric_name\": \"compute.googleapis.com/instance/cpu/utilization\"\n                                                                                     }]\n                                                                                 }\n                                                                             }\n                                                                             }\n                                                                             "}}, "type": "object"}, "EditTemplateResponse": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Edit template configuration response"}}, "type": "object"}, "EmailSettingModel": {"required": ["email", "password", "smtp", "smtp_port", "username"], "properties": {"smtp": {"type": "string", "description": "SMTP"}, "smtp_port": {"type": "integer", "description": "Smtp port no"}, "username": {"type": "string", "description": "User name"}, "email": {"type": "string", "description": "Email"}, "password": {"type": "string", "description": "Password for email"}, "enable_starttls": {"type": "boolean", "default": true}}, "type": "object"}, "EnableDisableResponseModel": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Response message"}}, "type": "object"}, "EnvironmentCreateResponse": {"required": ["environment_id"], "properties": {"environment_id": {"type": "string", "description": "Unique Id of the environment"}}, "type": "object"}, "EnvironmentList": {"required": ["cloud_account_details", "environment_id", "name", "tag_list"], "properties": {"environment_id": {"type": "string", "description": "Unique ID of the Environment."}, "name": {"type": "string", "description": "Name of the Environment."}, "description": {"type": "string", "description": "Description for the Environment"}, "tag_list": {"type": "object", "description": "Tags associated with environment"}, "owner": {"type": "string", "description": "Name of the owner."}, "cloud_account_details": {"type": "object", "description": "Cloud account"}}, "type": "object"}, "EnvironmentListResponse": {"required": ["environments", "total_count"], "properties": {"total_count": {"type": "integer", "description": "Number of Environments"}, "environments": {"description": "list of environment details.", "$ref": "#/definitions/EnvironmentList"}}, "type": "object"}, "EnvironmentRemoveResponse": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Delete Response message."}}, "type": "object"}, "EnvironmentUpdateResponse": {"properties": {"environment_id": {"type": "string", "description": "Unique ID of the environment"}}, "type": "object"}, "EnvironmentViewResponse": {"required": ["cloud_account_details", "created_at", "environment_id", "name", "tag_list"], "properties": {"environment_id": {"type": "string", "description": "Unique ID of the Environment."}, "name": {"type": "string", "description": "Name of the Environment."}, "description": {"type": "string", "description": "Description for the Environment"}, "created_at": {"type": "string", "description": "Environment Creation time in UTC"}, "tag_list": {"type": "object", "description": "Tags associated with environment"}, "cloud_account_details": {"type": "object", "description": "Cloud account"}}, "type": "object"}, "ExecuteActionRecommendationRespModel": {"required": ["data", "message", "status"], "properties": {"status": {"type": "string", "description": "Status of pre-execute"}, "message": {"type": "string", "description": "pre-execute"}, "data": {"type": "object", "description": "Data for pre-execute"}}, "type": "object"}, "ExecuteRecommendationRequestModel": {"required": ["action_name", "resources"], "properties": {"action_name": {"type": "string", "description": "action to perform to resolve violations, the name can be obtained from the view recommendation api.  Example: action_name : skip or unskip"}, "resources": {"type": "array", "description": "resource resource_recommendation_id list for which the recommendation will be executed, this value can be obtained from the view recommendation api", "items": {"type": "string"}}, "args": {"type": "object", "description": "arguments to execute recommendation if any. The values are dynamic in nature can change from recommendation to recommendation"}}, "type": "object"}, "ExecuteRecommendationRespModel": {"required": ["data", "message", "status"], "properties": {"status": {"type": "string", "description": "Status of that HTTP call"}, "message": {"type": "string", "description": "Message of HTTP call"}, "data": {"type": "object", "description": "response data"}}, "type": "object"}, "ExecuteRecommendationResponseModel": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Execute policy response message"}}, "type": "object"}, "ExecuteResolveActionRecommendationsReqModel": {"required": ["action_name", "resources"], "properties": {"action_name": {"type": "string", "description": "Action Name to resolve the recommendation"}, "resources": {"type": "array", "description": "Specify the Resource IDs. It will be fetched from list recommendation api", "items": {"type": "string"}}}, "type": "object"}, "ExecuteResolveRecommendationsReqModel": {"required": ["action_name", "apply_for_all", "resources"], "properties": {"action_name": {"type": "string", "description": "Action Name to resolve the recommendation"}, "resources": {"type": "array", "description": "Resource ID", "items": {"type": "string"}}, "apply_for_all": {"type": "boolean", "description": "Apply for all the resources.Allowed Values true or false"}}, "type": "object"}, "ExecuteResponse": {"properties": {"script_job_id": {"type": "string", "description": "Unique ID of the Script Job. Use this ID in describeScriptJob API and check the execution status"}}, "type": "object"}, "ExecuteScriptJobData": {"required": ["host", "keypair_flag", "parameters", "platform", "port", "script_name", "username"], "properties": {"host": {"type": "string", "description": "Target machine's IP/DNS"}, "username": {"type": "string", "description": "Username of the target machine"}, "keypair_flag": {"type": "string", "description": "Flag to indicate whether to connect using keypair or not"}, "password": {"type": "string", "description": "Password of the target machine's IP/DNS"}, "key_file": {"type": "string", "description": "Private key content if keypair_flag is true"}, "port": {"type": "string", "description": "SSH/WinRM port"}, "platform": {"type": "string", "description": "OS platform of the target machine (linux/windows)", "example": "linux", "enum": ["linux", "windows"], "x-cs-enum-type": "Platform"}, "script_name": {"type": "array", "description": "Name of the scripts to execute. This can be fetched from listScripts/describeScript API", "items": {"type": "string"}}, "playbook_hosts": {"type": "array", "description": "Required only for ansible scripts. Name of the hostgroup to be referred as per playbook. For eg, if you are installing a 3 tier app, you might have hostgroup such as dbserver, appserver, uiserver of the scripts to execute and the playbook tasks will be based on the hostgroups. The hostgroup initialized in a playbook can be fetched from scanScript API", "items": {"type": "string"}}, "parameters": {"type": "object", "description": "A JSON object which contains the parameters of the script. Refer scanned_parameters from scanScript/viewScript API response to view parameter available. Parameter JSON should be as follows.{\"<script_name_as_available_in_path>\": {\"parameter_key\" : \"parameter_value\"},\"<dependent_script_name_as_available_in_path>\": {\"parameter_key\" : \"parameter_value\"}}. \nFor Eg.{\"ansible_lamp\": {\"mysql_port\" : \"3307\"}}", "example": {"ansible_lamp": {"mysql_port": "3307"}}}, "parameter_source": {"type": "string", "description": "Parameter source - whether as per the one defined in script or custom json", "default": "script", "example": "script", "enum": ["script", "json"], "x-cs-enum-type": "ParameterSource"}}, "type": "object"}, "ExecuteScriptRequest": {"required": ["job_name"], "properties": {"job_name": {"type": "string", "description": "Name of the script job"}, "host_details": {"type": "array", "items": {"description": "Execution input such as script/host details", "$ref": "#/definitions/ExecuteScriptJobData"}}}, "type": "object"}, "ExecutionLogDetails": {"required": ["name", "run_time", "status"], "properties": {"status": {"type": "string", "description": "Status of the Execution Log"}, "run_time": {"type": "string", "description": "Run Time Execution of the schedule"}, "name": {"type": "string", "description": "Job Name of the schedule execution log"}}, "type": "object"}, "Existing": {"required": ["actiongroup_name", "resource_group"], "properties": {"resource_group": {"type": "string", "description": "Provide the resource_group name"}, "actiongroup_name": {"type": "string", "description": "Provide the action_group name"}}, "type": "object"}, "FilterContextWidgetConfigurationModel": {"allOf": [{"$ref": "#/definitions/BaseDataWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "FilterContextWidgetConfigurationModel"}, "FilterData": {"required": ["regions", "resource_groups"], "properties": {"regions": {"type": "array", "description": "Displays the list of regions", "items": {"$ref": "#/definitions/ResourceFilterModel"}}, "resource_groups": {"type": "array", "description": "Displays the list of resource groups", "items": {"$ref": "#/definitions/ResourceFilterModel"}}}, "type": "object"}, "FilterIdNameModel": {"required": ["id", "name"], "properties": {"id": {"type": "string", "description": "Id of filter key"}, "name": {"type": "string", "description": "Id of filter name"}}, "type": "object"}, "FilterOptions": {"properties": {"tenants": {"type": "array", "items": {"$ref": "#/definitions/FilterOptionsTenant"}}, "product_categories": {"type": "array", "items": {"$ref": "#/definitions/FilterOptionsProductCategory"}}, "regions": {"type": "array", "items": {"type": "string"}}}, "type": "object"}, "FilterOptionsCloudAccount": {"properties": {"status": {"type": "string", "description": "Status of Account", "example": "active", "enum": ["active", "inactive", "not_onboarded", "transient"], "x-cs-enum-type": "AccountStatus"}, "cloud_account_id": {"type": "string", "description": "ID of the account"}, "cloud_account_name": {"type": "string", "description": "Name of the account"}, "currency": {"type": "string", "description": "Currency for the account", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}, "scope": {"type": "string", "description": "Scope of the Cloud account", "example": "private", "enum": ["private", "account", "tenant"], "x-cs-enum-type": "AccountScope"}}, "type": "object"}, "FilterOptionsCloudProvider": {"properties": {"cloud": {"type": "string", "description": "Cloud Provider for the accounts", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "cloud_accounts": {"type": "array", "description": "List of accounts for this Cloud Provider", "items": {"$ref": "#/definitions/FilterOptionsCloudAccount"}}}, "type": "object"}, "FilterOptionsIntegratedToolAccount": {"properties": {"status": {"type": "string", "description": "Status of Account", "example": "active", "enum": ["active", "inactive", "not_onboarded", "transient"], "x-cs-enum-type": "AccountStatus"}, "tool_type": {"type": "string", "description": "Type of the integrated tool"}, "tool_account_id": {"type": "string", "description": "ID of the account"}, "tool_account_name": {"type": "string", "description": "Name of the account"}, "scope": {"type": "string", "description": "Scope of the Integrated Tool account", "example": "private", "enum": ["private", "account", "tenant"], "x-cs-enum-type": "AccountScope"}}, "type": "object"}, "FilterOptionsIntegratedToolProvider": {"properties": {"tool": {"type": "string", "description": "Integrated Tool for the account", "example": "Anomaly_Detector", "enum": ["Anomaly_Detector", "AppDynamics", "App_Insights", "Azure_Devops", "Azure_Security_Graph", "Azure_Sentinel", "Canvas-LMS", "Chef", "CloudFlare", "Cloudstack", "DockerHub", "GitHub", "Hyperic_HQ", "JIRA_DataCenter", "JIRA_ServiceDesk", "Jenkins", "Logstash", "Microsoft_Teams", "Nagios", "Newrelic", "OpenDayLight", "PRTG", "Prometheus", "Qualys", "Rackspace", "RedHat_Satellite", "ServiceNow", "SkypeForBusiness", "Spacewalk", "TCL_ITSM", "Tenable_Nessus", "VMware", "VMware_VCDVyatta_vRouter", "ZOHO_ServiceDesk", "Zabbix"], "x-cs-enum-type": "IntegratedToolName"}, "tool_accounts": {"type": "array", "description": "List of accounts for this Integrated Tool Provider", "items": {"$ref": "#/definitions/FilterOptionsIntegratedToolAccount"}}}, "type": "object"}, "FilterOptionsProductCategory": {"properties": {"resource_type": {"type": "string"}, "product_category": {"type": "string"}}, "type": "object"}, "FilterOptionsTenant": {"properties": {"tenant_name": {"type": "string"}, "tenant_id": {"type": "string"}, "cloud_providers": {"type": "array", "items": {"$ref": "#/definitions/FilterOptionsCloudProvider"}}, "integrated_tool_providers": {"type": "array", "items": {"$ref": "#/definitions/FilterOptionsIntegratedToolProvider"}}}, "type": "object"}, "FilterServices": {"required": ["cloud account type", "currency", "message", "status"], "properties": {"status": {"type": "string", "description": "Response status on cloud account type and currency"}, "message": {"type": "string", "description": "Cost optimization filter fetched successfully"}, "cloud account type": {"type": "array", "description": "cloud account type", "items": {"type": "object"}}, "currency": {"type": "array", "description": "currency types", "items": {"type": "object"}}}, "type": "object"}, "FilterValue": {"required": ["cloud_account", "payment_option", "region", "reservation_sku", "reservation_type", "tenant"], "properties": {"reservation_sku": {"type": "array", "description": "Reservation SKU Details", "items": {"type": "string"}}, "payment_option": {"type": "array", "description": "Available payment option", "items": {"type": "string"}}, "region": {"type": "array", "description": "Region available", "items": {"type": "string"}}, "reservation_type": {"type": "array", "description": "Reservation Type", "items": {"type": "string"}}, "cloud_account": {"type": "array", "description": "Cloud Account Details", "items": {"$ref": "#/definitions/RangeValue"}}, "tenant": {"type": "array", "description": "Tenant name", "items": {"type": "string"}}}, "type": "object"}, "FilterWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseDataWidgetConfigurationModel"}, {"properties": {"contextId": {"type": "string"}, "timeRangeOptions": {"type": "string", "example": "RecentMonths", "enum": ["RecentMonths", "MonthsQuartersYears", "DaysMonthsQuartersYears"], "x-cs-enum-type": "TimeRangeOptionId"}}, "type": "object"}], "x-cs-type-name": "FilterWidgetConfiguration"}, "FiltersRangeValueModel": {"properties": {"range": {"description": "Range", "$ref": "#/definitions/FromToValueModel"}}, "type": "object"}, "FiltersReqModel": {"properties": {"account_type": {"type": "array", "description": "Type of cloud_account_type. Example 'account_type':['master_account','linked_account','Pay_as_You_Go',Azure_CSP-Direct','Azure_CSP-InDirect','Enterprise','billing_account',linked_project_account']", "items": {"type": "string"}}, "cloud_service": {"type": "array", "description": "The name of the cloud service.for example, Azure,GCP,AWS.", "items": {"type": "string"}}, "total_cost": {"description": "Total cost for the usage.example range from:0, to:1000000", "$ref": "#/definitions/FiltersRangeValueModel"}, "projected_cost": {"description": "Projected cost. example range from:0, to:1000000", "$ref": "#/definitions/FiltersRangeValueModel"}}, "type": "object"}, "ForgetPasswordRequest": {"required": ["email_id"], "properties": {"email_id": {"type": "string", "description": "User email id."}}, "type": "object"}, "ForgetPasswordResponse": {"properties": {"status": {"type": "string", "description": "Status of forget password API call."}, "message": {"type": "string", "description": "Message of forget password API call. message."}}, "type": "object"}, "FromToValue": {"properties": {"from": {"type": "integer", "description": "Starting value of the range.Example 'from': 1000"}, "to": {"type": "integer", "description": "Ending value of the range.Example 'to': 100000"}}, "type": "object"}, "FromToValueModel": {"properties": {"from": {"type": "integer", "description": "Starting Range.example range from:0,to:1000000"}, "to": {"type": "integer", "description": "Ending Range.example range from:0,to:1000000"}}, "type": "object"}, "GeoCoordinatesForRegionRequest": {"properties": {"regions": {"type": "array", "items": {"type": "string", "description": "Region of the cloud"}}}, "type": "object"}, "GeoCoordinatesForRegionResponse": {"properties": {"latitude": {"type": "number"}, "longitude": {"type": "number"}, "iso_a3_code": {"type": "string"}, "region": {"type": "string"}, "normalized_region": {"type": "string"}}, "type": "object"}, "GetConfigurations": {"required": ["data", "message"], "properties": {"message": {"type": "string", "description": "Message of get configurations"}, "data": {"type": "object", "description": "get configurations response data"}}, "type": "object"}, "GetMetricResponseModel": {"required": ["cloud_account_id", "cloud_account_name", "metric_interval"], "properties": {"cloud_account_name": {"type": "string", "description": "Name of the cloud account available in Corestack"}, "metric_interval": {"type": "string", "description": "Frequency of Metric data collection"}, "cloud_account_id": {"type": "string", "description": "ID of the cloud account available in Corestack"}}, "type": "object"}, "GetRemediationStatusRequestModel": {"properties": {"service_account_id": {"type": "string", "description": "service account id"}, "service_account_name": {"type": "string", "description": "service account name"}, "resource_category": {"type": "string", "description": "resource_category (it can be fetched from the tag posture resource based on input filters api)"}, "resource_type": {"type": "string", "description": "resource_type (it can be fetched from the tag posture resource based on input filters api)"}, "resource": {"type": "string", "description": "resource (it can be fetched from the tag posture resource based on input filters api)"}, "resource_filter": {"type": "string", "description": "resource filter will be region, resource group or zone name. It can be fetched from the list resource visibility count api"}, "resource_id": {"type": "string", "description": "resource_id (it can be fetched from the tag posture resource based on input filters api)"}}, "type": "object"}, "GetRemediationStatusResponse": {"required": ["tag_remediation_data"], "properties": {"tag_remediation_data": {"type": "array", "description": "tag status data", "items": {"$ref": "#/definitions/TagStatusDataResponseModel"}}}, "type": "object"}, "GetResourceDetailsResponse": {"required": ["data"], "properties": {"data": {"type": "object", "description": "Resource Details"}}, "type": "object"}, "GetTenantResponse": {"allOf": [{"$ref": "#/definitions/TenantDetails"}, {"required": ["account_name", "created_by", "metadata", "updated_at", "updated_by"], "properties": {"metadata": {"type": "object", "description": "metadata is a freeform JSON. It allows to store custom keys and values. It will be useful for storing information about an external applications that will refer to CoreStack tenant"}, "created_by": {"type": "string", "description": "Name of the user created this tenant."}, "updated_by": {"type": "string", "description": "Name of the user last updated this tenant."}, "updated_at": {"type": "string", "description": "DateTime in UTC when the tenant was last updated."}, "account_name": {"type": "string", "description": "Name of the CoreStack account under which this tenant resides."}}, "type": "object"}]}, "GovernanceConfigurationResponseDataModel": {"required": ["configuration_status", "summary"], "properties": {"configuration_status": {"type": "string", "description": "Displays the current status of the account whether it is configured completely or partially configured"}, "summary": {"type": "object", "description": "Summary of the governance configuration for the cloud account on OSCAR"}}, "type": "object"}, "GroupingWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/WidgetConfiguration"}, {"properties": {"numCols": {"type": "integer"}, "numRows": {"type": "integer"}, "widgets": {"type": "array", "items": {"$ref": "#/definitions/WidgetComposition"}}}, "type": "object"}], "x-cs-type-name": "GroupingWidgetConfiguration"}, "GuardrailModel": {"required": ["category", "label", "name"], "properties": {"category": {"type": "string", "description": "Category of the guardrail"}, "name": {"type": "string", "description": "Name of the guardrail"}, "label": {"type": "string", "description": "Label of the guardrail"}}, "type": "object"}, "IdentifierEAorCSP": {"required": ["currency", "total_cost"], "properties": {"tenant_name": {"type": "string", "description": "tenant name"}, "total_cost": {"type": "number", "description": "Total cost for the usage"}, "projected_cost": {"type": "number", "description": "forecasted cost"}, "total_cost_discounted": {"type": "number", "description": "Total cost that is being discounted"}, "department_name": {"type": "string", "description": "Department Name"}, "subscription_name": {"type": "string", "description": "Subscription Name"}, "customer_name": {"type": "string", "description": "Customer Name"}, "customer_id": {"type": "string", "description": "Customer ID"}, "account_name": {"type": "string", "description": "Account Name"}, "currency": {"type": "string", "description": "currency for the cost"}, "subscription_count": {"type": "integer", "description": "Subscription Count"}, "line_in_item": {"type": "string", "description": "Line In Item"}}, "type": "object"}, "ImageWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/WidgetConfiguration"}, {"properties": {"image": {"$ref": "#/definitions/BrandingConfiguration"}}, "type": "object"}], "x-cs-type-name": "ImageWidgetConfiguration"}, "InputStream": {"properties": {"bytes": {"type": "object"}}, "type": "object"}, "InventoryData": {"required": ["data", "type"], "properties": {"data": {"type": "array", "description": "Filters available in inventory", "items": {"type": "object"}}, "type": {"type": "string", "description": "Type of the data available in models list"}}, "type": "object"}, "InventoryFilterRequestDataModel": {"required": ["id", "name", "preferred_regions"], "properties": {"name": {"type": "string", "description": "Name of the cloud account"}, "id": {"type": "string", "description": "ID of the cloud account"}, "preferred_regions": {"type": "array", "description": "Preferred region of AWS account", "items": {"type": "string"}}}, "type": "object"}, "InventoryFilterRequestModel": {"required": ["cloud_account"], "properties": {"cloud_account": {"type": "array", "description": "Cloud accounts", "items": {"$ref": "#/definitions/InventoryFilterRequestDataModel"}}}, "type": "object"}, "InventoryResourceDetailsDataModel": {"required": ["category", "cloud_account", "component", "resource", "service"], "properties": {"cloud_account": {"type": "array", "description": "Id of the cloud account", "items": {"$ref": "#/definitions/CloudAccountDetail"}}, "service": {"type": "string", "description": "Cloud service name", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "category": {"type": "string", "description": "Name of the resource category. It can be fetched from the Get Inventory Count Api"}, "component": {"type": "string", "description": "Name of the resource type. It can be fetched from the Get Inventory Count Api"}, "resource": {"type": "string", "description": "Name of the resource. It can be fetched from the Get Inventory Count Api"}, "operation_id": {"type": "string", "description": "Specify the Operation ID. It can be fetched from the Get Inventory Count Api"}}, "type": "object"}, "InventoryResourceDetailsModelList": {"required": ["cloud", "cloud_account_id", "cloud_account_name", "corestack_resource_id", "resource", "resource_category", "resource_type", "summary_details", "tags", "tenant_id"], "properties": {"tenant_id": {"type": "string", "description": "tenant_id of the resource inventory"}, "cloud": {"type": "string", "description": "Name of the cloud"}, "cloud_account_id": {"type": "string", "description": "Id of the cloud account"}, "cloud_account_name": {"type": "string", "description": "Inventory summary details"}, "resource_category": {"type": "string", "description": "Name of the category"}, "resource_type": {"type": "string", "description": "Name of the component"}, "resource": {"type": "string", "description": "Name of the resource"}, "corestack_resource_id": {"type": "string", "description": "Unique element for the resource"}, "tags": {"type": "object", "description": "Tags associated with the resource"}, "summary_details": {"type": "object", "description": "Inventory summary details"}}, "type": "object"}, "InventoryResourceDetailsRequest": {"required": ["filters"], "properties": {"filters": {"description": "Filter resource details", "$ref": "#/definitions/InventoryResourceDetailsDataModel"}}, "type": "object"}, "InventoryResourceDetailsResponse": {"required": ["count", "resource_details"], "properties": {"count": {"type": "string", "description": "Inventory summary details"}, "resource_details": {"type": "array", "description": "Inventory summary details", "items": {"$ref": "#/definitions/InventoryResourceDetailsModelList"}}}, "type": "object"}, "InventoryResponse": {"required": ["filters"], "properties": {"filters": {"type": "array", "description": "Filters available in inventory", "items": {"$ref": "#/definitions/InventoryData"}}}, "type": "object"}, "JobDetails": {"required": ["host", "keypair_flag", "parameters", "platform", "port", "script_name", "username"], "properties": {"username": {"type": "string", "description": "User name of virtual machine where the script will be scheduled"}, "parameters": {"description": "Parameters (Chef and Shell) or the manifest files to the execution", "$ref": "#/definitions/ParameterDetails"}, "keypair_flag": {"type": "string", "description": "Status of the key value pair set in Virtual Machine", "example": "true", "enum": ["true", "false"], "x-cs-enum-type": "TrueFalse"}, "script_name": {"type": "array", "description": "Script Name to be scheduled", "items": {"type": "string"}}, "platform": {"type": "string", "description": "OS(Operating System) Platform of the virtual machine"}, "host": {"type": "string", "description": "Host IP address of virtual machine"}, "key_file": {"type": "string", "description": "Key Value Pair(.pem file).Note - If key_file field is given, password field can be empty"}, "password": {"type": "string", "description": "Password of virtual machine.Note - If password is given, key_file field can be empty"}, "port": {"type": "string", "description": "Port of the Virtual Machine"}}, "type": "object"}, "JobExecutionDetailsResponseModel": {"required": ["arguments", "cloud_accounts", "created_at", "created_by", "engine", "execution_type", "job_id", "name", "policy_id", "policy_name", "status", "status_reason", "tenant_name", "updated_at", "updated_by"], "properties": {"job_id": {"type": "string", "description": "Job Id"}, "name": {"type": "string", "description": "Name of the Job"}, "status": {"type": "string", "description": "Status of job execution"}, "status_reason": {"type": "string", "description": "Reason for the job status"}, "engine": {"type": "string", "description": "Policy engine used for job execution"}, "arguments": {"type": "string", "description": "arguments provided for job execution"}, "cloud_accounts": {"type": "string", "description": "Cloud account used for job execution"}, "execution_type": {"type": "string", "description": "Policy execution type can be on demand or scheduled"}, "created_by": {"type": "string", "description": "Policy Job created by"}, "created_at": {"type": "string", "description": "Policy Job create time in UTC"}, "updated_by": {"type": "string", "description": "Policy Job updated by"}, "updated_at": {"type": "string", "description": "Policy Job update time in UTC"}, "tenant_name": {"type": "string", "description": "tenant name where job was created"}, "policy_id": {"type": "string", "description": "Policy id of the Policy executed"}, "policy_name": {"type": "string", "description": "Policy id of the Policy executed"}}, "type": "object"}, "KeyValuePair": {"properties": {"key": {"type": "string", "description": "Key of the pair"}, "value": {"type": "string", "description": "Value of the pair"}}, "type": "object"}, "LegendDisplayConfiguration": {"properties": {"horizontalAlignment": {"type": "string", "example": "Left", "enum": ["Left", "Center", "Right"], "x-cs-enum-type": "HorizontalAlignment"}, "verticalAlignment": {"type": "string", "example": "Top", "enum": ["Top", "Middle", "Bottom"], "x-cs-enum-type": "VerticalAlignment"}, "fontSize": {"type": "string", "description": "Legend Text Size", "example": "Small", "enum": ["Small", "Medium", "Large"], "x-cs-enum-type": "LegendDisplayFontSizeSelection"}, "enabled": {"type": "boolean", "description": "Legend visibility"}}, "type": "object"}, "LicenseBenefitHubDiscountsRequest": {"required": ["currency", "limit", "page"], "properties": {"page": {"type": "integer", "description": "page number.Example 'page':'1'"}, "limit": {"type": "integer", "description": "records limits.Example 'limit':'10'"}, "currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}, "cloud_provider": {"type": "string", "description": "Cloud Provider for the cloud account", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}}, "type": "object"}, "LicenseBenefitHubDiscountsResponse": {"properties": {"total_count": {"type": "integer", "description": "total count of records"}, "page_count": {"type": "integer", "description": "total number of page count"}, "summary_data": {"type": "array", "description": "Data Summary", "items": {"$ref": "#/definitions/LicenseSummaryData"}}}, "type": "object"}, "LicenseBenefitSavingRequest": {"required": ["currency", "tenant_id"], "properties": {"currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}, "service_names": {"type": "array", "items": {"type": "string", "description": "Cloud Provider for the cloud account", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}}, "tenant_id": {"type": "array", "description": "Specify the tenant ID. This is a unique ID  and can be retrieved using the List Tenants API.", "items": {"type": "string"}}}, "type": "object"}, "LicenseBenefitSavingResponse": {"properties": {"recommendations_count": {"type": "integer", "description": "Recommendations Count"}, "impacted_resource_count": {"type": "integer", "description": "Impacted Resource Count"}, "potential_cost_saving": {"type": "string", "description": "Potential Cost Saving"}, "savings_percentage": {"type": "number", "description": "Savings Percentage"}, "info": {"type": "string", "description": "Potential Savings % compared to the Forecasted Spend"}}, "type": "object"}, "LicenseSummaryData": {"properties": {"virtual_machine_name": {"type": "string", "description": "Virtual Machine Name"}, "virtual_machine_id": {"type": "string", "description": "Virtual Machine ID"}, "azure_hybrid_benefit": {"type": "string", "description": "Azure Hybrid Benefit"}, "resource_location": {"type": "string", "description": "Resource Location"}, "recommendation_id": {"type": "string", "description": "Recommendation ID"}, "cloud_provider": {"type": "string", "description": "Cloud Provider for the cloud account", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "potential_cost_saving": {"type": "number", "description": "Potential Cost Saving"}, "service_account_name": {"type": "string", "description": "Service Account Name"}, "tenant_name": {"type": "string", "description": "Tenant Name"}, "tenant_id": {"type": "string", "description": "Tenant ID"}, "subscription_name": {"type": "string", "description": "Subscription Name"}, "subscription_id": {"type": "string", "description": "Subscription Id"}, "cloud_account_id": {"type": "string", "description": "Cloud Account ID"}, "info": {"type": "string", "description": "Potential Savings % compared to the Forecasted Spend"}, "savings_percentage": {"type": "number", "description": "Savings Percentage"}}, "type": "object"}, "ListActivitiesResponseDataModel": {"required": ["activities"], "properties": {"activities": {"type": "array", "description": "List of configured activities", "items": {"$ref": "#/definitions/ListDataModel"}}}, "type": "object"}, "ListActivityInsightsRequest": {"required": ["category", "cloud_account_id", "granularity", "user_name"], "properties": {"cloud_account_id": {"type": "string", "description": "Specify the Cloud account ID. This is a unique ID and can be retrieved from the List Metric Anomalies by Cloud Account API."}, "granularity": {"type": "string", "description": "Specify the granularity", "example": "weekly", "enum": ["weekly", "daily", "monthly"], "x-cs-enum-type": "Granularity"}, "user_name": {"type": "string", "description": "Specify the User name. This can be retrieved using the List Activity Insights by User API."}, "category": {"type": "string", "description": "Specify the Category. ", "example": "Frequent_Activity", "enum": ["Frequent_Activity", "Multiple_Events_by_Newuser", "Multiple_IAM_Changes", "Multiple_Login_Failures", "Multiple_Termination_Analysis", "Odd_Time_Activity", "Security_Group_Rule_Changes"], "x-cs-enum-type": "ActivityCategory"}}, "type": "object"}, "ListActivityInsightsResponse": {"required": ["data", "message"], "properties": {"message": {"type": "string", "description": "Message of the list call for activity insights"}, "data": {"type": "array", "description": "Activity Insights Data", "items": {"type": "object"}}}, "type": "object"}, "ListAlertTemplates": {"required": ["message", "metric_alert_templates", "page_count", "total_count"], "properties": {"message": {"type": "string"}, "total_count": {"type": "integer", "description": "total records count"}, "page_count": {"type": "integer", "description": "Count of number of pages"}, "metric_alert_templates": {"type": "array", "items": {"type": "object"}}}, "type": "object"}, "ListAnomalyRecommendationsRequest": {"required": ["cloud_account_id"], "properties": {"cloud_account_id": {"type": "string", "description": "Specify the Cloud account ID. This is a unique ID and can be obtained from the List Metric Anomalies by Cloud Account API."}}, "type": "object"}, "ListAnomalyRecommendationsResponse": {"required": ["data"], "properties": {"data": {"type": "array", "description": "Recommendation Data", "items": {"$ref": "#/definitions/RecommendationsData"}}}, "type": "object"}, "ListBarChartResponse": {"required": ["Usage", "cloud_account_filter"], "properties": {"Usage": {"type": "array", "description": "Usage details", "items": {"type": "object"}}, "cloud_account_filter": {"type": "array", "description": "Service Account Filters available", "items": {"type": "object"}}}, "type": "object"}, "ListBlueprintDetails": {"required": ["blueprints", "page_count", "total_count"], "properties": {"page_count": {"type": "integer", "description": "Page count"}, "total_count": {"type": "integer", "description": "Total count"}, "blueprints": {"type": "array", "description": "Blueprints Details", "items": {"$ref": "#/definitions/BlueprintDetails"}}}, "type": "object"}, "ListBudgetsModel": {"required": ["actual_amount", "budget_amount", "budget_frequency", "budget_id", "budget_name", "budget_type", "budget_uri", "created_at", "currency", "end_date", "forecasted_amount", "metadata", "start_date", "status"], "properties": {"budget_name": {"type": "string", "description": "budget name"}, "budget_type": {"type": "string", "description": "budget type"}, "budget_frequency": {"type": "string", "description": "Specify the budget frequency. Example: 'budget frequency':'Daily' Allowed values - Daily,Monthly,Quarterly,Annually"}, "budget_amount": {"type": "number", "description": "budget amount"}, "actual_amount": {"type": "number", "description": "budget actual amount"}, "forecasted_amount": {"type": "number", "description": "budget forecasted amount"}, "currency": {"type": "string", "description": "budget currency"}, "start_date": {"type": "string", "description": "budget start data"}, "end_date": {"type": "string", "description": "budget end date"}, "last_threshold": {"type": "string", "format": "date-time", "description": "last threshold"}, "status": {"type": "string", "description": "budget created status"}, "budget_uri": {"type": "string", "description": "budget uri"}, "created_at": {"type": "string", "description": "budget created at"}, "metadata": {"type": "object", "description": "metadata to maintain step"}, "budget_id": {"type": "string", "description": "budget id"}, "budget_engine": {"type": "string", "description": "budget engine can be Cloud_Native or System", "example": "Cloud_Native", "enum": ["Cloud_Native", "System"], "x-cs-enum-type": "BudgetEngine"}, "budget_scope": {"type": "string", "description": "budget scope", "example": "cloud", "enum": ["cloud", "tenant", "custom"], "x-cs-enum-type": "BudgetScope"}, "budget_scope_details": {"description": "scope of the budget further defined for each scope", "$ref": "#/definitions/BudgetScopeDetails"}}, "type": "object"}, "ListCategoryActivityInsights": {"required": ["data", "message"], "properties": {"message": {"type": "string", "description": "Message of the list category for user in activity insights"}, "data": {"type": "array", "description": "Category Details for users", "items": {"type": "string"}}}, "type": "object"}, "ListCategoryMetricAnomalies": {"required": ["data", "message"], "properties": {"message": {"type": "string", "description": "Message of the list category call for metric anomalies"}, "data": {"type": "object", "description": "Category Data"}}, "type": "object"}, "ListCloudAccountConfiguration": {"required": ["cloud_account_configuration", "message", "page_count", "total_count"], "properties": {"message": {"type": "string"}, "total_count": {"type": "integer", "description": "total records count"}, "page_count": {"type": "integer", "description": "Count of number of pages"}, "cloud_account_configuration": {"type": "array", "items": {"type": "object"}}}, "type": "object"}, "ListCloudAccountMetricAnomalies": {"required": ["data", "message"], "properties": {"message": {"type": "string", "description": "Message of the list cloud account for metric anomalies"}, "data": {"type": "object", "description": "Cloud Account Details"}}, "type": "object"}, "ListContext": {"properties": {"batch_size": {"type": "integer", "description": "Max number of ids in the response"}, "batch_offset": {"type": "integer", "description": "Offset of batches into the results. First batch is 0"}, "total": {"type": "integer", "description": "Total number of results"}}, "type": "object"}, "ListDataModel": {"required": ["created_by", "id", "operation_name", "resource", "resource_type", "scope", "status"], "properties": {"id": {"type": "string", "description": "ID of the configured activity"}, "operation_name": {"type": "string", "description": "Operation name of the activity"}, "resource_type": {"type": "string", "description": "Resource type of the activity"}, "resource": {"type": "string", "description": "Resource name such as Instances/ Virtual Machines"}, "scope": {"type": "string", "description": "Scope under which the activity is created. Eg: tenant/account/cloud_account"}, "status": {"type": "string", "description": "Status of the activity i.e active/inactive"}, "created_by": {"type": "string", "description": "Name of the user who created the activity"}}, "type": "object"}, "ListDetailedResponse": {"properties": {"results": {"type": "array", "description": "List of result identifiers", "items": {"$ref": "#/definitions/RecordIdentity"}}, "next_list_context": {"description": "List context", "$ref": "#/definitions/ListContext"}}, "type": "object"}, "ListIdentifierWiseRequest": {"required": ["cloud_account_id", "currency", "date_filter", "identifier", "tenant_id"], "properties": {"cloud_account_id": {"type": "array", "description": "Cloud account id should be given as input for Account visibility & for Tenant visibility 'all' should be given as input. Example - 'cloud_account_id':['60054aa7a1a7d4774912d09c']", "items": {"type": "string"}}, "date_filter": {"type": "array", "description": "Date Filters", "items": {"type": "string", "description": "Date Filter to select", "example": "current_month", "enum": ["current_month", "current_month_minus_1", "current_month_minus_2", "current_month_minus_3", "current_month_minus_4", "current_month_minus_5", "current_month_minus_6", "current_month_minus_7", "current_month_minus_8", "current_month_minus_9", "current_month_minus_10", "current_month_minus_11", "current_month_minus_12"], "x-cs-enum-type": "DashboardDateFilter"}}, "currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}, "tenant_id": {"type": "string", "description": "Tenant Id. Example: 'tenant_id':'5de8cc12765aa00a18b888c9'"}, "identifier": {"type": "string", "description": "identifier based on which the billing data can be grouped.Example 'identifier':'LinkedAccount'", "example": "ProductCategory", "enum": ["ProductCategory", "Region", "Tags", "Location", "LinkedAccount", "ResourceGroup", "Summary"], "x-cs-enum-type": "GroupingIdentifier"}, "service_name": {"type": "string", "description": "Cloud Service Name.Example 'service_name':'AWS'", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "LinkedAccount": {"type": "array", "description": "Please change this key with the same value given in the identifier field. Available filter in AWS - LinkedAccount, Region, ProductCategory and Tags. Available filter in Azure - ProductCategory, ResourceGroup, Location and Tags. Available filter in GCP - ProductCategory, Location and Tags. All - All the identifier value. Example 'LinkedAccount':'all'", "items": {"type": "string"}}}, "type": "object"}, "ListLockConfigRuleResponse": {"properties": {"lock_rules": {"type": "array", "items": {"$ref": "#/definitions/ListLockRuleModel"}}}, "type": "object"}, "ListLockRuleModel": {"required": ["applicability_by", "cloud", "config_rule_id", "is_active", "lock_type", "tenant_id", "tenant_name"], "properties": {"tenant_name": {"type": "string", "description": "cloud_account_name"}, "tenant_id": {"type": "string", "description": "cloud_account_name"}, "cloud_account_id": {"type": "string", "description": "cloud_acccount_id"}, "cloud_account_name": {"type": "string", "description": "cloud_account_name"}, "cloud": {"type": "string", "description": "cloud name"}, "applicability_by": {"description": "filters for cloud _account_scope", "$ref": "#/definitions/FilterData"}, "lock_type": {"type": "string", "description": "lock type"}, "config_rule_id": {"type": "string", "description": "cloud_acccount_id"}, "is_active": {"type": "boolean", "description": "Flag to identify config rule is active or not"}}, "type": "object"}, "ListMetricAnomaliesRequest": {"required": ["category", "cloud_account_id", "service", "span"], "properties": {"cloud_account_id": {"type": "string", "description": "Specify the Cloud account ID. This is a unique ID and can be retrieved from the List Metric Anomalies by Cloud Account API."}, "cloud_account_name": {"type": "string", "description": "Specify the Cloud Account name. This is a unique ID and can be retrieved from the List Metric Anomalies by Cloud Account API."}, "span": {"type": "string", "description": "Specify the granularity", "example": "weekly", "enum": ["weekly", "daily", "monthly"], "x-cs-enum-type": "Granularity"}, "service": {"type": "string", "description": "Specify the Cloud service name", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "category": {"type": "string", "description": "Specify the Category. Accepted values - Bucket, Compute, Databases, Instances"}}, "type": "object"}, "ListMetricAnomaliesResponse": {"required": ["data", "message"], "properties": {"message": {"type": "string", "description": "Message of the list call for metric anomalies"}, "data": {"type": "array", "description": "Metric Anomalies Data", "items": {"type": "object"}}}, "type": "object"}, "ListOperationsResponse": {"required": ["data"], "properties": {"data": {"type": "array", "description": "Operations List", "items": {"type": "string"}}}, "type": "object"}, "ListPieChartResponse": {"required": ["account_and_identifier_wise", "cloud_account_filter", "identifier_filter", "identifier_wise"], "properties": {"identifier_wise": {"type": "array", "description": "Pie Chart representation", "items": {"type": "object"}}, "account_and_identifier_wise": {"type": "array", "description": "Table Representation", "items": {"type": "object"}}, "cloud_account_filter": {"type": "array", "description": "Service Account Filters available", "items": {"type": "object"}}, "identifier_filter": {"type": "array", "description": "Identifier Filters available", "items": {"type": "object"}}}, "type": "object"}, "ListPolicyRecommendationsResponse": {"required": ["actions", "classification", "cloud_account_id", "cloud_account_name", "created_at", "description", "impact", "name", "page_count", "policy_description", "policy_id", "policy_name", "resource_counts", "resources", "service_name", "status", "sub_classification", "tenant_name", "total_count"], "properties": {"policy_id": {"type": "array", "description": "Policy ID", "items": {"type": "string"}}, "policy_name": {"type": "string", "description": "Policy Name"}, "policy_description": {"type": "string", "description": "Policy Description"}, "name": {"type": "string", "description": "Name of the policy recommendation"}, "status": {"type": "string", "description": "Status"}, "impact": {"type": "string", "description": "Impact"}, "classification": {"type": "string", "description": "Oscar Classification"}, "sub_classification": {"type": "string", "description": "Sub classification of the above classification"}, "cloud_account_id": {"type": "string", "description": "Cloud Account ID"}, "cloud_account_name": {"type": "string", "description": "Cloud Account Name"}, "service_name": {"type": "string", "description": "Cloud Service Name"}, "tenant_name": {"type": "string", "description": "Tenant Name"}, "created_at": {"type": "string", "description": "Time of creation"}, "resource_counts": {"description": "Count of the resource that are open", "$ref": "#/definitions/ResourceCount"}, "description": {"type": "string", "description": "Description of the policy"}, "actions": {"type": "array", "description": "Action to be taken for that policy recommendation", "items": {"$ref": "#/definitions/ActionDetails"}}, "total_count": {"type": "integer", "description": "Total count"}, "page_count": {"type": "integer", "description": "Page count"}, "resources": {"type": "array", "description": "Resources Details", "items": {"type": "object"}}}, "type": "object"}, "ListRIRecommendationsRequest": {"required": ["currency", "term"], "properties": {"currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}, "services": {"type": "array", "items": {"type": "string", "description": "Cloud Provider for the cloud account", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}}, "term": {"type": "string", "description": "Year, it can be 1 or 3"}, "payment_option": {"type": "string", "description": "Select a payment option, it can be No_Upfront, Partial_Upfront or All_Upfront. payment_option: No_Upfront", "default": "No_Upfront"}}, "type": "object"}, "ListRIRecommendationsResponse": {"properties": {"total_count": {"type": "integer", "description": "Total count"}, "page_count": {"type": "integer", "description": "Page wise count"}, "recommendations": {"type": "array", "description": "Recommendations suggested", "items": {"$ref": "#/definitions/Recommendations"}}}, "type": "object"}, "ListRecommendationByAccountResponse": {"required": ["page_count", "recommendations", "total_count"], "properties": {"page_count": {"type": "integer", "description": "Page count"}, "total_count": {"type": "integer", "description": "Total count"}, "recommendations": {"type": "array", "description": "Recommendation Details", "items": {"$ref": "#/definitions/RecommendationByAccount"}}}, "type": "object"}, "ListRecommendationByCategoryResponse": {"required": ["page_count", "recommendations", "total_count"], "properties": {"page_count": {"type": "integer", "description": "Page count"}, "total_count": {"type": "integer", "description": "Total count"}, "recommendations": {"type": "array", "description": "Recommendation Details", "items": {"$ref": "#/definitions/RecommendationByCategory"}}}, "type": "object"}, "ListRecommendationsRequest": {"required": ["cloud_account_id"], "properties": {"page": {"type": "integer", "description": "page number.Example 'page': 1"}, "limit": {"type": "integer", "description": "records limits. Example 'limit': 10"}, "classification": {"type": "string", "description": "Classifications based on OSCAR pillars. Accepted values: Operation, Security, Cost, Access, Resource"}, "sub_classification": {"type": "string", "description": "Sub-Classification based on the Classification selected.\n                                                                                                    Accepted Values:\n                                                                                                        \"Operation\": Performance, Availability, Standards, Logging, Monitoring\n                                                                                                        \"Security\": Data, Network, Host, Application, End Point protection, Standards\n                                                                                                        \"Cost\": Orphaned, Config, Idle, Underutilized, Anomaly, Billing, Budget, Overutilized, Optimized\n                                                                                                        \"Access\": Standards, Utilization\n                                                                                                        \"Resource\": Naming Standards, Tag Pattern, Locks"}, "recommendation_group": {"type": "string", "description": "Mention the Recommendation group. Accepted values: Policy, Advisor, Right-Size"}, "status": {"type": "string", "description": "Status. Acceptable values: open, resolved, skipped, system_skipped"}, "cloud_account_id": {"type": "string", "description": "Specify the Cloud account ID. This can be retrieved from  List Cloud account API call."}, "service_name": {"type": "string", "description": "Cloud Service Name. Example: 'service_name': 'AWS'/'Azure'/'GCP'"}}, "type": "object"}, "ListRecommendationsResponse": {"required": ["page_count", "recommendations", "total_count"], "properties": {"total_count": {"type": "integer", "description": "Total count"}, "page_count": {"type": "integer", "description": "Page count"}, "recommendations": {"type": "array", "description": "Recommendations", "items": {"$ref": "#/definitions/Recommendation"}}}, "type": "object"}, "ListRecommendationsTenantRequest": {"properties": {"page": {"type": "integer", "description": "page number.Example 'page': 1"}, "limit": {"type": "integer", "description": "records limits.Example 'limit': 10"}, "classifications": {"type": "string", "description": "Classifications based on OSCAR pillars. Accepted values: Operation, Security, Cost, Access, Resource"}, "sub_classification": {"type": "string", "description": "Sub-Classification based on the Classification selected.\n                                                                                                          Accepted Values:\n                                                                                                              \"Operation\": Performance, Availability, Standards, Logging, Monitoring\n                                                                                                              \"Security\": Data, Network, Host, Application, End Point protection, Standards\n                                                                                                              \"Cost\": Orphaned, Config, Idle, Underutilized, Anomaly, Billing, Budget, Overutilized, Optimized\n                                                                                                              \"Access\": Standards, Utilization\n                                                                                                              \"Resource\": Naming Standards, Tag Pattern, Locks"}, "service_name": {"type": "string", "description": "Name of the Cloud. Accepted values - AWS, Azure, GCP"}, "status": {"type": "string", "description": "Status. Acceptable values: open, resolved, skipped, system_skipped"}, "service_account_id": {"type": "string", "description": "Mention the Cloud Account ID. Cloud Account ID can be retrieved from List Cost Savings Account Summary call."}, "currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}}, "type": "object"}, "ListRecommendationsTenantResponse": {"required": ["page_count", "recommendations", "total_count"], "properties": {"total_count": {"type": "integer", "description": "Total count"}, "page_count": {"type": "integer", "description": "Page count"}, "recommendations": {"type": "array", "description": "Recommendations", "items": {"$ref": "#/definitions/RecommendationTenant"}}}, "type": "object"}, "ListRecommendationsViewResponse": {"required": ["classification", "cloud_account_id", "cloud_account_name", "cost_savings", "created_at", "description", "id", "impact", "name", "page_count", "policy_id", "policy_name", "projected_cost_savings_month", "resource_counts", "resources", "service_name", "source", "status", "sub_classification", "tenant_name", "total_count"], "properties": {"id": {"type": "string", "description": "Recommendation id"}, "policy_id": {"type": "string", "description": "Policy Id"}, "policy_name": {"type": "string", "description": "Policy Name"}, "name": {"type": "string", "description": "Name"}, "status": {"type": "string", "description": "Status"}, "impact": {"type": "string", "description": "Impact based on recommendation"}, "classification": {"type": "string", "description": "Classification"}, "sub_classification": {"type": "string", "description": "Sub Classification based on classification"}, "cloud_account_id": {"type": "string", "description": "Cloud account id"}, "cloud_account_name": {"type": "string", "description": "Cloud Account Name"}, "tenant_name": {"type": "string", "description": "Tenant Name"}, "service_name": {"type": "string", "description": "Cloud Service Name"}, "source": {"type": "string", "description": "Source"}, "created_at": {"type": "string", "description": "Time of creation"}, "projected_cost_savings_month": {"type": "string", "description": "Projected Cost Saving per Month"}, "resource_counts": {"description": "The resources that are open based on recommendation", "$ref": "#/definitions/ResourceCount"}, "description": {"type": "string", "description": "Description"}, "cost_savings": {"description": "Cost Saving based on recommendation", "$ref": "#/definitions/CostSavings"}, "total_count": {"type": "integer", "description": "Total Count"}, "page_count": {"type": "integer", "description": "Page Count"}, "resources": {"type": "array", "description": "Resources", "items": {"type": "object"}}}, "type": "object"}, "ListReservationsResponse": {"required": ["expiring_in_thirty_days", "filters", "net_savings", "on_demand_cost", "page_count", "potential_cost_savings_recommended", "reservation_cost", "reservations", "total_count"], "properties": {"filters": {"description": "Filters available", "$ref": "#/definitions/FilterValue"}, "net_savings": {"type": "integer", "description": "Net savings value"}, "expiring_in_thirty_days": {"type": "integer", "description": "How many days are left out for expiry in that month"}, "on_demand_cost": {"type": "integer", "description": "On Demand Cost Value"}, "reservations": {"type": "array", "description": "Reservation", "items": {"$ref": "#/definitions/ReservationDetails"}}, "page_count": {"type": "integer", "description": "Page Count"}, "reservation_cost": {"type": "integer", "description": "Reservation Cost Value"}, "total_count": {"type": "integer", "description": "Total Count"}, "potential_cost_savings_recommended": {"type": "number", "description": "Cost saved based on recommendation"}}, "type": "object"}, "ListReservationsServiceAccountResponse": {"required": ["cloud_account_details", "overview_details", "usage_details", "utilization"], "properties": {"cloud_account_details": {"description": "Cloud Account Details", "$ref": "#/definitions/CloudAccountDetailsExtended"}, "utilization": {"type": "array", "description": "Utilization", "items": {"$ref": "#/definitions/UtilizationDetails"}}, "overview_details": {"description": "Overview", "$ref": "#/definitions/OverviewDetails"}, "usage_details": {"description": "Usage details", "$ref": "#/definitions/UsageDetails"}}, "type": "object"}, "ListResourceTagKeys": {"properties": {"tag_keys": {"type": "array", "items": {"type": "string"}}}, "type": "object"}, "ListResources": {"properties": {"resources": {"type": "array", "items": {"type": "string"}}}, "type": "object"}, "ListResponse": {"properties": {"results": {"type": "array", "description": "List of result identifiers", "items": {"type": "string"}}, "next_list_context": {"description": "List context", "$ref": "#/definitions/ListContext"}}, "type": "object"}, "ListRole": {"required": ["id", "name"], "properties": {"name": {"type": "string", "description": "Name of the Role assigned to the UserGroup under a tenant"}, "id": {"type": "string", "description": "ID of the Role assigned to the UserGroup under a tenant"}}, "type": "object"}, "ListScheduleResponse": {"required": ["page_count", "schedules", "total_count"], "properties": {"page_count": {"type": "integer", "description": "Page count"}, "total_count": {"type": "integer", "description": "Total count"}, "schedules": {"type": "array", "description": "Schedule Details", "items": {"$ref": "#/definitions/ScheduleData"}}}, "type": "object"}, "ListTagConfigRuleResponse": {"properties": {"tag_rules": {"type": "array", "items": {"$ref": "#/definitions/ListTagRuleModel"}}}, "type": "object"}, "ListTagRuleModel": {"required": ["applicability_by", "cloud", "config_rule_id", "is_active", "resources", "tags", "tenant_id", "tenant_name"], "properties": {"tenant_name": {"type": "string", "description": "cloud_account_name"}, "tenant_id": {"type": "string", "description": "cloud_account_name"}, "cloud_account_id": {"type": "string", "description": "cloud_acccount_id"}, "cloud_account_name": {"type": "string", "description": "cloud_account_name"}, "cloud": {"type": "string", "description": "cloud name"}, "resources": {"type": "array", "description": "Displays the list of resources", "items": {"type": "string"}}, "tags": {"type": "array", "description": "applied tags for lock", "items": {"type": "string"}}, "applicability_by": {"description": "filters for cloud _account_scope", "$ref": "#/definitions/FilterData"}, "config_rule_id": {"type": "string", "description": "cloud_acccount_id"}, "is_active": {"type": "boolean", "description": "Flag to identify config rule is active or not"}}, "type": "object"}, "ListTenantResponse": {"required": ["tenants"], "properties": {"tenants": {"type": "array", "description": "Tenants List.", "items": {"$ref": "#/definitions/TenantDetails"}}}, "type": "object"}, "ListUser": {"required": ["id", "name"], "properties": {"name": {"type": "string", "description": "Name of the User assigned to the UserGroup under a tenant"}, "id": {"type": "string", "description": "ID of the User assigned to the UserGroup under a tenant"}}, "type": "object"}, "ListUserActivityInsights": {"required": ["data", "message"], "properties": {"message": {"type": "string", "description": "Message of the list user for activity insights"}, "data": {"type": "array", "description": "User Details", "items": {"type": "string"}}}, "type": "object"}, "MarkupDetails": {"required": ["applicable_to", "end_date", "markup_amount", "markup_type", "rule_name", "rule_scope", "rule_type", "service", "start_date"], "properties": {"start_date": {"type": "string", "format": "date", "description": "Start date of the rule"}, "end_date": {"type": "string", "format": "date", "description": "End date for that rule"}, "rule_name": {"type": "string", "description": "Rule name. Enter an existing Rule name or else a new one will be created"}, "rule_scope": {"type": "string", "description": "Scope of the rule. This field cannot be updated use the same Rule Scope. If you want to update this create a new Rule", "example": "tenant", "enum": ["tenant", "cloud_account"], "x-cs-enum-type": "DiscountMarkupRuleScope"}, "rule_type": {"type": "string", "description": "Type of the markup/discount rule", "example": "discount", "enum": ["discount", "markup", "RI_markup"], "x-cs-enum-type": "MarkupRuleType"}, "is_active": {"type": "boolean", "description": "States if the rule is active or not"}, "markup_type": {"type": "string", "description": "Type of the markup", "example": "fixed_amount", "enum": ["fixed_amount", "percentage"], "x-cs-enum-type": "DiscountMarkupType"}, "markup_amount": {"type": "number", "description": "Markup/Discount amount depending on the  markup type selected"}, "service": {"type": "string", "description": "Cloud Provider to select", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "applicable_to": {"description": "It is applicable to which cloud account or tenant based on rule scope. Cloud account Id can be retrieved from  api(/governance/account/{tenant_id}/get/cloud_accounts) This field cannot be updated enter the same one as entered before If you want to update this create a new Rule ", "$ref": "#/definitions/ApplicableToDetails"}}, "type": "object"}, "MasterAccountBatchResponse": {"properties": {"results": {"type": "object", "description": "Map from identifier to response model", "additionalProperties": {"$ref": "#/definitions/MasterAccountDetails"}}}, "type": "object"}, "MasterAccountDeleteResponse": {"properties": {"message": {"type": "string", "description": "Response message."}}, "type": "object"}, "MasterAccountDetails": {"properties": {"name": {"type": "string", "description": "Master account name"}, "require_access_key": {"type": "boolean", "description": "require access key"}, "is_full_access": {"type": "boolean", "description": "Whether full access or not."}, "status": {"type": "string", "description": "Master account status"}, "created_by": {"type": "string", "description": "Name of the user created this master account."}, "updated_by": {"type": "string", "description": "Name of the user last updated this master account."}, "updated_at": {"type": "string", "format": "date-time", "description": "DateTime in UTC when the master account was last updated."}, "created_at": {"type": "string", "format": "date-time", "description": "DateTime in UTC when the master account was created."}, "cost_settings": {"description": "Discount config info", "$ref": "#/definitions/CostSettingsModel"}, "subscription_info": {"description": "Subscription Info", "$ref": "#/definitions/SubscriptionModel"}, "mfa_enabled": {"type": "boolean", "description": "Checks if the account is mfa enabled or not"}, "segment": {"type": "string", "description": "segment"}, "industry": {"type": "string", "description": "industry"}, "country": {"type": "string", "description": "country"}, "size": {"type": "string", "description": "size"}, "region": {"type": "string", "description": "region"}, "custom_tags": {"type": "array", "description": "List of tag key/value pairs", "items": {"$ref": "#/definitions/KeyValuePair"}}, "hierarchy_level": {"type": "string", "description": "Hierarchy level"}, "parent_master_account_id": {"type": "string", "description": "ID of the parent master account."}, "metadata": {"description": "Additional metadata information of master account", "$ref": "#/definitions/MasterAccountMetadata"}}, "type": "object"}, "MasterAccountDetailsSortCriteria": {"required": ["column"], "properties": {"column": {"type": "string", "example": "CreatedAt", "enum": ["CreatedAt"], "x-cs-enum-type": "MasterAccountDetailsSortColumn"}, "ascending": {"type": "boolean"}}, "type": "object"}, "MasterAccountListFilters": {"properties": {"search": {"type": "string", "description": "Text query to search by name and status"}, "status": {"type": "string", "description": "Status of the master account", "example": "active", "enum": ["active", "inactive"], "x-cs-enum-type": "MasterAccountStatus"}, "account_status": {"type": "string", "description": "Status of the master account subscription", "example": "pending", "enum": ["pending", "active", "expired", "cancelled"], "x-cs-enum-type": "MasterAccountSubscriptionStatus"}, "auth_type": {"type": "string", "description": "Auth type of the master account", "example": "azure_active_directory", "enum": ["azure_active_directory", "corestack", "azure_sso", "AD_LDAP", "CAS", "Okta", "onelogin"], "x-cs-enum-type": "MasterAccountAuthType"}, "created_from": {"type": "string", "description": "Datetime string to filter accounts by created date. Format: yyyy-mm-dd hh:mm:ss.fff"}}, "type": "object"}, "MasterAccountListRequest": {"properties": {"list_context": {"description": "Optional list context", "$ref": "#/definitions/ListContext"}, "sort": {"type": "array", "description": "Sort criteria", "items": {"$ref": "#/definitions/MasterAccountDetailsSortCriteria"}}, "filters": {"description": "Filters for the request", "$ref": "#/definitions/MasterAccountListFilters"}}, "type": "object"}, "MasterAccountMetadata": {"properties": {"supported_bundles": {"type": "array", "description": "List of supported_bundles", "items": {"type": "string"}}}, "type": "object"}, "MasterAccountSummary": {"properties": {"id": {"type": "string", "description": "ID of the possible master account for the particular linked account."}, "name": {"type": "string", "description": "name of the master account."}, "project_name": {"type": "string", "description": "name of the project."}}, "type": "object"}, "MasterAccountTenantSummary": {"required": ["id"], "properties": {"id": {"type": "string", "description": "Tenant id"}, "name": {"type": "string", "description": "Name of Tenant"}}, "type": "object"}, "MasterAccountUserGroupSummary": {"properties": {"id": {"type": "string", "description": "UserGroup id"}, "name": {"type": "string", "description": "Name of UserGroup"}}, "type": "object"}, "MetaData": {"properties": {"file_name": {"type": "string", "description": "File name that is uploaded"}, "file_path": {"type": "string", "description": "Entire path of a file that is uploaded"}}, "type": "object"}, "MetaDataModel": {"required": ["tags"], "properties": {"tags": {"type": "object", "description": "template tags"}}, "type": "object"}, "MetricConfigItems": {"properties": {"EvaluationPeriods": {"type": "integer", "description": "Evaluation periods retrieved successfully"}, "Dimensions": {"type": "array", "description": "Dimensions retrieved successfully", "items": {"type": "string"}}, "AlarmActions": {"type": "array", "description": "Alarm actions retrieved successfully", "items": {"type": "string"}}, "AlarmDescription": {"type": "string", "description": "Alarm description retrieved successfully"}, "Namespace": {"type": "string", "description": "Namespace retrieved successfully"}, "Period": {"type": "integer", "description": "Period retrieved successfully"}, "ComparisonOperator": {"type": "string", "description": "Comparison Operator retrieved successfully"}, "Statistic": {"type": "string", "description": "Statistic retrieved successfully"}, "Threshold": {"type": "integer", "description": "Threshold retrieved successfully"}, "OKActions": {"type": "array", "description": "Okactions retrieved successfully", "items": {"type": "string"}}}, "type": "object"}, "MetricUpdateRequestModel": {"required": ["cloud_account_id", "metric_interval"], "properties": {"cloud_account_id": {"type": "string", "description": "ID of the cloud account available in Corestack. This can be retrieved from List Cloud Accounts API."}, "metric_interval": {"type": "string", "description": "Metric value (in hrs) to be defined.", "example": "24 Hrs(Daily)", "enum": ["24 Hrs(Daily)", "8 Hrs once", "4 Hrs once"], "x-cs-enum-type": "MetricInterval"}}, "type": "object"}, "MetricUpdateResponseModel": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Updated Metric Sync frequency for cloud account"}}, "type": "object"}, "MisconfigurationViolationsByCloudAccountWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "MisconfigurationViolationsByCloudAccountWidgetConfiguration"}, "MisconfigurationViolationsByCloudProviderWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "MisconfigurationViolationsByCloudProviderWidgetConfiguration"}, "MisconfigurationViolationsByRegionWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "MisconfigurationViolationsByRegionWidgetConfiguration"}, "MisconfigurationViolationsTrendWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "MisconfigurationViolationsTrendWidgetConfiguration"}, "ModelError": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Error response message."}}, "type": "object"}, "NotificationActivityResponseDataModel": {"required": ["emails", "exclude_me", "microsoft_teams_webhooks", "webhooks"], "properties": {"emails": {"type": "array", "description": "List of emails for notification", "items": {"type": "object"}}, "webhooks": {"type": "array", "description": "List of webhook urls", "items": {"type": "object"}}, "microsoft_teams_webhooks": {"type": "array", "description": "List of microsoft teams webhook urls", "items": {"type": "object"}}, "exclude_me": {"type": "string", "description": "To exclude the email id of the user who configures activity"}}, "type": "object"}, "NotificationConfigurationModel": {"required": ["name", "notification_details"], "properties": {"name": {"type": "string", "description": "notification name"}, "notification_details": {"type": "array", "description": "Notification Details", "items": {"$ref": "#/definitions/NotificationDetailsModel"}}}, "type": "object"}, "NotificationDetailsModel": {"required": ["notification_input", "notification_type"], "properties": {"notification_type": {"type": "string", "description": "notification type like emails/ITSM"}, "notification_input": {"description": "Notification Input", "$ref": "#/definitions/NotificationInputModel"}}, "type": "object"}, "NotificationInputModel": {"properties": {"emails": {"type": "array", "description": "Email id List", "items": {"type": "string"}}}, "type": "object"}, "NotificationMessageResponse": {"required": ["data", "message", "status"], "properties": {"status": {"type": "string", "description": "Status of the notification & message api"}, "message": {"type": "string", "description": "Message of the notification & message api"}, "data": {"type": "object", "description": "data for the notification & message api"}}, "type": "object"}, "NotificationSettingModel": {"properties": {"email_template": {"type": "string", "description": "Email Template"}, "header_logo": {"type": "string", "description": "Header Logo"}, "footer_text": {"type": "string", "description": "Footer text"}, "template_type": {"type": "string", "description": "Type of template"}, "email_settings": {"description": "Email settings", "$ref": "#/definitions/EmailSettingModel"}}, "type": "object"}, "OperationAccountModel": {"required": ["cloud_account_name", "count"], "properties": {"cloud_account_name": {"type": "string", "description": "cloud account name"}, "count": {"type": "integer", "description": "total count details"}}, "type": "object"}, "OperationPostureCloudCounts": {"properties": {"GCP": {"type": "number", "description": "GCP count"}, "AWS": {"type": "number", "description": "AWS count"}, "Azure": {"type": "number", "description": "Azure count"}, "OCI": {"type": "number", "description": "OCI count"}}, "type": "object"}, "OperationPostureCloudData": {"required": ["cloud_account_id", "cloud_account_name"], "properties": {"cloud_account_name": {"type": "string", "description": "cloud account name"}, "cloud_account_id": {"type": "string", "description": "cloud account id"}, "alerts": {"type": "integer", "description": "alerts count"}, "activities": {"type": "integer", "description": "activities cost"}, "automation_failures": {"type": "integer", "description": "automation count"}, "tenant_name": {"type": "string", "description": "Name of the tenant"}, "cloud": {"type": "string", "description": "cloud name"}}, "type": "object"}, "OperationPostureCloudProvider": {"properties": {"alerts": {"description": "alerts count", "$ref": "#/definitions/OperationPostureCloudCounts"}, "activities": {"description": "activities cost", "$ref": "#/definitions/OperationPostureCloudCounts"}, "automation_failures": {"description": "automation count", "$ref": "#/definitions/OperationPostureCloudCounts"}}, "type": "object"}, "OperationPostureRequest": {"properties": {"filter_by": {"type": "string", "description": "to filter data by cloud provider or cloud account wise or tenant.By default tenant wise data displayed", "example": "cloud_account", "enum": ["cloud_account", "cloud_provider", "tenant"], "x-cs-enum-type": "OperationPostureFilter"}, "tenant_ids": {"type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}, "service_name": {"type": "string", "description": "select the cloud account type", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "limit": {"type": "integer", "description": "Limit"}, "page": {"type": "integer", "description": "Page"}, "search": {"type": "string", "description": "Search by account_name wise"}}, "type": "object"}, "OperationPostureResponse": {"required": ["cloud_account_data", "clouds", "tenants", "total_count"], "properties": {"total_count": {"type": "integer", "description": "count details"}, "tenants": {"type": "array", "description": "List of tenant data", "items": {"$ref": "#/definitions/OperationPostureTenant"}}, "cloud_account_data": {"type": "array", "description": "List of cloud account data", "items": {"$ref": "#/definitions/OperationPostureCloudData"}}, "clouds": {"type": "array", "description": "List of tenant data", "items": {"$ref": "#/definitions/OperationPostureCloudProvider"}}}, "type": "object"}, "OperationPostureTenant": {"required": ["tenant_id", "tenant_name"], "properties": {"tenant_name": {"type": "string", "description": "Name of the tenant"}, "tenant_id": {"type": "string", "description": "Id of the tenant"}, "alerts": {"type": "integer", "description": "alerts count"}, "activities": {"type": "integer", "description": "activities cost"}, "automation_failures": {"type": "integer", "description": "automation count"}}, "type": "object"}, "OperationRegionModel": {"required": ["count", "region"], "properties": {"region": {"type": "string", "description": "region name"}, "count": {"type": "integer", "description": "total count details"}}, "type": "object"}, "OperationResourceGroupModel": {"required": ["count", "resource_group"], "properties": {"resource_group": {"type": "string", "description": "resource group name"}, "count": {"type": "integer", "description": "total count details"}}, "type": "object"}, "OperationResourceListModel": {"required": ["alert_type", "analysis", "blueprint_id", "cloud_account_id", "cloud_account_name", "description", "environment", "eventDataId", "event_action", "event_creation_time", "job_type", "location", "metric_name", "metric_value", "operator", "region", "resource", "resourceGroupId", "resourceId", "resource_group", "resource_name", "resource_type", "snooze", "status", "template_id", "threshold", "username", "windowSize", "zone"], "properties": {"cloud_account_name": {"type": "string", "description": "cloud account name"}, "cloud_account_id": {"type": "string", "description": "cloud account id"}, "tenant_name": {"type": "string", "description": "Name of the tenant"}, "tenant_id": {"type": "string", "description": "Id of the tenant"}, "username": {"type": "string", "description": "user name"}, "alert_type": {"type": "string", "description": "alert type"}, "eventDataId": {"type": "string", "description": "event data id"}, "resource_name": {"type": "string", "description": "resource_name"}, "region": {"type": "string", "description": "region name"}, "resource_group": {"type": "string", "description": "resource_group name"}, "zone": {"type": "string", "description": "zone name"}, "location": {"type": "string", "description": "location name"}, "resourceId": {"type": "string", "description": "resource id name"}, "resourceGroupId": {"type": "string", "description": "resource group id name"}, "status": {"type": "string", "description": "status"}, "description": {"type": "string", "description": "description"}, "resource": {"type": "string", "description": "resource"}, "event_action": {"type": "object", "description": "event_action"}, "resource_type": {"type": "string", "description": "resource_type name"}, "event_creation_time": {"type": "string", "description": "event creation time (UTC)"}, "metric_name": {"type": "string", "description": "metric name"}, "metric_value": {"type": "string", "description": "metric value"}, "threshold": {"type": "string", "description": "threshold"}, "operator": {"type": "string", "description": "operator"}, "windowSize": {"type": "string", "description": "windowSize"}, "snooze": {"type": "string", "description": "snooze"}, "analysis": {"type": "string", "description": "analysis"}, "environment": {"type": "string", "description": "environment"}, "action": {"type": "array", "description": "action", "items": {"type": "string"}}, "cloud": {"type": "string", "description": "cloud name"}, "job_type": {"type": "string", "description": "job type"}, "template_id": {"type": "string", "description": "Id of template"}, "blueprint_id": {"type": "string", "description": "Id of blueprint"}}, "type": "object"}, "OperationResourceModel": {"required": ["count", "resource"], "properties": {"resource": {"type": "string", "description": "resource name"}, "count": {"type": "integer", "description": "total count details"}}, "type": "object"}, "OperationVisibilityResponse": {"required": ["account_wise_count", "region_wise_count", "resource_group_wise_count", "resource_list_data", "resource_wise_count", "total_count", "zone_wise_count"], "properties": {"total_count": {"type": "integer", "description": "count details"}, "account_wise_count": {"type": "array", "description": "List of account wise count data", "items": {"$ref": "#/definitions/OperationAccountModel"}}, "resource_wise_count": {"type": "array", "description": "List of resource wise count data", "items": {"$ref": "#/definitions/OperationResourceModel"}}, "region_wise_count": {"type": "array", "description": "List of region wise count data", "items": {"$ref": "#/definitions/OperationRegionModel"}}, "resource_group_wise_count": {"type": "array", "description": "List of resource group wise data", "items": {"$ref": "#/definitions/OperationResourceGroupModel"}}, "zone_wise_count": {"type": "array", "description": "List of zone wise count data", "items": {"$ref": "#/definitions/ZoneModel"}}, "resource_list_data": {"type": "array", "description": "List of account wise count data", "items": {"$ref": "#/definitions/OperationResourceListModel"}}}, "type": "object"}, "OptimizationSummary": {"required": ["estimated_cost", "impacted_resources", "info", "message", "recommendations", "savings_percentage", "status", "total_Cost"], "properties": {"status": {"type": "string", "description": "Response status on cost dashboard summary"}, "message": {"type": "string", "description": "List dashboard summary"}, "total_Cost": {"type": "object", "description": "Total Cost"}, "recommendations": {"type": "object", "description": "Total Count"}, "savings_percentage": {"type": "string", "description": "Saving Percentage"}, "info": {"type": "string", "description": "Information"}, "estimated_cost": {"type": "number", "description": "forecasted cost"}, "impacted_resources": {"type": "object", "description": "Impacted resources"}}, "type": "object"}, "OrderHistoryReportModel": {"required": ["data"], "properties": {"data": {"type": "string", "description": "Order details"}}, "type": "object"}, "OverviewDetails": {"required": ["cloud_account_name", "expiry_date", "instance_flexibility", "number_of_RIs", "payment_option", "purchase_date", "region", "reservation_name", "reservation_sku", "reservation_type", "scope"], "properties": {"payment_option": {"type": "string", "description": "Payment method which is monthly or yearly"}, "instance_flexibility": {"type": "string", "description": "Instance Flexibility Should be on"}, "reservation_name": {"type": "string", "description": "Reservation Name"}, "reservation_type": {"type": "string", "description": "Reservation Type"}, "expiry_date": {"type": "string", "description": "Expiry date"}, "reservation_sku": {"type": "string", "description": "Reservation SKU details"}, "region": {"type": "string", "description": "Region where the resource is created"}, "cloud_account_name": {"type": "string", "description": "Name of the cloud account"}, "purchase_date": {"type": "string", "description": "Date of purchase"}, "number_of_RIs": {"type": "integer", "description": "How many RIs are present"}, "scope": {"type": "string", "description": "scope of the ri utilization"}}, "type": "object"}, "ParameterDetails": {"required": ["ansible", "chef", "puppet", "shell"], "properties": {"chef": {"type": "object", "description": "Input for the Chef Script to be executed"}, "shell": {"type": "object", "description": "Input for the Shell Script to be executed"}, "puppet": {"type": "object", "description": "Input for the Puppet Script to be executed"}, "ansible": {"type": "object", "description": "Input for the Ansible Script to be executed"}}, "type": "object"}, "PasswordResetRequest": {"properties": {"password": {"type": "string", "description": "Set new password"}, "reset_key": {"type": "string"}}, "type": "object"}, "PatchComplianceReportReq": {"required": ["cloud_account_id", "span", "tenant_id"], "properties": {"span": {"type": "string", "description": "span name", "example": "PreviousMonth", "enum": ["PreviousMonth", "PreviousTwoMonths", "CurrentMonth", "PreviousThreeMonths", "PreviousSixMonths"], "x-cs-enum-type": "PatchComplianceReportSpan"}, "cloud_account_id": {"type": "string", "description": "Specify the Azure Cloud Account ID. This can be fetched from List CloudAccounts API call."}, "tenant_id": {"type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}}, "type": "object"}, "PatchComplianceReportRes": {"required": ["data", "message", "status"], "properties": {"status": {"type": "string", "description": "status response"}, "message": {"type": "string", "description": "message response"}, "data": {"type": "object", "description": "compliance data"}}, "type": "object"}, "PatchManagementAwsPatchGroupBaselineData": {"properties": {"patch_group": {"type": "string", "description": "Name of the patch group registered with the patch baseline"}, "baseline_id": {"type": "string", "description": "ID of the patch baseline"}, "name": {"type": "string", "description": "Name of the patch baseline"}, "operating_system": {"type": "string", "description": "Operating system the patch baseline"}, "description": {"type": "string", "description": "Description of the patch baseline"}}, "type": "object"}, "PatchManagementAwsPlatformDetails": {"properties": {"version": {"type": "string", "description": "Version of the OS platform"}, "type": {"type": "string", "description": "Operating system platform type"}, "name": {"type": "string", "description": "Name of the operating system platform"}}, "type": "object"}, "PatchManagementAwsResourceDetails": {"properties": {"operation": {"type": "string", "description": "Type of patching operation that was performed"}, "snapshot_id": {"type": "string", "description": "ID of the patch baseline snapshot"}, "status": {"type": "string", "description": "Compliance status for the resource"}, "computer_name": {"type": "string", "description": "The fully qualified host name of the managed node"}, "reboot_option": {"type": "string", "description": "Reboot option specified in the patch baseline"}, "statistics": {"description": "AWS statistics details", "$ref": "#/definitions/PatchManagementAwsStatisticsDetails"}, "platform": {"description": "Platform details", "$ref": "#/definitions/PatchManagementAwsPlatformDetails"}, "patch_group_baseline_data": {"description": "Patch group details", "$ref": "#/definitions/PatchManagementAwsPatchGroupBaselineData"}}, "type": "object"}, "PatchManagementAwsStatisticsDetails": {"properties": {"installed_count": {"type": "integer", "description": "Number of patches from the patch baseline that are installed"}, "installed_other_count": {"type": "integer", "description": "Number of patches not specified in the patch baseline that are installed"}, "installed_pending_reboot_count": {"type": "integer", "description": "Number of patches installed by Patch Manager since the last time the managed node was rebooted"}, "installed_rejected_count": {"type": "integer", "description": "Number of Rejected Patches count"}, "missing_count": {"type": "integer", "description": "Number of patches from the baseline that are applicable for the managed node but not currently installed"}, "failed_count": {"type": "integer", "description": "Number of patches from the patch baseline that were attempted to be installed during the last patching operation, but failed to install"}, "unreported_not_applicable_count": {"type": "integer", "description": "Number of patches beyond the supported limit of NotApplicableCount that not reported by name to Inventory"}, "not_applicable_count": {"type": "integer", "description": "Number of patches from the patch baseline not applicable for the managed node"}, "critical_non_compliant_count": {"type": "integer", "description": "Number of patches per node that are specified as Critical for compliance reporting in the patch baseline not installed"}, "security_non_compliant_count": {"type": "integer", "description": "Number of patches per node that are specified as Security in a patch advisory not installed"}, "other_non_compliant_count": {"type": "integer", "description": "Number of patches per node that are specified as other than Critical or Security but not  compliant with the patch baseline"}}, "type": "object"}, "PatchManagementResourceHistory": {"properties": {"cloud_account_id": {"type": "string", "description": "ID of the cloud account"}, "cloud_native_resource_id": {"type": "string", "description": "Resource identifier id of the resource"}, "region": {"type": "string", "description": "Region name"}, "resource_category": {"type": "string", "description": "Name of the category"}, "resource_type": {"type": "string", "description": "Name of the component"}, "resource": {"type": "string", "description": "Name of the resource"}, "created_at": {"type": "string", "format": "date-time", "description": "Resource Patch history record creation time"}, "updated_at": {"type": "string", "format": "date-time", "description": "Resource Patch history last updated time"}, "last_no_reboot_install_operation_time": {"type": "string", "format": "date-time", "description": "Time of the last attempt to patch the managed node"}, "operation_start_time": {"type": "string", "format": "date-time", "description": "Patch operation started time for the node"}, "operation_end_time": {"type": "string", "format": "date-time", "description": "Patch operation completed time for the node"}, "AWS": {"description": "AWS patch details", "$ref": "#/definitions/PatchManagementAwsResourceDetails"}}, "type": "object"}, "PeriodicBackgroundJobPayloadBase": {"allOf": [{"$ref": "#/definitions/BackgroundJobPayloadBase"}, {"properties": {}, "type": "object"}]}, "PolicyCountModel": {"properties": {"violations": {"type": "string", "description": "Number of policies which are in violation status."}, "success": {"type": "string", "description": "Number of policies which are in success status."}, "error": {"type": "string", "description": "Number of policies which are in error status."}, "in_progress": {"type": "string", "description": "Number of policies which are in in_progress status."}, "none": {"type": "string", "description": "Number of policies which are not having any status or in none status"}}, "type": "object"}, "PolicyData": {"required": ["policy_id"], "properties": {"policy_id": {"type": "string", "description": "unique policy Id returned"}}, "type": "object"}, "PolicyDataList": {"required": ["content_type", "description", "display_name", "engine_type", "name", "policy_id", "scope", "services", "severity", "status", "uri"], "properties": {"policy_id": {"type": "string", "description": "Policy Id is unique identifier of a policy"}, "name": {"type": "string", "description": "Policy Name is unique can allow only"}, "display_name": {"type": "string", "description": "Display name of policy"}, "uri": {"type": "string", "description": "Unique URI for policy"}, "description": {"type": "string", "description": "A brief explanation of the policy."}, "status": {"type": "string", "description": "Indicates whether the policy is active or inactive."}, "services": {"type": "array", "description": "Displays the service associated with the policy, for example, AWS, AzureRM, Openstack., etc", "items": {"type": "string"}}, "engine_type": {"type": "string", "description": "Engine type of policy where it will execute"}, "content_type": {"type": "string", "description": "Content type of policy (Git or File)"}, "scope": {"type": "string", "description": "The scope of the policy Account scope - All users under that account will have access to view and execute Only Account admins can update/delete the policies, Tenant Scope - Users with access to the specific tenant will haveaccess to policies who can describe or execute policies. Tenant admins can  only update/delete. Private Scope - User who created will only have access"}, "severity": {"type": "string", "description": "Severity of policy such as low, medium and high"}, "has_recommendations": {"type": "boolean", "description": "is recommendations configured on failure of policy"}, "is_parameterized": {"type": "boolean", "description": "is parameter required to execute policy"}}, "type": "object"}, "PolicyDescription": {"properties": {"uri": {"type": "string", "description": "Unique URI for policy"}, "name": {"type": "string", "description": "The name of the policy without space or special character"}, "description": {"type": "string", "description": "A brief explanation of the policy"}, "parameters": {"type": "array", "items": {"$ref": "#/definitions/PolicyNamedParameter"}}, "created_at": {"type": "string", "format": "date-time"}, "services": {"type": "array", "items": {"type": "string", "description": "Displays the service associated with the policy", "example": "AWS", "enum": ["AWS", "Azure", "AzureStack", "Azure_EA", "Canvas_LMS", "GCP", "OCI", "Openstack", "OpenstackPublic"], "x-cs-enum-type": "PolicyServiceName"}}, "engine_type": {"type": "string", "description": "Engine type of the policy", "example": "corestack_policy", "enum": ["corestack_policy", "aws_organization_policy", "azure_policy", "chef_inspec", "congress", "aws_config", "gcp_organization_policy", "gcp_policy", "kubernetes_policy", "oracle_cloud_guard"], "x-cs-enum-type": "PolicyEngineType"}, "scope": {"type": "string", "description": "Scope of the policy", "example": "global", "enum": ["global", "account", "tenant", "user_private"], "x-cs-enum-type": "PolicyScope"}, "tenant_id": {"type": "string", "description": "ID of the tenant within the CoreStack account"}, "account_id": {"type": "string", "description": "Id of the CoreStack account under which this tenant resides."}, "classification": {"type": "string", "description": "Policies are classified based on the basis of the activity they perform. For example: Provisioning, Account Management, Utilization, etc."}, "sub_classification": {"type": "string", "description": "Sub classification for policy"}, "severity": {"type": "string", "description": "Risk of the best practice", "example": "low", "enum": ["low", "medium", "high"], "x-cs-enum-type": "PolicySeverityRisk"}, "recommendation_description": {"type": "string", "description": "Remediation description of the policy"}}, "type": "object"}, "PolicyDescriptionRequest": {"required": ["policy_uris"], "properties": {"policy_uris": {"type": "array", "description": "Unique URI for policy", "items": {"type": "string"}}}, "type": "object"}, "PolicyEngineUpdateRequest": {"required": ["preferred_policy_engine"], "properties": {"preferred_policy_engine": {"type": "string", "description": "Supported Policy engines are corestack_policy, aws_config and azure_policy", "example": "corestack_policy", "enum": ["corestack_policy", "aws_organization_policy", "azure_policy", "chef_inspec", "congress", "aws_config", "gcp_organization_policy", "gcp_policy", "kubernetes_policy", "oracle_cloud_guard"], "x-cs-enum-type": "PolicyEngineType"}}, "type": "object"}, "PolicyExecuteRequestModel": {"required": ["args", "cloud_accounts"], "properties": {"args": {"type": "object", "description": "arguments to execute policy for example values can be in the below format {'listOfAllowedSKUs':['Basic_A0']} or {'requiredRetentionDays':'365','effect':'AuditIfNotExists'} etc.The values are dynamic in nature can change from policy to policy.The arguments required can be changed in the policy content in the view policy api"}, "cloud_accounts": {"type": "array", "description": "cloud account details to execute the policy", "items": {"$ref": "#/definitions/ServiceAccountDetailModel"}}}, "type": "object"}, "PolicyExecuteResponseModel": {"required": ["job_id"], "properties": {"job_id": {"type": "string", "description": "Job identifier of the executed policy"}}, "type": "object"}, "PolicyExecutionRequest": {"required": ["cloud_account_id", "policy_uri"], "properties": {"policy_uri": {"type": "string", "description": "Unique URI for the policy"}, "cloud_account_id": {"type": "string", "description": "Account to execute the policy against"}, "params": {"type": "string", "description": "Policy execution parameters, encoded as a JSON string"}}, "type": "object"}, "PolicyFailureData": {"required": ["assessment_by", "policy_execution_status", "policy_job_id", "policy_name", "region", "resource_group", "status_reason"], "properties": {"policy_name": {"type": "string", "description": "policy job name"}, "policy_job_id": {"type": "string", "description": "policy job id"}, "policy_execution_status": {"type": "string", "description": "policy execution status"}, "status_reason": {"type": "string", "description": "status reason"}, "assessment_by": {"type": "string", "description": "assessment by"}, "region": {"type": "string", "description": "region"}, "resource_group": {"type": "string", "description": "resource group"}}, "type": "object"}, "PolicyJobExecutionStatusRequestModel": {"required": ["assessment_job_number", "policy_id"], "properties": {"assessment_job_number": {"type": "string", "description": "Specify the assessment_job_number.This can be fetched from List Compliance Control Assessment History API."}, "policy_id": {"type": "string", "description": "Specify the policy ID. This can be fetched from List compliance control mapping, get_on_audit_entries API."}}, "type": "object"}, "PolicyJobExecutionStatusResponseModel": {"required": ["failures", "page_count", "total_count"], "properties": {"total_count": {"type": "string"}, "page_count": {"type": "string", "description": "page count"}, "failures": {"type": "array", "description": "Reason for policy failure", "items": {"description": "policy reason", "$ref": "#/definitions/PolicyFailureData"}}}, "type": "object"}, "PolicyListResponse": {"required": ["policies"], "properties": {"policies": {"description": "Policy Metadata Info.", "$ref": "#/definitions/PolicyDataList"}}, "type": "object"}, "PolicyMetadata": {"properties": {"file": {"type": "string", "description": "Metadata about policy"}}, "type": "object"}, "PolicyNamedParameter": {"required": ["is_required", "name", "schema"], "properties": {"name": {"type": "string", "description": "Name of the parameter"}, "is_required": {"type": "boolean", "description": "Whether the parameter is required."}, "schema": {"$ref": "#/definitions/PolicyParameterBase"}}, "type": "object"}, "PolicyNamedParameterValidationRequest": {"required": ["params", "policy_uri"], "properties": {"policy_uri": {"type": "string", "description": "Unique URI for policy"}, "params": {"type": "string", "description": "Policy execution parameters, encoded as a JSON string"}}, "type": "object"}, "PolicyParameterArray": {"allOf": [{"$ref": "#/definitions/PolicyParameterBase"}, {"required": ["values_schema"], "properties": {"values_schema": {"$ref": "#/definitions/PolicyParameterBase"}}, "type": "object"}], "x-cs-type-name": "PolicyParameterArray"}, "PolicyParameterBase": {"required": ["__type"], "properties": {"description": {"type": "string", "description": "A brief explanation of the policy parameter"}, "default_value": {"type": "string", "description": "Default value of the parameter, encoded as a JSON string"}}, "discriminator": "__type", "type": "object", "x-cs-subtypes": [{"subtype_model": "PolicyParameterStringType", "subtype_name": "PolicyParameterStringType"}, {"subtype_model": "PolicyParameterNumberType", "subtype_name": "PolicyParameterNumberType"}, {"subtype_model": "PolicyParameterBooleanType", "subtype_name": "PolicyParameterBooleanType"}, {"subtype_model": "PolicyParameterArray", "subtype_name": "PolicyParameterArray"}, {"subtype_model": "PolicyParameterMap", "subtype_name": "PolicyParameterMap"}, {"subtype_model": "PolicyParameterObject", "subtype_name": "PolicyParameterObject"}, {"subtype_model": "PolicyParameterJsonBlob", "subtype_name": "PolicyParameterJsonBlob"}]}, "PolicyParameterBooleanType": {"allOf": [{"$ref": "#/definitions/PolicyParameterBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "PolicyParameterBooleanType"}, "PolicyParameterJsonBlob": {"allOf": [{"$ref": "#/definitions/PolicyParameterBase"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "PolicyParameterJsonBlob"}, "PolicyParameterMap": {"allOf": [{"$ref": "#/definitions/PolicyParameterBase"}, {"required": ["values_schema"], "properties": {"values_schema": {"$ref": "#/definitions/PolicyParameterBase"}}, "type": "object"}], "x-cs-type-name": "PolicyParameterMap"}, "PolicyParameterNumberType": {"allOf": [{"$ref": "#/definitions/PolicyParameterBase"}, {"properties": {"constraints": {"type": "array", "items": {"$ref": "#/definitions/PolicyParameterNumberTypeConstraintValue"}}}, "type": "object"}], "x-cs-type-name": "PolicyParameterNumberType"}, "PolicyParameterNumberTypeConstraintValue": {"properties": {"min": {"type": "integer", "description": "Minimum value of the parameter's constraint field"}, "max": {"type": "integer", "description": "Maximum value of the parameter's constraint field"}}, "type": "object"}, "PolicyParameterObject": {"allOf": [{"$ref": "#/definitions/PolicyParameterBase"}, {"properties": {"properties": {"type": "array", "items": {"$ref": "#/definitions/PolicyNamedParameter"}}}, "type": "object"}], "x-cs-type-name": "PolicyParameterObject"}, "PolicyParameterStringType": {"allOf": [{"$ref": "#/definitions/PolicyParameterBase"}, {"properties": {"constraints": {"type": "array", "items": {"$ref": "#/definitions/PolicyParameterStringTypeConstraintValue"}}}, "type": "object"}], "x-cs-type-name": "PolicyParameterStringType"}, "PolicyParameterStringTypeConstraintValue": {"properties": {"display_name": {"type": "string", "description": "Name of the allowed value of the parameter's constraint field"}, "value": {"type": "string", "description": "Value of the allowed value of the parameter's constraint field"}, "pattern": {"type": "string", "description": "RegEx pattern for the value of the parameter"}}, "type": "object"}, "PolicyRecommendationResponseModel": {"required": ["classification", "cloud", "cloud_account_id", "created_at", "impact", "policy_id", "recommendation_id", "recommendation_name", "status", "tenant_name"], "properties": {"recommendation_id": {"type": "string", "description": "unique recommendation Id"}, "recommendation_name": {"type": "string", "description": "recommendation name"}, "policy_id": {"type": "array", "description": "list of policy ids for which the recommendation exists", "items": {"type": "string"}}, "status": {"type": "string", "description": "resolution status of the recommendation the values will be open, resolved"}, "impact": {"type": "string", "description": "impact of recommended changes"}, "classification": {"type": "string", "description": "classified based on the kind of recommendation provided to the user can be cost, security etc"}, "cloud_account_id": {"type": "string", "description": "cloud account id impacted by the recommendation"}, "cloud": {"type": "string", "description": "cloud on which this account exits for which the recommendations exists"}, "tenant_name": {"type": "string", "description": "tenant for which the recommendation exits "}, "created_at": {"type": "string", "description": "UTC time at which the recommendation was created"}}, "type": "object"}, "PolicyRecommendationResponseModelList": {"required": ["recommendations"], "properties": {"recommendations": {"description": "Policy recommendation Info list", "$ref": "#/definitions/PolicyRecommendationResponseModel"}}, "type": "object"}, "PolicyRecommendationViewResponseModel": {"required": ["actions", "classification", "cloud", "cloud_account_id", "created_at", "description", "impact", "policy_id", "recommendation_id", "recommendation_name", "resources", "status", "tenant_name"], "properties": {"recommendation_id": {"type": "string", "description": "unique recommendation Id"}, "recommendation_name": {"type": "string", "description": "recommendation name"}, "policy_id": {"type": "array", "description": "list of policy ids for which the recommendation exists", "items": {"type": "string"}}, "status": {"type": "string", "description": "resolution status of the recommendation the values will be open, resolved"}, "impact": {"type": "string", "description": "impact of recommended changes"}, "classification": {"type": "string", "description": "classified based on the kind of recommendation provided to the user can be cost, security etc"}, "cloud_account_id": {"type": "string", "description": "cloud account id impacted by the recommendation"}, "cloud": {"type": "string", "description": "cloud on which this account exits for which the recommendations exists"}, "tenant_name": {"type": "string", "description": "tenant for which the recommendation exits "}, "created_at": {"type": "string", "description": "UTC time at which the recommendation was created"}, "description": {"type": "string", "description": "Description about the recommendation in details"}, "actions": {"type": "array", "description": "List of actions which can be performed to resolve the policy violations", "items": {"$ref": "#/definitions/RecommendationActionResponseModel"}}, "resources": {"type": "array", "description": "List of resources on which the recommendations can be performed", "items": {"$ref": "#/definitions/ResourceRecommendationModel"}}}, "type": "object"}, "PolicyRemovalResponse": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Delete Response message."}}, "type": "object"}, "PolicyViewResponse": {"required": ["category", "classification", "content", "content_type", "description", "engine_type", "git_content_path", "git_content_url", "git_content_username", "is_system_policy", "policy_id", "policy_name", "scope", "services", "severity", "status", "sub_classification", "uri"], "properties": {"policy_id": {"type": "string", "description": "The unique identifier created for each policy."}, "policy_name": {"type": "string", "description": "The name of the policy without space or special character "}, "description": {"type": "string", "description": "A brief explanation of the policy."}, "status": {"type": "string", "description": "Indicates whether the policy is active or inactive."}, "category": {"type": "string", "description": "The category will be either service or resource."}, "engine_type": {"type": "string", "description": "Engine type of policy"}, "services": {"type": "array", "description": "Displays the service associated with the policy for example, AWS, AzureRM, Openstack., etc", "items": {"type": "string"}}, "scope": {"type": "string", "description": "The scope of the policy Account scope - All users under that account will have access to view and execute Only Account admins can update/delete the policies, Tenant Scope - Users with access to the specific tenant will haveaccess to policies who can describe or execute policies. Tenant admins can  only update/delete. Private Scope - User who created will only have access", "example": "tenant", "enum": ["tenant", "private", "account"], "x-cs-enum-type": "AccountScope"}, "content_type": {"type": "string", "description": "Content type of policy (Git or File)"}, "content": {"type": "string", "description": "The policy content."}, "git_content_url": {"type": "string", "description": "Git project URL when the content type is git."}, "git_content_username": {"type": "string", "description": "Username of Git repo if repo is authenticated"}, "git_content_path": {"type": "string", "description": "Root path of the policy in git repo."}, "classification": {"type": "string", "description": "Policies are classified based on the basis of the activity they perform, for example provisioning, Account Management, Utilization, etc. This value is displayed in this field."}, "sub_classification": {"type": "string", "description": "Sub classification of policy"}, "severity": {"type": "string", "description": "Severity of policy such as low, medium and high"}, "is_system_policy": {"type": "string", "description": "Flag to identify system policy"}, "uri": {"type": "string", "description": "Unique URI for policy"}}, "type": "object"}, "PostureAccountModel": {"required": ["billable", "cloud_account_name", "count", "non_billable"], "properties": {"cloud_account_name": {"type": "string", "description": "cloud account name"}, "count": {"type": "integer", "description": "total count details"}, "billable": {"type": "integer", "description": "billable count details"}, "non_billable": {"type": "integer", "description": "non_billable count details"}}, "type": "object"}, "PostureCategoryModel": {"required": ["billable", "category", "count", "non_billable"], "properties": {"category": {"type": "string", "description": "category name"}, "count": {"type": "integer", "description": "total count details"}, "billable": {"type": "integer", "description": "billable count details"}, "non_billable": {"type": "integer", "description": "non_billable count details"}}, "type": "object"}, "PostureCloudDataModel": {"required": ["cloud_account_id", "cloud_account_name"], "properties": {"cloud_account_name": {"type": "string", "description": "cloud account name"}, "cloud_account_id": {"type": "string", "description": "cloud account id"}, "tenant_name": {"type": "string", "description": "Name of the tenant"}, "resource_wo_tag": {"type": "integer", "description": "resource without tag count"}, "total_resources": {"type": "integer", "description": "total resources"}, "resource_wo_naming_std": {"type": "string", "description": "resource without naming std"}, "billable_resources": {"type": "integer", "description": "billable resources"}, "new_resources": {"type": "integer", "description": "new resources"}, "increase_percentage": {"type": "number", "description": "increase percentage"}, "resource_wo_lock": {"type": "integer", "description": "resources without lock"}, "cloud": {"type": "string", "description": "cloud name"}, "deleted_resources": {"type": "integer", "description": "deleted resources"}, "last_discovery": {"type": "string", "description": "DateTime when the user was created"}}, "type": "object"}, "PostureCloudModel": {"properties": {"total_resources": {"type": "integer", "description": "total resources"}, "cloud": {"type": "string", "description": "cloud name"}}, "type": "object"}, "PostureRegionModel": {"required": ["billable", "count", "non_billable", "region"], "properties": {"region": {"type": "string", "description": "region name"}, "count": {"type": "integer", "description": "total count details"}, "billable": {"type": "integer", "description": "billable count details"}, "non_billable": {"type": "integer", "description": "non_billable count details"}}, "type": "object"}, "PostureResourceGroupModel": {"required": ["billable", "count", "non_billable", "resource_group"], "properties": {"resource_group": {"type": "string", "description": "resource group name"}, "count": {"type": "integer", "description": "total count details"}, "billable": {"type": "integer", "description": "billable count details"}, "non_billable": {"type": "integer", "description": "non_billable count details"}}, "type": "object"}, "PostureResourceListModel": {"required": ["category", "cloud_account_name", "component", "region_resourceGroup", "resource", "resource_id"], "properties": {"cloud_account_name": {"type": "string", "description": "region name"}, "category": {"type": "string", "description": "category name"}, "component": {"type": "string", "description": "component name"}, "resource": {"type": "string", "description": "resource name"}, "resource_id": {"type": "string", "description": "resource id name"}, "region_resourceGroup": {"type": "string", "description": "region/ resource group name"}}, "type": "object"}, "PostureResourceModel": {"required": ["billable", "count", "non_billable", "resource"], "properties": {"resource": {"type": "string", "description": "resource name"}, "count": {"type": "integer", "description": "total count details"}, "billable": {"type": "integer", "description": "billable count details"}, "non_billable": {"type": "integer", "description": "non_billable count details"}}, "type": "object"}, "PostureTenantModel": {"required": ["tenant_id", "tenant_name"], "properties": {"tenant_name": {"type": "string", "description": "Name of the tenant"}, "tenant_id": {"type": "string", "description": "Name of the tenant"}, "resource_wo_tag": {"type": "integer", "description": "resource without tag count"}, "total_resources": {"type": "integer", "description": "total resources"}, "resource_wo_naming_std": {"type": "string", "description": "resource without naming std"}, "billable_resources": {"type": "integer", "description": "billable resources"}, "new_resources": {"type": "integer", "description": "new resources"}, "increase_percentage": {"type": "number", "description": "increase percentage"}, "resource_wo_lock": {"type": "integer", "description": "resources without lock"}, "deleted_resources": {"type": "integer", "description": "deleted resources"}}, "type": "object"}, "PreferRegionModel": {"properties": {"regions": {"type": "array", "description": "Displays the list of regions", "items": {"$ref": "#/definitions/RegionModel"}}}, "type": "object"}, "ProductBundleModel": {"required": ["code", "id"], "properties": {"code": {"type": "string", "description": "Product Bundle code"}, "id": {"type": "string", "description": "Product Bundle id"}, "name": {"type": "string", "description": "Name of product bundle"}}, "type": "object"}, "ProductBundleOptions": {"properties": {"bundle_name": {"type": "string", "description": "Product Bundle name"}, "bundle_id": {"type": "string"}, "bundle_code": {"type": "string", "description": "Product bundle code"}, "bundle_description": {"type": "string", "description": "Product Bundle description"}, "role_types": {"type": "array", "description": "Role Types", "items": {"type": "string"}}}, "type": "object"}, "ProfileResponse": {"properties": {"message": {"type": "string", "description": "Message of profile API call"}, "user_id": {"type": "string", "description": "user id"}, "username": {"type": "string", "description": "username"}, "status": {"type": "string", "description": "status"}, "email": {"type": "string", "description": "email"}, "first_name": {"type": "string", "description": "first name"}, "last_name": {"type": "string", "description": "last name"}, "timezone": {"type": "string", "description": "timezone"}, "mobile": {"type": "string", "description": "mobile number"}, "sso_userid": {"type": "string", "description": "sso user id"}, "access_key": {"type": "string", "description": "access_key"}, "valid_till": {"type": "string", "description": "valid date"}, "last_login_time": {"type": "string", "description": "last login time"}, "preferred_language": {"type": "string", "description": "preferred language"}}, "type": "object"}, "ProjectsModel": {"required": ["tenant_id", "tenant_name"], "properties": {"tenant_name": {"type": "string", "description": "Name of the tenant"}, "tenant_id": {"type": "string", "description": "ID of the tenant"}}, "type": "object"}, "QueryOperator": {"required": ["__type"], "properties": {}, "discriminator": "__type", "type": "object", "x-cs-subtypes": [{"subtype_model": "QueryOperatorBinary", "subtype_name": "QueryOperatorBinary"}, {"subtype_model": "QueryOperatorBinaryLogic", "subtype_name": "QueryOperatorBinaryLogic"}, {"subtype_model": "QueryOperatorUnary", "subtype_name": "QueryOperatorUnary"}, {"subtype_model": "QueryOperatorUnaryNot", "subtype_name": "QueryOperatorUnaryNot"}, {"subtype_model": "AwsSecurityHubFindingQueryLocation", "subtype_name": "AwsSecurityHubFindingQueryLocation"}, {"subtype_model": "AwsSecurityHubFindingQuerySeverity", "subtype_name": "AwsSecurityHubFindingQuerySeverity"}, {"subtype_model": "AwsSecurityHubFindingQueryProductName", "subtype_name": "AwsSecurityHubFindingQueryProductName"}, {"subtype_model": "AwsSecurityHubFindingQueryResource", "subtype_name": "AwsSecurityHubFindingQueryResource"}, {"subtype_model": "AwsSecurityHubFindingQueryCloudAccount", "subtype_name": "AwsSecurityHubFindingQueryCloudAccount"}, {"subtype_model": "AwsSsmDocumentQueryCloudAccount", "subtype_name": "AwsSsmDocumentQueryCloudAccount"}, {"subtype_model": "AwsSsmDocumentQueryRegion", "subtype_name": "AwsSsmDocumentQueryRegion"}, {"subtype_model": "AwsSsmDocumentQueryOwner", "subtype_name": "AwsSsmDocumentQueryOwner"}, {"subtype_model": "AwsSsmDocumentQueryCategory", "subtype_name": "AwsSsmDocumentQueryCategory"}, {"subtype_model": "AwsSsmDocumentQueryStatus", "subtype_name": "AwsSsmDocumentQueryStatus"}, {"subtype_model": "AwsSsmDocumentQueryName", "subtype_name": "AwsSsmDocumentQueryName"}, {"subtype_model": "AwsSsmDocumentQueryExecutedBy", "subtype_name": "AwsSsmDocumentQueryExecutedBy"}, {"subtype_model": "AssessmentQueryAssessmentOwner", "subtype_name": "AssessmentQueryAssessmentOwner"}, {"subtype_model": "AssessmentQueryAssessmentApprover", "subtype_name": "AssessmentQueryAssessmentApprover"}, {"subtype_model": "AssessmentQueryWorkload", "subtype_name": "AssessmentQueryWorkload"}, {"subtype_model": "AssessmentQueryFramework", "subtype_name": "AssessmentQueryFramework"}, {"subtype_model": "AssessmentViewQueryNature", "subtype_name": "AssessmentViewQueryNature"}, {"subtype_model": "AssessmentViewQueryQuestionRisk", "subtype_name": "AssessmentViewQueryQuestionRisk"}, {"subtype_model": "AssessmentViewQueryBestPracticeRisk", "subtype_name": "AssessmentViewQueryBestPracticeRisk"}, {"subtype_model": "AssessmentViewQueryQuestionStatus", "subtype_name": "AssessmentViewQueryQuestionStatus"}, {"subtype_model": "AssessmentViewQueryBestPracticeStatus", "subtype_name": "AssessmentViewQueryBestPracticeStatus"}, {"subtype_model": "AssessmentViewQueryOwner", "subtype_name": "AssessmentViewQueryOwner"}, {"subtype_model": "AssessmentViewQueryAssignedTo", "subtype_name": "AssessmentViewQueryAssignedTo"}, {"subtype_model": "AssessmentViewQueryComment", "subtype_name": "AssessmentViewQueryComment"}, {"subtype_model": "ResourceQueryLocation", "subtype_name": "ResourceQueryLocation"}, {"subtype_model": "ResourceQueryCategory", "subtype_name": "ResourceQueryCategory"}, {"subtype_model": "ResourceQueryResourceType", "subtype_name": "ResourceQueryResourceType"}, {"subtype_model": "ResourceQueryResource", "subtype_name": "ResourceQueryResource"}, {"subtype_model": "ResourceQueryResourceName", "subtype_name": "ResourceQueryResourceName"}, {"subtype_model": "ResourceQueryTagKey", "subtype_name": "ResourceQueryTagKey"}, {"subtype_model": "ResourceQueryTagKeyValue", "subtype_name": "ResourceQueryTagKeyValue"}, {"subtype_model": "WorkloadQueryWorkloadOwner", "subtype_name": "WorkloadQueryWorkloadOwner"}, {"subtype_model": "WorkloadQueryCloud", "subtype_name": "WorkloadQueryCloud"}, {"subtype_model": "WorkloadQueryCloudAccount", "subtype_name": "WorkloadQueryCloudAccount"}, {"subtype_model": "WorkloadQueryWorkloadType", "subtype_name": "WorkloadQueryWorkloadType"}]}, "QueryOperatorBinary": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"required": ["a", "b"], "properties": {"a": {"description": "Left side of binary query operator", "$ref": "#/definitions/QueryOperator"}, "b": {"description": "Right side of binary query operator", "$ref": "#/definitions/QueryOperator"}}, "type": "object"}], "x-cs-type-name": "QueryOperatorBinary"}, "QueryOperatorBinaryLogic": {"allOf": [{"$ref": "#/definitions/QueryOperatorBinary"}, {"required": ["op"], "properties": {"op": {"type": "string", "description": "Type of binary operation", "example": "And", "enum": ["And", "Or", "Xor"], "x-cs-enum-type": "ResourceQueryCondition"}}, "type": "object"}], "x-cs-type-name": "QueryOperatorBinaryLogic"}, "QueryOperatorUnary": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"required": ["a"], "properties": {"a": {"description": "Sub-expression of the unary query operator", "$ref": "#/definitions/QueryOperator"}}, "type": "object"}], "x-cs-type-name": "QueryOperatorUnary"}, "QueryOperatorUnaryNot": {"allOf": [{"$ref": "#/definitions/QueryOperatorUnary"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "QueryOperatorUnaryNot"}, "RangeSelection": {"properties": {"range": {"type": "string", "example": "Last15Minutes", "enum": ["Last15Minutes", "Last30Minutes", "Last60Minutes", "Hour", "PreviousHour", "Last3Hours", "Last6Hours", "Last12Hours", "Last24Hours", "Today", "Yesterday", "Last2Days", "Last3Days", "Last7Days", "Week", "PreviousWeek", "Last30Days", "Month", "PreviousMonth", "TwoMonthsAgo", "ThreeMonthsAgo", "Quarter", "PreviousQuarter", "Last3Months", "Year", "PreviousYear", "Last365Days", "All"], "x-cs-enum-type": "TimeRangeId"}, "start": {"type": "string", "format": "date-time"}, "end": {"type": "string", "format": "date-time"}, "zoneCreated": {"type": "string"}, "zone": {"type": "string"}}, "type": "object"}, "RangeValue": {"properties": {"range": {"description": "Range value", "$ref": "#/definitions/FromToValue"}}, "type": "object"}, "RawImport": {"properties": {"contentsAsJSON": {"type": "string"}}, "type": "object"}, "Recommendation": {"required": ["classification", "cloud_account_id", "cloud_account_name", "created_at", "id", "impact", "name", "policy_id", "policy_name", "projected_cost_savings_month", "resource_counts", "service_name", "source", "status", "sub_classification", "tenant_name"], "properties": {"id": {"type": "string", "description": "Recommendation id"}, "policy_id": {"type": "string", "description": "Policy Id"}, "policy_name": {"type": "string", "description": "Policy Name"}, "name": {"type": "string", "description": "Name"}, "status": {"type": "string", "description": "Status"}, "impact": {"type": "string", "description": "Impact"}, "classification": {"type": "string", "description": "Classification based on OSCAR pillar"}, "sub_classification": {"type": "string", "description": "Sub Classification for the classification"}, "cloud_account_id": {"type": "string", "description": "Cloud account id"}, "cloud_account_name": {"type": "string", "description": "Cloud Account Name"}, "tenant_name": {"type": "string", "description": "Tenant Name"}, "service_name": {"type": "string", "description": "Cloud Service Name"}, "source": {"type": "string", "description": "Source"}, "created_at": {"type": "string", "description": "Time of creation"}, "projected_cost_savings_month": {"type": "string", "description": "Projected Cost Saving per Month"}, "resource_counts": {"description": "The resources that are open based on the recommendation", "$ref": "#/definitions/ResourceCount"}}, "type": "object"}, "RecommendationActionResponseModel": {"required": ["action_resource_name", "action_type", "description", "name", "resource_level", "terms_and_conditions"], "properties": {"name": {"type": "string", "description": "recommendation action name"}, "terms_and_conditions": {"type": "string", "description": "Terms and conditions for performing the recommended action"}, "resource_level": {"type": "string", "description": "if the action will be performed at the resource level"}, "action_type": {"type": "string", "description": "Type of action will be always template"}, "action_resource_name": {"type": "string", "description": "Name of template"}, "description": {"type": "string", "description": "Description about the action in details"}}, "type": "object"}, "RecommendationByAccount": {"required": ["classification", "cloud_account_id", "cloud_account_name", "created_at", "id", "impact", "name", "policy_id", "policy_name", "resource_counts", "service_name", "source", "status", "sub_classification", "tenant_name"], "properties": {"id": {"type": "string", "description": "Recommendation ID"}, "policy_id": {"type": "string", "description": "Policy ID"}, "policy_name": {"type": "string", "description": "Policy Name"}, "name": {"type": "string", "description": "Name of the policy recommendation"}, "status": {"type": "string", "description": "Status"}, "impact": {"type": "string", "description": "Impact"}, "classification": {"type": "string", "description": "Oscar Classification"}, "sub_classification": {"type": "string", "description": "Sub classification of the above classification"}, "cloud_account_id": {"type": "string", "description": "Cloud Account ID"}, "cloud_account_name": {"type": "string", "description": "Cloud Account Name"}, "service_name": {"type": "string", "description": "Cloud Service Name"}, "tenant_name": {"type": "string", "description": "Tenant Name"}, "created_at": {"type": "string", "description": "Time of creation"}, "source": {"type": "string", "description": "Source"}, "resource_counts": {"description": "Count of the resource that are open", "$ref": "#/definitions/ResourceCountByAccount"}}, "type": "object"}, "RecommendationByCategory": {"required": ["classification", "cloud_account_id", "cloud_account_name", "created_at", "id", "impact", "name", "policy_id", "policy_name", "resource_counts", "service_name", "source", "status", "sub_classification", "tenant_name"], "properties": {"id": {"type": "string", "description": "Recommendation ID"}, "policy_id": {"type": "string", "description": "Policy ID"}, "policy_name": {"type": "string", "description": "Policy Name"}, "name": {"type": "string", "description": "Name of the policy recommendation"}, "status": {"type": "string", "description": "Status"}, "impact": {"type": "string", "description": "Impact"}, "classification": {"type": "string", "description": "Oscar Classification"}, "sub_classification": {"type": "string", "description": "Sub classification of the above classification"}, "cloud_account_id": {"type": "string", "description": "Cloud Account ID"}, "cloud_account_name": {"type": "string", "description": "Cloud Account Name"}, "service_name": {"type": "string", "description": "Cloud Service Name"}, "tenant_name": {"type": "string", "description": "Tenant Name"}, "created_at": {"type": "string", "description": "Time of creation"}, "source": {"type": "string", "description": "Source"}, "resource_counts": {"description": "Count of the resource that are open", "$ref": "#/definitions/ResourceCountByCategory"}}, "type": "object"}, "RecommendationTenant": {"required": ["classification", "cloud_account_id", "cloud_account_name", "created_at", "id", "impact", "name", "policy_id", "policy_name", "projected_cost_savings_month", "resource_counts", "service_name", "source", "status", "sub_classification", "tenant_name"], "properties": {"id": {"type": "string", "description": "Recommendation id"}, "policy_id": {"type": "string", "description": "Policy Id"}, "policy_name": {"type": "string", "description": "Policy Name"}, "name": {"type": "string", "description": "Name"}, "status": {"type": "string", "description": "Status"}, "impact": {"type": "string", "description": "Impact"}, "classification": {"type": "string", "description": "Classification based on OSCAR pillar"}, "sub_classification": {"type": "string", "description": "Sub Classification for the classification"}, "cloud_account_id": {"type": "string", "description": "Cloud account id"}, "cloud_account_name": {"type": "string", "description": "Cloud Account Name"}, "tenant_name": {"type": "string", "description": "Tenant Name"}, "service_name": {"type": "string", "description": "Cloud Service Name"}, "source": {"type": "string", "description": "Source"}, "created_at": {"type": "string", "description": "Time of creation"}, "projected_cost_savings_month": {"type": "string", "description": "Projected Cost Saving per Month"}, "resource_counts": {"description": "The resources that are open based on the recommendation", "$ref": "#/definitions/ResourceCountTenant"}}, "type": "object"}, "RecommendationView": {"required": ["current_sku", "estimated_cost", "estimated_cost_saving", "estimated_cost_saving_info", "impact_level", "optimization_type", "recommendation_id", "recommended_sku", "region", "resource_id", "resource_name", "resource_recommendation_id", "resource_type", "savings_percentage", "status", "summary"], "properties": {"resource_recommendation_id": {"type": "string", "description": "Identifier for resource recommendation"}, "recommendation_id": {"type": "string", "description": "Recommendation id"}, "resource_name": {"type": "string", "description": "Resource name"}, "resource_type": {"type": "string", "description": "Resource type"}, "resource_id": {"type": "string", "description": "Resource id"}, "status": {"type": "string", "description": "Status"}, "summary": {"type": "string", "description": "Summary"}, "impact_level": {"type": "string", "description": "Impact level"}, "estimated_cost": {"type": "number", "description": "Estimated cost"}, "region": {"type": "string", "description": "Region"}, "estimated_cost_saving": {"type": "number", "description": "Estimated cost saving"}, "optimization_type": {"type": "string", "description": "Optimization type"}, "recommended_sku": {"type": "string", "description": "Recommended SKU"}, "current_sku": {"type": "string", "description": "Current SKU"}, "savings_percentage": {"type": "string", "description": "Savings percentage"}, "estimated_cost_saving_info": {"type": "string", "description": "Estimated cost saving information"}}, "type": "object"}, "Recommendations": {"properties": {"tenant_name": {"type": "string", "description": "Tenant Name"}, "cloud_account_name": {"type": "string", "description": "Cloud Account Name"}, "reservation_type": {"type": "string", "description": "Reservation type"}, "reservation_sku": {"type": "string", "description": "Reservation SKU Details"}, "region": {"type": "string", "description": "Region"}, "quantity": {"type": "integer", "description": "Quantity"}, "estimated_cost_savings": {"type": "number", "description": "How much cost is saved based on recommendation suggested"}, "cloud_account_id": {"type": "string", "description": "Cloud Account ID"}, "tenant_id": {"type": "string", "description": "Tenant ID"}, "service": {"type": "string", "description": "Cloud Service"}, "info": {"type": "string", "description": "Information"}, "savings_percentage": {"type": "string", "description": "Saving Percentage"}}, "type": "object"}, "RecommendationsData": {"required": ["cloud_account_id", "created_at", "id", "impact", "in_progress", "name", "open", "resolved", "service_name", "skipped", "tenant_name"], "properties": {"resolved": {"type": "integer", "description": "Count of the Recommendations that are resolved"}, "impact": {"type": "string", "description": "Impact of the Recommendation"}, "skipped": {"type": "integer", "description": "Count of the Recommendations that are skipped"}, "open": {"type": "integer", "description": "Resource count that are open for the recommendation"}, "name": {"type": "string", "description": "Name of the Recommendations"}, "cloud_account_id": {"type": "string", "description": "Cloud account ID."}, "created_at": {"type": "string", "description": "Time of creation"}, "tenant_name": {"type": "string", "description": "Tenant Name"}, "service_name": {"type": "string", "description": "Cloud Service Name"}, "id": {"type": "string", "description": "Recommendation ID"}, "in_progress": {"type": "integer", "description": "Count of the recommendations that are In progress"}}, "type": "object"}, "RecommendedReservationsSavingsSummaryRequest": {"required": ["currency", "term"], "properties": {"tenant_ids": {"type": "array", "items": {"type": "string", "description": "Please provide one or more tenant IDs"}}, "currency": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}, "services": {"type": "array", "items": {"type": "string", "description": "List of cloud providers.", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}}, "term": {"type": "string", "description": "Year, it can be OneYear or ThreeYears.", "default": "OneYear", "example": "OneYear", "enum": ["OneYear", "ThreeYears"], "x-cs-enum-type": "PaymentTerms"}, "payment_option": {"type": "string", "description": "Select a payment option, it can be No_Upfront, Partial_Upfront or All_Upfront.", "default": "No_Upfront", "example": "No_Upfront", "enum": ["No_Upfront", "Partial_Upfront", "All_Upfront"], "x-cs-enum-type": "PaymentOptions"}}, "type": "object"}, "RecommendedReservationsSavingsSummaryResponse": {"properties": {"recommendations_count": {"type": "integer", "description": "Recommendations Count."}, "potential_cost_saving": {"type": "number", "description": "Potential Cost Saving."}, "total_reservations": {"type": "integer", "description": "Total reservations."}, "potential_current_estimated_cost": {"type": "number", "description": "Potential current estimated cost."}}, "type": "object"}, "RecordIdentity": {"properties": {"sysId": {"type": "string", "description": "Unique Identifier of the tracked item"}, "lastUpdate": {"type": "string", "format": "date-time", "description": "Last update of the tracked item"}, "table": {"type": "string", "description": "Context of the tracked item"}}, "type": "object"}, "RecordIdentityBatchRequest": {"properties": {"ids": {"type": "array", "items": {"$ref": "#/definitions/RecordIdentity"}}}, "type": "object"}, "RecoveryServiceReportReq": {"required": ["cloud_account_id", "tenant_id"], "properties": {"cloud_account_id": {"type": "string", "description": "Specify the Cloud Account ID. This can be fetched from List CloudAccounts API call."}, "tenant_id": {"type": "string", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API."}}, "type": "object"}, "RecoveryServiceReportRes": {"required": ["data", "message", "status"], "properties": {"status": {"type": "string", "description": "status response"}, "message": {"type": "string", "description": "message response"}, "data": {"type": "object", "description": "recovery service data"}}, "type": "object"}, "RediscoverModel": {"properties": {"service_account_name": {"type": "string", "description": "Service Account Name that is being rediscovered"}, "created_by": {"type": "string", "description": "Service account onboarded by"}, "service_account_id": {"type": "string", "description": "Service Account ID that is being rediscovered"}, "service_id": {"type": "string", "description": "Service Id"}, "service_type": {"type": "string", "description": "Service Type"}, "message": {"type": "string", "description": "Message of the rediscover call"}, "tenant_id": {"type": "string", "description": "Tenant Id"}}, "type": "object"}, "RediscoverResourcesResponseModel": {"required": ["data"], "properties": {"data": {"description": "Rediscovery details", "$ref": "#/definitions/RediscoverModel"}}, "type": "object"}, "RediscoverResponseModel": {"required": ["cloud_account"], "properties": {"cloud_account": {"type": "array", "description": "Cloud Account Details", "items": {"type": "object"}}}, "type": "object"}, "ReferenceModelList": {"required": ["visible"], "properties": {"visible": {"type": "boolean", "description": "Visible"}}, "type": "object"}, "ReferenceResponse": {"required": ["Abstracted Control URI", "Control Baseline", "Control Family", "Control Name", "Control Statement", "Services"], "properties": {"Control Baseline": {"description": "Control Baseline", "$ref": "#/definitions/ReferenceModelList"}, "Control Family": {"description": "Control Family", "$ref": "#/definitions/ReferenceModelList"}, "Control Statement": {"description": "Control Statement", "$ref": "#/definitions/ReferenceModelList"}, "Control Name": {"description": "Control Name", "$ref": "#/definitions/ReferenceModelList"}, "Abstracted Control URI": {"description": "Abstracted Control URI", "$ref": "#/definitions/ReferenceModelList"}, "Services": {"description": "Services", "$ref": "#/definitions/ReferenceModelList"}}, "type": "object"}, "RefreshTokenRequestModel": {"required": ["access_token"], "properties": {"access_token": {"type": "string", "description": "access token obtained from the auth token api"}}, "type": "object"}, "RefreshTokenResponseModel": {"required": ["access_token", "expires_at", "issued_at", "refresh_count"], "properties": {"access_token": {"type": "string", "description": "access token obtained from the auth token api"}, "issued_at": {"type": "string", "description": "Time in UTC at which the token was issued  at"}, "expires_at": {"type": "string", "description": "Time in UTC till which the token will be valid till"}, "refresh_count": {"type": "integer", "description": "The count of refresh token used.It can be used for 3 max refresh count after which the token will expired."}}, "type": "object"}, "RegionModel": {"properties": {"type": {"type": "string", "description": "Type of the Region"}, "name": {"type": "string", "description": "Name of the Region"}, "id": {"type": "string", "description": "ID of the Region "}}, "type": "object"}, "ReportConfiguration": {"required": ["__type"], "properties": {}, "discriminator": "__type", "type": "object", "x-cs-subtypes": [{"subtype_model": "ReportConfigurationForAssessmentRunSummary", "subtype_name": "ReportConfigurationForAssessmentRunSummary"}]}, "ReportConfigurationForAssessmentRunSummary": {"allOf": [{"$ref": "#/definitions/ReportConfiguration"}, {"required": ["assessment_run", "framework_id"], "properties": {"assessment_run": {"description": "The Assessment Run this report is for", "$ref": "#/definitions/RecordIdentity"}, "framework_id": {"type": "string", "description": "Identity of the Framework"}, "assessment_run_history": {"description": "ID of the assessment run history", "$ref": "#/definitions/RecordIdentity"}}, "type": "object"}], "x-cs-type-name": "ReportConfigurationForAssessmentRunSummary"}, "ReportDetails": {"required": ["report_id"], "properties": {"report_id": {"type": "string", "description": "Id of the report"}, "views": {"type": "array", "description": "List of Views", "items": {"$ref": "#/definitions/ReportViewDetails"}}}, "type": "object"}, "ReportGenerationOptions": {"properties": {"orientation": {"type": "string", "description": "Orientation of the report structure", "example": "Landscape", "enum": ["Landscape", "Portrait"], "x-cs-enum-type": "ReportOrientation"}, "page_size": {"type": "string", "description": "Page-size of the report structure", "example": "A4", "enum": ["A4", "A5", "LEGAL", "LETTER"], "x-cs-enum-type": "ReportPageSize"}, "header_html": {"type": "string", "description": "header-html content of the report"}, "footer_html": {"type": "string", "description": "footer-html content of the report"}, "footer_left": {"type": "string", "description": "Left aligned footer text"}, "footer_font_size": {"type": "string", "description": "footer font size"}, "footer_font_name": {"type": "string", "description": "footer font name"}, "margin_top": {"type": "string", "description": "Page top margin size"}, "margin_right": {"type": "string", "description": "Page right margin size"}, "margin_bottom": {"type": "string", "description": "Page bottom margin size"}, "margin_left": {"type": "string", "description": "Page left margin size"}, "timeout": {"type": "integer", "description": "Max time in seconds to wait for report to generate."}}, "type": "object"}, "ReportStatusResponse": {"properties": {"status": {"type": "string", "description": "Status of the report", "example": "Unknown", "enum": ["Unknown", "Queued", "Processing", "Success", "Failure"], "x-cs-enum-type": "ReportStatus"}}, "type": "object"}, "ReportViewDetails": {"required": ["created_at", "default_view", "state_id", "updated_at", "view_name"], "properties": {"view_name": {"type": "string", "description": "Name of the View"}, "state_id": {"type": "string", "description": "powerBI unique state id"}, "default_view": {"type": "boolean", "description": "Boolean to indicate default view"}, "created_at": {"type": "string", "format": "date-time", "description": "view created datetime"}, "updated_at": {"type": "string", "format": "date-time", "description": "view latest update datetime"}}, "type": "object"}, "ReportsUserViewCreateRequest": {"required": ["report_id", "state_id", "view_name"], "properties": {"report_id": {"type": "string", "description": "Id of the report"}, "view_name": {"type": "string", "description": "Name of the View"}, "state_id": {"type": "string", "description": "powerBI unique state id"}, "default_view": {"type": "boolean", "description": "default view", "default": false}}, "type": "object"}, "ReportsUserViewDeleteRequest": {"required": ["report_id"], "properties": {"report_id": {"type": "string", "description": "unique report id"}, "view_name": {"type": "string", "description": "name of the view"}}, "type": "object"}, "ReportsUserViewUpdateRequest": {"required": ["report_id", "state_id", "view_name"], "properties": {"report_id": {"type": "string", "description": "Id of the report"}, "view_name": {"type": "string", "description": "Name of the View"}, "state_id": {"type": "string", "description": "powerBI unique state id"}, "default_view": {"type": "boolean", "description": "default view", "default": false}}, "type": "object"}, "ResendTokenResponseModel": {"required": ["user_id"], "properties": {"user_id": {"type": "string", "description": "user id"}}, "type": "object"}, "ReservationDetails": {"required": ["cloud_account_id", "cloud_account_name", "expiry_date", "payment_option", "region", "reservation_id", "reservation_sku", "ri_hours_used", "tenant_name", "utilization_percentage"], "properties": {"tenant_name": {"type": "string", "description": "Tenant Name"}, "reservation_id": {"type": "string", "description": "Reservation Id"}, "payment_option": {"type": "string", "description": "What is the payment option"}, "ri_hours_used": {"type": "string", "description": "RI hours being used"}, "expiry_date": {"type": "string", "description": "Date of expiry"}, "reservation_sku": {"type": "string", "description": "Reservation SKU Details"}, "region": {"type": "string", "description": "Region"}, "cloud_account_name": {"type": "string", "description": "Cloud Account Name"}, "cloud_account_id": {"type": "string", "description": "Cloud Account Id"}, "utilization_percentage": {"type": "string", "description": "Utilization by percentage"}}, "type": "object"}, "ResetPasswordRequest": {"required": ["email_id", "url"], "properties": {"email_id": {"type": "string", "description": "User email id."}, "url": {"type": "string", "description": "Please Provide the URl"}}, "type": "object"}, "ResetPasswordResponse": {"properties": {"status": {"type": "string", "description": "Status of Reset Password API call."}, "message": {"type": "string", "description": "Message of reset Password API call."}, "data": {"type": "string", "description": "Link for Reset Password"}}, "type": "object"}, "ResolveDefRecommendationRespModel": {"required": ["message", "status"], "properties": {"status": {"type": "string", "description": "Status of pre-execute"}, "message": {"type": "string", "description": "pre-execute"}}, "type": "object"}, "ResolveDefRecommendationsReqModel": {"required": ["action_name", "resources"], "properties": {"action_name": {"type": "string", "description": "Action Name to resolve the recommendation"}, "resources": {"type": "array", "description": "Specify the Resource IDs. It will be fetched from list recommendation api", "items": {"type": "string"}}}, "type": "object"}, "ResolveRecommendationsReqModel": {"required": ["action_name", "apply_for_all", "resources"], "properties": {"action_name": {"type": "string", "description": "Action Name to resolve the recommendation"}, "resources": {"type": "array", "description": "Resource ID", "items": {"type": "string"}}, "apply_for_all": {"type": "boolean", "description": "Apply for all the resources.Allowed Values true or false"}}, "type": "object"}, "ResolveRecommendationsRequest": {"required": ["action_name", "resources"], "properties": {"action_name": {"type": "string", "description": "Action to be applied to resolve the recommendation. Example: 'action_name': 'skip'"}, "resources": {"type": "array", "description": "Resource Id to which the recommendation should be applied.Can be fetched from '/cost/cost_savings/accounts/visibility/{tenant_id}/recommendations/{recommendation_id}/view' api.Example 'resources': ['609bd2d5a2488dbf683206aa']", "items": {"type": "string"}}}, "type": "object"}, "ResolveRecommendationsRequestModel": {"required": ["action_name", "apply_for_all", "resources"], "properties": {"action_name": {"type": "string", "description": "Action Name to resolve the recommendation"}, "resources": {"type": "array", "description": "Resource ID", "items": {"type": "string"}}, "apply_for_all": {"type": "boolean", "description": "Apply for all the resources.Allowed Values true or false"}, "args": {"type": "object", "description": "arguments to resolve action"}}, "type": "object"}, "ResolveRecommendationsResponse": {"required": ["message", "status"], "properties": {"status": {"type": "string", "description": "Status code of the resolve recommendation call"}, "message": {"type": "string", "description": "Response message of the resolve recommendation call"}}, "type": "object"}, "ResourceByProductCategoryWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"required": ["resourceSelection"], "properties": {"resourceSelection": {"type": "string", "description": "Type of Resources", "example": "Tagged", "enum": ["Tagged", "Untagged"], "x-cs-enum-type": "ResourceSelection"}}, "type": "object"}], "x-cs-type-name": "ResourceByProductCategoryWidgetConfiguration"}, "ResourceCatalogAttributeDataModel": {"required": ["cost", "name", "resource", "resource_id"], "properties": {"DiskSize": {"type": "string", "description": "Disk size", "example": "32", "enum": ["32", "64", "128", "256", "512", "1024", "2048", "4096", "8192", "16384", "32767"], "x-cs-enum-type": "DiskSize"}, "disk_type": {"type": "string", "description": "Disk type", "example": "Premium SSD", "enum": ["Premium SSD", "Standard HDD", "Standard SSD"], "x-cs-enum-type": "DiskType"}, "cost": {"description": "Cost attribute.", "$ref": "#/definitions/ResourceCatalogCostDataModel"}, "name": {"type": "string", "description": "Cloud account catalog name."}, "resource": {"type": "string", "description": "Specify the resource, This can be retrieved using the List Resource Catalog API"}, "resource_id": {"type": "string", "description": "Specify the resource_id, This can be retrieved using the List Resource Catalog API"}}, "type": "object"}, "ResourceCatalogCostDataModel": {"required": ["value"], "properties": {"value": {"type": "integer", "description": "Cloud account resource cost. for example, 0.1, 10, etc"}}, "type": "object"}, "ResourceCatalogCreateDataModel": {"required": ["data", "message"], "properties": {"message": {"type": "string", "description": "Resource created"}, "data": {"type": "string", "description": "Catalog Id"}}, "type": "object"}, "ResourceCatalogDeleteDataModel": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Resource deleted"}}, "type": "object"}, "ResourceCatalogGetDataModel": {"required": ["data"], "properties": {"data": {"type": "object", "description": "Resource Data"}}, "type": "object"}, "ResourceCatalogModifyDataModel": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Resource Modified"}}, "type": "object"}, "ResourceCatalogServiceLevelDataModel": {"required": ["classification", "name", "resource", "resource_attributes", "resource_type", "scope", "service_account", "service_levels"], "properties": {"classification": {"type": "string", "description": "Account classification is by default its 'default'. for example, default"}, "name": {"type": "string", "description": "Cloud account catalog name."}, "resource": {"type": "string", "description": "Specify the resource, This can be retrieved using the List Resource Catalog API"}, "resource_attributes": {"description": "Resource attributes includes.", "$ref": "#/definitions/ResourceCatalogAttributeDataModel"}, "resource_type": {"type": "string", "description": "Cloud account resource type. for example, disk_sku"}, "scope": {"type": "string", "description": "Cloud account scope . for example, tenant, private, etc"}, "service_account": {"type": "string", "description": "Cloud service account id . for example, '60xxxxxxxxxxxxxxxxxxxxxxxx0b'"}, "service_levels": {"type": "array", "description": "Update Activity Request Body. Example:[\"gold, silver, bronze, iron\"]", "items": {"type": "string"}}, "tenant_info": {"description": "tenants information.", "$ref": "#/definitions/ResourceCatalogTenantDataModel"}}, "type": "object"}, "ResourceCatalogTenantDataModel": {"properties": {"location": {"type": "string", "description": "Location.for example, /subscriptions/subscription_id->'eg:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'/location/location->'eg:northeurope"}, "resourcegroup": {"type": "string", "description": "Resource group. for example, /subscriptions/subscription_id->'eg:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'/resourceGroups/rg_name->'eg:default_rg"}}, "type": "object"}, "ResourceCount": {"required": ["open"], "properties": {"open": {"type": "integer", "description": "The resources that are open based on the recommendation"}}, "type": "object"}, "ResourceCountByAccount": {"required": ["open"], "properties": {"open": {"type": "integer", "description": "Resource count that are open"}}, "type": "object"}, "ResourceCountByCategory": {"required": ["open"], "properties": {"open": {"type": "integer", "description": "Resource count that are open"}}, "type": "object"}, "ResourceCountTenant": {"required": ["open"], "properties": {"open": {"type": "integer", "description": "The resources that are open based on the recommendation"}}, "type": "object"}, "ResourceDetails": {"required": ["id", "name"], "properties": {"id": {"type": "string", "description": "ID of that Template/Script/Policy that is scheduled to run"}, "name": {"type": "string", "description": "Name of the Template/Script/Policy that is scheduled to run"}}, "type": "object"}, "ResourceFilterModel": {"required": ["id", "name"], "properties": {"id": {"type": "string", "description": "ID of resource filter"}, "name": {"type": "string", "description": "Name of resource filter"}}, "type": "object"}, "ResourceListingRequest": {"required": ["action", "cloud", "cloud_account_id", "cloud_type"], "properties": {"cloud_type": {"type": "string", "description": "Service Type like cloud"}, "cloud": {"type": "string", "description": "Type of cloud from cloud provider like AWS/Azure", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "region": {"type": "string", "description": "The region of the cloud account where it needs to be executed mandatory for AWS"}, "cloud_account_id": {"type": "string", "description": "Specify the Cloud account ID. This is a unique ID and can be retrieved from the List Cloud Account API."}, "resource_group": {"type": "string", "description": "Resource groups preferred by the user in that particular Azure account."}, "location": {"type": "string", "description": "Provide the location. Based on the action"}, "action": {"type": "string", "description": "Provide the action name. Example: virtual_network.list_virtual_network"}}, "type": "object"}, "ResourceListingResponse": {"properties": {"id": {"type": "string", "description": "Id of the resources"}, "name": {"type": "string", "description": "Name of the resource"}}, "type": "object"}, "ResourceMetricHierarchyRequest": {"required": ["service", "template_uri"], "properties": {"template_uri": {"type": "string", "description": "Template URI"}, "service": {"type": "string", "description": "Cloud Service Name", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}}, "type": "object"}, "ResourceMetricHierarchyResponse": {"required": ["data", "message"], "properties": {"message": {"type": "string", "description": "Message of Resource Metric Hierarchy"}, "data": {"type": "object", "description": "Resource Metric Hierarchy Listing"}}, "type": "object"}, "ResourcePostureResponse": {"required": ["cloud_account_data", "cloud_data", "tenants", "total_count"], "properties": {"total_count": {"type": "integer", "description": "count details"}, "tenants": {"type": "array", "description": "List of tenant data", "items": {"$ref": "#/definitions/PostureTenantModel"}}, "cloud_data": {"type": "array", "description": "List of cloud data", "items": {"$ref": "#/definitions/PostureCloudModel"}}, "cloud_account_data": {"type": "array", "description": "List of cloud account data", "items": {"$ref": "#/definitions/PostureCloudDataModel"}}}, "type": "object"}, "ResourceQueryCategory": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"required": ["categories"], "properties": {"categories": {"type": "array", "description": "Categories for the resources", "items": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "ResourceQueryCategory"}, "ResourceQueryLocation": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"required": ["regions"], "properties": {"regions": {"type": "array", "description": "Regions for the resources", "items": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "ResourceQueryLocation"}, "ResourceQueryResource": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"required": ["resources"], "properties": {"resources": {"type": "array", "description": "Resource fields for the resources", "items": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "ResourceQueryResource"}, "ResourceQueryResourceName": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"required": ["starts_with"], "properties": {"starts_with": {"type": "string", "description": "Matches against the start of a resource name"}}, "type": "object"}], "x-cs-type-name": "ResourceQueryResourceName"}, "ResourceQueryResourceType": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"required": ["resource_types"], "properties": {"resource_types": {"type": "array", "description": "Resource Type for the resources", "items": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "ResourceQueryResourceType"}, "ResourceQueryTagKey": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"required": ["tag_keys"], "properties": {"tag_keys": {"type": "array", "description": "Tag keys for the resources", "items": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "ResourceQueryTagKey"}, "ResourceQueryTagKeyValue": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"required": ["tag_key", "tag_values"], "properties": {"tag_key": {"type": "string", "description": "Tag key for the given resources"}, "tag_values": {"type": "array", "description": "Tag values for the given key", "items": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "ResourceQueryTagKeyValue"}, "ResourceRecommendationModel": {"required": ["resource_id", "resource_name", "resource_recommendation_id", "resource_type", "resourcegroup_location", "status"], "properties": {"resource_recommendation_id": {"type": "string", "description": "unique identifier for resource recommendation"}, "resource_id": {"type": "string", "description": " Resource identifier id of resource recommendation"}, "resource_name": {"type": "string", "description": "Resource identifier name of resource recommendation"}, "resource_type": {"type": "string", "description": "Type of resource"}, "resourcegroup_location": {"type": "string", "description": "resource group location"}, "status": {"type": "string", "description": "Status of resource recommendation"}}, "type": "object"}, "ResourceRequest": {"required": ["action", "execution_type", "id", "name", "param_mapper", "type"], "properties": {"execution_type": {"type": "string", "description": "Indicates whether this template/script will be executed immediately on executing the blueprint or will be scheduled for  one/more occurrences", "example": "on_demand", "enum": ["on_demand", "scheduled"], "x-cs-enum-type": "ExecutionType"}, "action": {"type": "string", "description": "A short name that represents the action performed by the template. Useful while viewing the job output while executing the blueprint."}, "name": {"type": "string", "description": "Resource Name"}, "param_mapper": {"type": "object", "description": "mapping of input parameter for this template to the output parameter of any of the previous templates"}, "type": {"type": "string", "description": "Type for the blueprint", "example": "template", "enum": ["template", "script"], "x-cs-enum-type": "BlueprintType"}, "id": {"type": "string", "description": "Object Id of the Template or Script. You can get this from Describe Template/Script call"}}, "type": "object"}, "ResourceTagReqModel": {"properties": {"cloud": {"type": "string", "description": "The category will be either service or resource"}, "tenant_ids": {"type": "array", "description": "Displays the list of tenant ids", "items": {"type": "string"}}}, "type": "object"}, "ResourceViewDetails": {"required": ["resource_details"], "properties": {"resource_details": {"type": "array", "description": "Template/Scripts/Policies Details that is scheduled to run", "items": {"$ref": "#/definitions/ResourceDetails"}}}, "type": "object"}, "ResourceVisibilityListResponse": {"required": ["resource_list_data", "total_count"], "properties": {"total_count": {"type": "integer", "description": "count details"}, "resource_list_data": {"type": "array", "description": "List of account wise count data", "items": {"$ref": "#/definitions/PostureResourceListModel"}}}, "type": "object"}, "ResourceVisibilityResponse": {"required": ["account_wise_count", "category_wise_count", "last_sync_time", "region_wise_count", "resource_group_wise_count", "resource_wise_count"], "properties": {"last_sync_time": {"type": "string", "description": "last sync time"}, "account_wise_count": {"type": "array", "description": "List of account wise count data", "items": {"$ref": "#/definitions/PostureAccountModel"}}, "resource_wise_count": {"type": "array", "description": "List of resource wise count data", "items": {"$ref": "#/definitions/PostureResourceModel"}}, "region_wise_count": {"type": "array", "description": "List of region wise count data", "items": {"$ref": "#/definitions/PostureRegionModel"}}, "resource_group_wise_count": {"type": "array", "description": "List of resource group wise data", "items": {"$ref": "#/definitions/PostureResourceGroupModel"}}, "category_wise_count": {"type": "array", "description": "List of category wise data", "items": {"$ref": "#/definitions/PostureCategoryModel"}}}, "type": "object"}, "ResourcesDetails": {"required": ["action", "execution_type", "id", "name", "param_mapper"], "properties": {"param_mapper": {"type": "object", "description": "Mapping of input parameter for this template to the output parameter of any of the previous templates"}, "execution_type": {"type": "string", "description": "Can be \u201con_demand\u201d or \u201cscheduled\u201d. Indicates whether this template/script will be executed immediately on executing the blueprint or will be scheduled for one/more occurrences"}, "action": {"type": "string", "description": "A short name that represents the action performed by the template. Useful while viewing the job output while executing the blueprint"}, "name": {"type": "string", "description": "Resource Name"}, "id": {"type": "string", "description": "Resource ID"}}, "type": "object"}, "Role": {"properties": {"id": {"type": "string"}, "name": {"type": "string"}, "role_type": {"type": "string"}}, "type": "object"}, "RoleAssignment": {"required": ["roles", "tenant_id", "tenant_name"], "properties": {"tenant_name": {"type": "string", "description": "Name of the tenant within the CoreStack account"}, "tenant_id": {"type": "string", "description": "ID of the tenant within the CoreStack account"}, "roles": {"type": "array", "description": "List of roles for this tenant. User can have multiple roles within a tenant", "items": {"$ref": "#/definitions/RoleAssignmentRole"}}}, "type": "object"}, "RoleAssignmentRole": {"required": ["id", "name"], "properties": {"name": {"type": "string", "description": "Name of the Role assigned to the user under a tenant"}, "id": {"type": "string", "description": "ID of the Role assigned to the user under a tenant"}}, "type": "object"}, "RoleDetails": {"required": ["role_name", "role_type"], "properties": {"role_name": {"type": "string", "description": "Name of the Role assigned to the user under a tenant"}, "role_type": {"type": "string", "description": "Type of the Role assigned to the user under a tenant"}}, "type": "object"}, "RoleInfoModel": {"properties": {"tenant_id": {"type": "string", "description": "Tenant id"}, "roles": {"type": "array", "description": "list of role ids assigned to user", "items": {"type": "string"}}}, "type": "object"}, "RoleListData": {"required": ["access", "category", "created_at", "description", "id", "name", "role_type", "status", "users"], "properties": {"id": {"type": "string", "description": "ID of the Role. This is an auto generated and unique in the CoreStack system"}, "name": {"type": "string", "description": "Name of the role. This is unique in the CoreStack system for a specific tenant"}, "status": {"type": "string", "description": "Status of the Role"}, "access": {"type": "array", "description": "List of access the role can perform in the tenant", "items": {"type": "string"}}, "role_type": {"type": "string", "description": "Type of the Role assigned to the user under a tenant"}, "users": {"type": "integer", "description": "Count of users having the role attached under a tenant"}, "description": {"type": "string", "description": "Description of the role"}, "created_at": {"type": "string", "description": "Date and time of role creation"}, "category": {"type": "string", "description": "Category of the specific role. Either default or custom"}, "policies": {"type": "object", "description": "List of policy available for a role"}}, "type": "object"}, "RoleListResponse": {"required": ["roles", "total_count"], "properties": {"total_count": {"type": "integer", "description": "Total number of roles available in the specific tenant"}, "roles": {"type": "array", "description": "List of roles available in specific tenant", "items": {"$ref": "#/definitions/RoleListData"}}}, "type": "object"}, "RoleSummary": {"properties": {"name": {"type": "string", "description": "Name of the User"}, "role_type": {"type": "string", "description": "User role type"}, "category": {"type": "string", "description": "User category"}, "tenant_name": {"type": "string", "description": "Tenant name"}}, "type": "object"}, "RoleSummaryBatchResponse": {"properties": {"results": {"type": "object", "description": "Map from identifier to response model", "additionalProperties": {"$ref": "#/definitions/RoleSummary"}}}, "type": "object"}, "SavingsWiseSummary": {"required": ["cost_saved_current_month", "cost_saved_till_date", "potential_cost_saving_recommended"], "properties": {"cost_saved_till_date": {"type": "array", "description": "Details about cost saved till date", "items": {"$ref": "#/definitions/CostWiseSummary"}}, "cost_saved_current_month": {"type": "array", "description": "Cost saved for the current month", "items": {"$ref": "#/definitions/CostWiseSummary"}}, "potential_cost_saving_recommended": {"type": "array", "description": "recommendations on cost savings", "items": {"$ref": "#/definitions/CostWiseSummary"}}}, "type": "object"}, "ScanScriptResponse": {"required": ["hosts", "scanned_parameters"], "properties": {"scanned_parameters": {"type": "object", "description": "A JSON object which contains the scanned parameters of the script."}, "hosts": {"type": "array", "description": "Hosts available in the playbook if any", "items": {"type": "string"}}}, "type": "object"}, "ScheduleDashboardSummaryRequest": {"required": ["service_name", "tenant_id"], "properties": {"tenant_id": {"type": "array", "description": "tenant_ids", "items": {"type": "string"}}, "service_name": {"type": "array", "description": "service name", "items": {"type": "string", "description": "Cloud Provider to select", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}}, "currency": {"type": "array", "items": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}}}, "type": "object"}, "ScheduleData": {"required": ["args", "created_at", "created_by", "description", "id", "name", "next_run", "recurrence", "resource_details", "schedule", "type"], "properties": {"id": {"type": "string", "description": "Schedule ID"}, "name": {"type": "string", "description": "Schedule Name"}, "type": {"type": "string", "description": "Schedule type", "example": "template", "enum": ["template", "script", "policy"], "x-cs-enum-type": "ScheduleType"}, "description": {"type": "string", "description": "Description of the schedule"}, "recurrence": {"type": "string", "description": "Re-occurrence of the schedule"}, "next_run": {"type": "string", "description": "When will the schedule run for the next time"}, "schedule": {"type": "object", "description": "Schedule date and time details"}, "args": {"type": "object", "description": "Input Parameters for that Template/Script/Policy that is scheduled"}, "resource_details": {"type": "array", "description": "Template/Script/Policy Details that is scheduled", "items": {"$ref": "#/definitions/ResourceDetails"}}, "created_at": {"type": "string", "description": "When the schedule is created"}, "created_by": {"type": "string", "description": "Who has created the schedule"}}, "type": "object"}, "ScopeFilter": {"properties": {"scope": {"type": "array", "description": "ID of resource filter", "items": {"type": "string"}}, "applicability_by": {"type": "array", "description": "List applicability filters of cloud account", "items": {"type": "string"}}, "tag_keys": {"type": "array", "description": "Get tags keys of cloud account", "items": {"type": "string"}}, "regions": {"type": "array", "description": "List of regions of cloud account", "items": {"$ref": "#/definitions/ScopeFilterRegion"}}, "resources": {"type": "array", "description": "Get resource filters of cloud account", "items": {"type": "string"}}, "resource_groups": {"type": "array", "description": "List of resource groups of cloud account", "items": {"$ref": "#/definitions/ScopeResourceGroup"}}, "zone": {"type": "array", "description": "List zone of cloud account", "items": {"$ref": "#/definitions/ScopeFilterZone"}}}, "type": "object"}, "ScopeFilterRegion": {"properties": {"type": {"type": "string", "description": "Type for region"}, "key": {"type": "string", "description": "Key for region"}, "name": {"type": "string", "description": "Name for region"}, "id": {"type": "string", "description": "Id for region"}}, "type": "object"}, "ScopeFilterZone": {"properties": {"name": {"type": "string", "description": "Name for zone"}, "id": {"type": "string", "description": "Id for zone"}, "zone_id": {"type": "string", "description": "Zone_id for zone"}, "region": {"type": "string", "description": "Region for zone"}}, "type": "object"}, "ScopeResourceGroup": {"properties": {"name": {"type": "string", "description": "Name for resource"}, "id": {"type": "string", "description": "Id for resource"}}, "type": "object"}, "ScoreDetails": {"required": ["current", "max", "percentage"], "properties": {"max": {"type": "integer", "description": "SecureScore max for the tenant"}, "current": {"type": "number", "description": "SecureScore current for the tenant"}, "percentage": {"type": "number", "description": "SecureScore percentage for the tenant"}}, "type": "object"}, "ScriptDataList": {"required": ["category", "description", "operating_system", "platform", "scope", "script_id", "script_name", "status", "type", "uri"], "properties": {"script_id": {"type": "string", "description": "Unique Id of the script"}, "script_name": {"type": "string", "description": "Name of the script"}, "uri": {"type": "string", "description": "Unique URI for script"}, "description": {"type": "string", "description": "Description about script"}, "status": {"type": "string", "description": "Status of the script"}, "category": {"type": "array", "description": "Category of the script", "items": {"type": "string"}}, "platform": {"type": "array", "description": "Platforms supported by script.", "items": {"type": "string"}}, "operating_system": {"type": "array", "description": "OS supported by script", "items": {"type": "string"}}, "type": {"type": "string", "description": "Config type of the script"}, "scope": {"type": "string", "description": "Scope of the script (global/account/tenant/private)"}}, "type": "object"}, "ScriptDataView": {"required": ["category", "cookbook_name", "cookbook_path", "created_at", "created_by", "description", "module_name", "module_path", "operating_system", "parameters", "path_type", "platform", "playbook_name", "playbook_path", "scope", "script_id", "script_name", "shell_script_name", "shell_script_path", "status", "type", "updated_at", "updated_by", "uri"], "properties": {"script_id": {"type": "string", "description": "Unique Id of the script"}, "script_name": {"type": "string", "description": "Name of the script"}, "uri": {"type": "string", "description": "Unique URI for script"}, "description": {"type": "string", "description": "Description about script"}, "status": {"type": "string", "description": "Status of the script(active/inactive). Only active scripts can be executed"}, "category": {"type": "array", "description": "Category the script belongs to the script", "items": {"type": "object"}}, "platform": {"type": "array", "description": "Platforms supported by script.", "items": {"type": "object"}}, "operating_system": {"type": "array", "description": "OS supported by script", "items": {"type": "object"}}, "type": {"type": "string", "description": "Config type of the script (chef/ansible/shell/puppet)"}, "scope": {"type": "string", "description": "Scope of the script  (global/account/tenant/private)"}, "path_type": {"type": "string", "description": "Script path type such as git/url/repository(puppet_alone)/galaxy(ansible)."}, "playbook_path": {"type": "string", "description": "Playbook path - available for ansible alone"}, "playbook_name": {"type": "string", "description": "Playbook name - available for ansible alone"}, "cookbook_path": {"type": "string", "description": "Cookbook path - available for chef alone."}, "cookbook_name": {"type": "string", "description": "Cookbook path - available for chef alone"}, "shell_script_path": {"type": "string", "description": "Shell script path - available for shell alone"}, "shell_script_name": {"type": "string", "description": "Shell script path - available for shell alone"}, "module_path": {"type": "string", "description": "Module path - available for puppet alone"}, "module_name": {"type": "string", "description": "Module path - available for puppet alone."}, "parameters": {"type": "object", "description": "A JSON object which contains the parameters of the script."}, "created_by": {"type": "string", "description": "Name of the user who created the script."}, "created_at": {"type": "string", "description": "Script creation time in UTC"}, "updated_by": {"type": "string", "description": "Name of the user who updated the script. "}, "updated_at": {"type": "string", "description": "Script update time in UTC"}}, "type": "object"}, "ScriptDeleteResponse": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Delete Response message."}}, "type": "object"}, "ScriptInfo": {"required": ["name", "path", "path_type"], "properties": {"name": {"type": "string", "description": "Script Name as available in the path"}, "path_type": {"type": "string", "description": "Path typeCorestack currently supports git/url/repository(puppet_alone)/galaxy(ansible)."}, "path": {"type": "string", "description": "Path of the script. ExamplesFor git path_type: https://github.com/ansible/test-playbooks.git,For url path_type: https://s3.amazonaws.com/ansible/test-playbooks.tar,For galaxy: https://galaxy.ansible.com/community/zabbix."}}, "type": "object"}, "ScriptJobDataView": {"required": ["completed_at", "execution_type", "initiated_by", "started_at", "status", "status_reason"], "properties": {"script_job_id": {"type": "string", "description": "Unique ID of the Script Job"}, "script_job_name": {"type": "string", "description": "Name of the Script Job"}, "status": {"type": "string", "description": "Overall status of the script execution"}, "status_reason": {"type": "string", "description": "Error message if failed"}, "started_at": {"type": "string", "description": "Script Job start time in UTC"}, "completed_at": {"type": "string", "description": "Script Job completion time in UTC"}, "execution_type": {"type": "string", "description": "Script Job execution type (on_demand/scheduled)"}, "initiated_by": {"type": "string", "description": "User who initiated script execution"}, "job_info": {"description": "Script execution details", "$ref": "#/definitions/ScriptJobInfo"}}, "type": "object"}, "ScriptJobInfo": {"required": ["host", "platform", "username"], "properties": {"host": {"type": "string", "description": "Target machine's IP/DNS"}, "username": {"type": "string", "description": "Username of the target machine"}, "platform": {"type": "string", "description": "Platform of the target machine."}, "script_info": {"description": "Script execution details", "$ref": "#/definitions/ScriptJobScriptInfo"}}, "type": "object"}, "ScriptJobListModel": {"required": ["completed_at", "execution_type", "initiated_by", "started_at", "status", "status_reason"], "properties": {"script_job_id": {"type": "string", "description": "Unique ID of the Script Job"}, "script_job_name": {"type": "string", "description": "Name of the Script Job"}, "status": {"type": "string", "description": "Overall status of the script execution"}, "status_reason": {"type": "string", "description": "Error message if failed"}, "started_at": {"type": "string", "description": "Script Job start time in UTC"}, "completed_at": {"type": "string", "description": "Script Job completion time in UTC"}, "execution_type": {"type": "string", "description": "Script Job execution type (on_demand/scheduled)"}, "initiated_by": {"type": "string", "description": "User who initiated the script execution"}}, "type": "object"}, "ScriptJobListResponse": {"required": ["script_jobs", "total_pages", "total_script_jobs"], "properties": {"total_script_jobs": {"type": "string", "description": "Total number of script jobs available"}, "total_pages": {"type": "string", "description": "Total number of pages"}, "script_jobs": {"description": "Script Jobs List.", "$ref": "#/definitions/ScriptJobListModel"}}, "type": "object"}, "ScriptJobScriptInfo": {"required": ["config_type", "output_parameters", "parameters", "script_id", "script_name", "started_at", "status", "status_reason"], "properties": {"script_id": {"type": "string", "description": "Script Id"}, "script_name": {"type": "string", "description": "Script Name"}, "config_type": {"type": "string", "description": "Config type of the script(s)"}, "parameters": {"type": "object", "description": "Parameters of the script."}, "parameter_source": {"type": "string", "description": "Parameter source - whether as per the one defined in script or custom json", "default": "script", "example": "script", "enum": ["script", "json"], "x-cs-enum-type": "ParameterSource"}, "output_parameters": {"type": "object", "description": "Output parameters of the script (all applied parameters)."}, "status": {"type": "string", "description": "Status of the script execution"}, "status_reason": {"type": "string", "description": "Error message if failed"}, "started_at": {"type": "string", "description": "Execution start time in UTC"}}, "type": "object"}, "ScriptListResponse": {"required": ["scripts", "total_pages", "total_scripts"], "properties": {"total_scripts": {"type": "string", "description": "Total number of scripts available"}, "total_pages": {"type": "string", "description": "Total number of pages"}, "scripts": {"description": "Scripts List.", "$ref": "#/definitions/ScriptDataList"}}, "type": "object"}, "ScriptMinimumRequirements": {"properties": {"ram(MB)": {"type": "number", "description": "Minimum RAM required(in MB) to install the script.", "default": 0.0}, "cpu": {"type": "integer", "description": "Minimum CPU core required(in MB) to install the script.", "default": 0}, "disk(MB)": {"type": "number", "description": "Minimum disk space required(in MB) to install the script.", "default": 0.0}}, "type": "object"}, "ScriptScanRequest": {"required": ["config_type"], "properties": {"config_type": {"type": "string", "description": "Config type of the script", "example": "chef", "enum": ["chef", "ansible", "puppet", "shell"], "x-cs-enum-type": "ConfigType"}, "script_info": {"type": "array", "items": {"description": "script info", "$ref": "#/definitions/ScriptInfo"}}, "dependencies": {"type": "array", "items": {"description": "Details of the dependent scripts if any", "$ref": "#/definitions/ScriptInfo"}}, "playbook_yaml": {"type": "string", "description": "Playbook yaml path - mandatory for ansible scripts"}}, "type": "object"}, "SecureDetails": {"required": ["cloud_account_id", "cloud_account_name", "cloud_name", "created_at", "created_by", "id", "secure_scores", "subscription_id", "subscription_name", "tenant_id", "tenant_name", "updated_at", "updated_by"], "properties": {"id": {"type": "string", "description": "ID"}, "cloud_account_id": {"type": "string", "description": "cloud account id"}, "subscription_id": {"type": "string", "description": "Azure Subscription ID."}, "created_at": {"type": "string", "description": "When the schedule is created"}, "created_by": {"type": "string", "description": "Who has created the schedule"}, "tenant_id": {"type": "string", "description": "Id of the tenant"}, "tenant_name": {"type": "string", "description": "Name of the tenant"}, "secure_scores": {"description": "secure score for the cloud account", "$ref": "#/definitions/SecureScoreDetails"}, "cloud_account_name": {"type": "string", "description": "Cloud Service Name"}, "cloud_name": {"type": "string", "description": "Cloud Service Name"}, "subscription_name": {"type": "string", "description": "Name of the subscription from Azure"}, "updated_at": {"type": "string", "description": "Date and Time of Update"}, "updated_by": {"type": "string", "description": "Who has updated the secure score"}}, "type": "object"}, "SecureScoreDetails": {"required": ["id", "name", "properties", "type"], "properties": {"id": {"type": "string", "description": "ID of the cloud account subscription"}, "name": {"type": "string", "description": "Secure score name for azure subscription"}, "type": {"type": "string", "description": "Microsoft api for secure scores"}, "properties": {"description": "Secure score value", "$ref": "#/definitions/DerivedDetails"}}, "type": "object"}, "SecurityDashboardAccessViolationByTrend": {"properties": {"month": {"type": "string", "format": "date", "description": "Access Violation Month"}, "count_by_severity": {"description": "Access Violations Severity Values", "$ref": "#/definitions/SecurityDashboardSeverity"}}, "type": "object"}, "SecurityDashboardAccountFilters": {"properties": {"tenants": {"type": "array", "description": "Specify the tenant ID. This is a unique ID and can be retrieved using the List Tenants API.", "items": {"type": "string"}}, "clouds": {"type": "array", "description": "Define the Cloud Providers to include.", "items": {"type": "string", "description": "Cloud Provider to select", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}}, "cloud_accounts": {"type": "array", "description": "Specify the Cloud Account IDs.", "items": {"type": "string"}}}, "type": "object"}, "SecurityDashboardCompliance": {"properties": {"cloud_account_id": {"type": "string", "description": "Cloud Account Id"}, "high": {"$ref": "#/definitions/SecurityDashboardComplianceSeverity"}, "medium": {"$ref": "#/definitions/SecurityDashboardComplianceSeverity"}, "low": {"$ref": "#/definitions/SecurityDashboardComplianceSeverity"}}, "type": "object"}, "SecurityDashboardComplianceControlHealth": {"properties": {"control_family": {"type": "string", "description": "Name of Compliance Control Family"}, "trend": {"type": "array", "items": {"$ref": "#/definitions/SecurityDashboardComplianceControlHealthTrend"}}}, "type": "object"}, "SecurityDashboardComplianceControlHealthTrend": {"properties": {"month": {"type": "string", "format": "date", "description": "Control Health Month"}, "measured_risk": {"type": "string", "description": "Compliance Measured Risk Levels", "example": "High", "enum": ["High", "Medium", "Low", "Not_Assessed"], "x-cs-enum-type": "ComplianceMeasuredRisk"}}, "type": "object"}, "SecurityDashboardComplianceSeverity": {"properties": {"total": {"type": "integer", "description": "Total Severity Count"}, "violations": {"type": "integer", "description": "Total Violations Count"}}, "type": "object"}, "SecurityDashboardComplianceStatus": {"properties": {"compliance_name": {"type": "string", "description": "Name of Compliance"}, "cloud_accounts_status": {"type": "array", "description": "Security Dashboard Compliance", "items": {"$ref": "#/definitions/SecurityDashboardCompliance"}}}, "type": "object"}, "SecurityDashboardConfigViolationMonth": {"properties": {"month": {"type": "string", "format": "date", "description": "Config Violation Month"}, "count_by_severity": {"description": "Config Violations Severity Values", "$ref": "#/definitions/SecurityDashboardSeverity"}}, "type": "object"}, "SecurityDashboardRequest": {"properties": {"filter": {"$ref": "#/definitions/SecurityDashboardAccountFilters"}}, "type": "object"}, "SecurityDashboardSeverity": {"properties": {"critical": {"type": "integer", "description": "Critical Total Count", "default": 0}, "high": {"type": "integer", "description": "High Total Count", "default": 0}, "medium": {"type": "integer", "description": "Medium Total Count", "default": 0}, "low": {"type": "integer", "description": "Low Total Count", "default": 0}, "none": {"type": "integer", "description": "None Total Count", "default": 0}}, "type": "object"}, "SecurityDashboardThreatSummaryMonthResponse": {"properties": {"summary_by_month": {"type": "array", "description": "Visibility of the Threats by Month", "items": {"$ref": "#/definitions/SecurityDashboardThreatsMonth"}}}, "type": "object"}, "SecurityDashboardThreatsAccountDetails": {"properties": {"tenant_id": {"type": "string", "description": "Tenant value"}, "cloud_account_id": {"type": "string", "description": "Cloud Account value"}, "service_account_name": {"type": "string", "description": "Service Account Name"}, "cloud_provider": {"type": "string", "description": "Visibility for the Cloud Provider", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "count_by_severity": {"description": "Threats Severity Values", "$ref": "#/definitions/SecurityDashboardSeverity"}}, "type": "object"}, "SecurityDashboardThreatsByRegionCount": {"properties": {"cloud_provider": {"type": "string", "description": "Visibility for the Cloud Provider", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "region": {"type": "string", "description": "Threats Count by region name"}, "threat_count": {"type": "integer", "description": "Threats Total Count by region"}}, "type": "object"}, "SecurityDashboardThreatsByRegionResponse": {"properties": {"summary_by_cloudprovider": {"type": "array", "description": "Visibility of the threats by CloudProvider", "items": {"$ref": "#/definitions/SecurityDashboardThreatsByRegionCount"}}}, "type": "object"}, "SecurityDashboardThreatsByResourceCategoryCount": {"properties": {"cloud_account_id": {"type": "string", "description": "Cloud Account Id"}, "resource_category": {"type": "string", "description": "Name of the Resource Category"}, "threat_count": {"type": "integer", "description": "Threats Total Count by resource category"}, "resource_count": {"type": "integer", "description": "Total Count by Resource"}}, "type": "object"}, "SecurityDashboardThreatsByResourceCategoryResponse": {"properties": {"summary_by_provider_category": {"type": "array", "description": "Visibility of the threats by CloudProvider", "items": {"$ref": "#/definitions/SecurityDashboardThreatsByResourceCategoryCount"}}}, "type": "object"}, "SecurityDashboardThreatsMonth": {"properties": {"month": {"type": "string", "format": "date", "description": "Threats Month"}, "count_by_severity": {"description": "Threats Severity Values", "$ref": "#/definitions/SecurityDashboardSeverity"}}, "type": "object"}, "SecurityDashboardThreatsSummaryAccountResponse": {"properties": {"summary_by_accounts": {"type": "array", "description": "Visibility of the Threats by Account", "items": {"$ref": "#/definitions/SecurityDashboardThreatsAccountDetails"}}}, "type": "object"}, "SecurityDashboardViolationAccountDetails": {"properties": {"tenant_id": {"type": "string", "description": "Tenant value"}, "cloud_account_id": {"type": "string", "description": "Cloud Account value"}, "service_account_name": {"type": "string", "description": "Service Account Name"}, "cloud_provider": {"type": "string", "description": "Visibility for the Cloud Provider", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "count_by_severity": {"description": "Severity Values", "$ref": "#/definitions/SecurityDashboardSeverity"}}, "type": "object"}, "SecurityDashboardViolationByRegionCount": {"properties": {"cloud_provider": {"type": "string", "description": "Visibility for the Cloud Provider", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "region": {"type": "string", "description": "Config Violation Count by region name"}, "guardrail_violation_count": {"type": "integer", "description": "Violation Total Count by region"}}, "type": "object"}, "SecurityDashboardViolationByResourceCategoryCount": {"properties": {"cloud_account_id": {"type": "string", "description": "Cloud Account ID"}, "resource_category": {"type": "string", "description": "Name of Resource Category"}, "guardrail_violation_count": {"type": "integer", "description": "Violation Total Count by Resource Category"}, "resource_count": {"type": "integer", "description": "Total Resource Count"}}, "type": "object"}, "SecurityDashboardViolationsByAccountResponse": {"properties": {"summary_by_accounts": {"type": "array", "description": "Visibility of the Violations by Account", "items": {"$ref": "#/definitions/SecurityDashboardViolationAccountDetails"}}}, "type": "object"}, "SecurityDashboardViolationsByMonthResponse": {"properties": {"summary_by_month": {"type": "array", "description": "Visibility of the Threats by Month", "items": {"$ref": "#/definitions/SecurityDashboardConfigViolationMonth"}}}, "type": "object"}, "SecurityDashboardViolationsByRegionResponse": {"properties": {"summary_by_cloudprovider": {"type": "array", "description": "Visibility of the Config Violation by CloudProvider", "items": {"$ref": "#/definitions/SecurityDashboardViolationByRegionCount"}}}, "type": "object"}, "SecurityDashboardViolationsByResourceCategoryResponse": {"properties": {"summary_by_provider_category": {"type": "array", "description": "Visibility of the Config Violation by CloudProvider", "items": {"$ref": "#/definitions/SecurityDashboardViolationByResourceCategoryCount"}}}, "type": "object"}, "SecurityDashboardVulnerabilityAccountDetails": {"required": ["cloud_account_id", "service_account_name", "tenant_id"], "properties": {"tenant_id": {"type": "string", "description": "Tenant value"}, "cloud_account_id": {"type": "string", "description": "Cloud Account value"}, "service_account_name": {"type": "string", "description": "Service Account Name"}, "cloud_provider": {"type": "string", "description": "Visibility for the Cloud Provider", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "count_by_severity": {"description": "Vulnerability Severity Values", "$ref": "#/definitions/SecurityDashboardSeverity"}}, "type": "object"}, "SecurityDashboardVulnerabilityMonth": {"properties": {"month": {"type": "string", "description": "Vulnerability Month"}, "count_by_severity": {"description": "Vulnerability Severity Values", "$ref": "#/definitions/SecurityDashboardSeverity"}}, "type": "object"}, "SecurityDashboardVulnerabilityRegionCount": {"properties": {"cloud_provider": {"type": "string", "description": "Visibility for the Cloud Provider", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "count_by_regions": {"type": "array", "description": "Vulnerability Count by region", "items": {"$ref": "#/definitions/SecurityDashboardVulnerabilityRegionValue"}}}, "type": "object"}, "SecurityDashboardVulnerabilityRegionValue": {"properties": {"region": {"type": "string", "description": "Visibility of Region Name"}, "vulnerabilityCount": {"type": "integer", "description": "Visibility of Vulnerability Count by region", "default": 0}}, "type": "object"}, "SecurityDashboardVulnerabilitySummaryAccountResponse": {"properties": {"summary_by_accounts": {"type": "array", "description": "Visibility of the vulnerabilities by Account", "items": {"$ref": "#/definitions/SecurityDashboardVulnerabilityAccountDetails"}}}, "type": "object"}, "SecurityDashboardVulnerabilitySummaryRegionResponse": {"properties": {"summary_by_cloudprovider": {"type": "array", "description": "Visibility of the vulnerabilities by Account", "items": {"$ref": "#/definitions/SecurityDashboardVulnerabilityRegionCount"}}}, "type": "object"}, "SecurityNotificationConfiguration": {"properties": {"emails": {"type": "array", "description": "List of Emails", "items": {"type": "string"}}, "webhooks": {"type": "array", "description": "List of Webhooks", "items": {"type": "string"}}, "microsoft_teams_webhooks": {"type": "array", "description": "List of Teams Webhooks", "items": {"type": "string"}}, "exclude_onboarded_user": {"type": "boolean", "description": "Exclude onboarded user"}, "enable_daily_summary_email": {"type": "boolean", "description": "If true, send daily summary email"}, "enable_real_time_email": {"type": "boolean", "description": "If true, send real time email"}}, "type": "object"}, "SecurityPostureResponse": {"required": ["cloud_account", "page_count", "service", "total_count"], "properties": {"service": {"type": "object", "description": "Service wise details of the security findings"}, "cloud_account": {"type": "object", "description": "Cloud Account wise details of the security findings"}, "total_count": {"type": "integer", "description": "Total count of cloud accounts"}, "page_count": {"type": "integer", "description": "Total number of page count"}}, "type": "object"}, "SecurityPostureTenantResponse": {"required": ["page_count", "tenants", "total_count"], "properties": {"page_count": {"type": "integer", "description": "Total number of page count"}, "tenants": {"type": "object", "description": "Tenant wise count details"}, "total_count": {"type": "integer", "description": "Number of Tenants"}}, "type": "object"}, "SecurityVisibilityResponse": {"required": ["cloud_accounts", "count_summary", "findings_type", "intent", "resource_types"], "properties": {"cloud_accounts": {"type": "object", "description": "Visibility of the findings by cloud_accounts"}, "findings_type": {"type": "object", "description": "Visibility of the findings by findings_type"}, "resource_types": {"type": "object", "description": "Visibility of the findings by resource_types"}, "intent": {"type": "object", "description": "Visibility of the findings by intent"}, "count_summary": {"type": "object", "description": "Visibility of the findings count_summary "}}, "type": "object"}, "SecurityVulnerabilityResponse": {"required": ["cloud_accounts", "count_summary", "findings_type", "message", "resource_types", "status"], "properties": {"status": {"type": "string", "description": "status response"}, "message": {"type": "string", "description": "message response"}, "findings_type": {"type": "object", "description": "Visibility of the vulnerabilities by findings_type"}, "resource_types": {"type": "object", "description": "Visibility of the vulnerabilities by resource_types"}, "cloud_accounts": {"type": "object", "description": "Visibility of the vulnerabilities by cloud_accounts"}, "count_summary": {"type": "object", "description": "Visibility of the vulnerabilities by count_summary"}}, "type": "object"}, "SecurityVulnerabilitySummaryMonthResponse": {"properties": {"summary_by_month": {"type": "array", "description": "Visibility of the vulnerabilities by Month", "items": {"$ref": "#/definitions/SecurityDashboardVulnerabilityMonth"}}}, "type": "object"}, "ServiceAccountDetailModel": {"required": ["cloud_account_id"], "properties": {"cloud": {"type": "string", "description": "The cloud name of the account for which the policywill be executed ex: Azure, AWS etc"}, "cloud_account_id": {"type": "string", "description": "Identifier of the cloud account on boarded in the on boarding section"}, "region": {"type": "string", "description": "The region of the service account where it needs to be executed, if this is not provided the policy will execute for all the region"}, "resourcegroup": {"type": "string", "description": "Resource group for which you need to execute the policy for, this is not a mandatory parameter to be passed"}}, "type": "object"}, "ServiceAccountsModel": {"required": ["cloud_account_id", "cloud_account_name", "tenant_id"], "properties": {"cloud_account_id": {"type": "string", "description": "ID of the cloud account"}, "tenant_id": {"type": "string", "description": "ID of the tenant"}, "cloud_account_name": {"type": "string", "description": "Name of the cloud account"}}, "type": "object"}, "ServiceCatalogDeleteDataModel": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Cloud Account Default values cleared successfully"}}, "type": "object"}, "ServiceCatalogGetDataModel": {"required": ["data"], "properties": {"data": {"type": "string", "description": "catalog type"}}, "type": "object"}, "ServiceNowCmdbActionResourceMapping": {"properties": {"create": {"type": "array", "description": "ServiceNow Cmdb CI create attributes mapping", "items": {"$ref": "#/definitions/ServiceNowCmdbAttributeMapping"}}, "update": {"type": "array", "description": "ServiceNow Cmdb CI update attributes mapping", "items": {"$ref": "#/definitions/ServiceNowCmdbAttributeMapping"}}, "delete": {"type": "array", "description": "ServiceNow Cmdb CI delete attributes mapping", "items": {"$ref": "#/definitions/ServiceNowCmdbAttributeMapping"}}}, "type": "object"}, "ServiceNowCmdbAttributeMapping": {"required": ["target_column"], "properties": {"target_column": {"type": "string", "description": "Column Name in ServiceNow Cmdb table"}, "literal_value": {"type": "string", "description": "Literal Value"}, "attribute_id": {"type": "string", "description": "Identifier for the Inventory attribute"}}, "type": "object"}, "ServiceNowCmdbCiClass": {"properties": {"name": {"type": "string", "description": "Name of the Cmdb Ci Class"}, "label": {"type": "string", "description": "Display Name of the Cmdb Ci Class"}}, "type": "object"}, "ServiceNowCmdbCiClassAttribute": {"properties": {"name": {"type": "string", "description": "Name of the Cmdb Ci Class"}, "label": {"type": "string", "description": "Display Name of the Cmdb Ci Class"}, "mandatory": {"type": "boolean", "description": "Mandatory attribute Flag"}}, "type": "object"}, "ServiceNowCmdbCloudSchemaCategory": {"properties": {"hierarchy": {"type": "array", "items": {"description": "Service Hierarchy", "$ref": "#/definitions/ServiceNowCmdbResourceCategory"}}}, "type": "object"}, "ServiceNowCmdbCloudSchemaRequest": {"required": ["service_name"], "properties": {"service_name": {"type": "string", "description": "Cloud Provider to select", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}}, "type": "object"}, "ServiceNowCmdbConfig": {"allOf": [{"$ref": "#/definitions/ServiceNowCmdbConfigBaseResponse"}, {"properties": {"created_at": {"type": "string", "description": "When the configuration was created"}, "updated_at": {"type": "string", "description": "When the configuration was updated"}, "created_by": {"type": "string", "description": "Name of the user who created this configuration"}, "updated_by": {"type": "string", "description": "Name of the user who updated this configuration"}}, "type": "object"}]}, "ServiceNowCmdbConfigBaseRequest": {"allOf": [{"$ref": "#/definitions/ServiceNowCmdbScopeDetails"}, {"properties": {}, "type": "object"}]}, "ServiceNowCmdbConfigBaseResponse": {"allOf": [{"$ref": "#/definitions/ServiceNowCmdbScopeDetails"}, {"properties": {}, "type": "object"}]}, "ServiceNowCmdbConfigCreateRequest": {"allOf": [{"$ref": "#/definitions/ServiceNowCmdbConfigBaseRequest"}, {"required": ["cmdb_account_id", "cmdb_service", "configuration"], "properties": {"cmdb_account_id": {"type": "string", "description": "Id of the ServiceNow Account"}, "cmdb_service": {"type": "string", "description": "Name of the Cmdb Service"}, "configuration": {"type": "object", "description": "ServiceNow Cmdb Sync Configuration, indexed by CloudServiceName", "additionalProperties": {"$ref": "#/definitions/ServiceNowCmdbServiceConfig"}}}, "type": "object"}]}, "ServiceNowCmdbConfigCreateResponse": {"allOf": [{"$ref": "#/definitions/ServiceNowCmdbConfigBaseResponse"}, {"properties": {}, "type": "object"}]}, "ServiceNowCmdbConfigDeleteRequest": {"allOf": [{"$ref": "#/definitions/ServiceNowCmdbConfigBaseRequest"}, {"properties": {}, "type": "object"}]}, "ServiceNowCmdbConfigDeleteResponse": {"allOf": [{"$ref": "#/definitions/ServiceNowCmdbConfigBaseResponse"}, {"properties": {}, "type": "object"}]}, "ServiceNowCmdbConfigListRequest": {"required": ["cmdb_account_id", "tenant_id"], "properties": {"tenant_id": {"type": "string", "description": "Id of the Tenant that user has access to"}, "cmdb_account_id": {"type": "string", "description": "Id of the ServiceNow Account in Corestack"}}, "type": "object"}, "ServiceNowCmdbConfigUpdateRequest": {"allOf": [{"$ref": "#/definitions/ServiceNowCmdbConfigBaseRequest"}, {"required": ["cmdb_account_id", "cmdb_service", "configuration"], "properties": {"cmdb_account_id": {"type": "string", "description": "Id of the ServiceNow Account"}, "cmdb_service": {"type": "string", "description": "Name of the Cmdb Service"}, "configuration": {"type": "object", "description": "ServiceNow Cmdb Sync Configuration, indexed by CloudServiceName", "additionalProperties": {"$ref": "#/definitions/ServiceNowCmdbServiceConfig"}}}, "type": "object"}]}, "ServiceNowCmdbConfigUpdateResponse": {"allOf": [{"$ref": "#/definitions/ServiceNowCmdbConfigBaseResponse"}, {"properties": {}, "type": "object"}]}, "ServiceNowCmdbConfigView": {"allOf": [{"$ref": "#/definitions/ServiceNowCmdbConfigBaseResponse"}, {"properties": {"cmdb_account_id": {"type": "string", "description": "Id of the ServiceNow Account"}, "cmdb_service": {"type": "string", "description": "Name of the Cmdb Service"}, "configuration": {"type": "object", "description": "ServiceNow Cmdb Sync Configuration, indexed by CloudServiceName", "additionalProperties": {"$ref": "#/definitions/ServiceNowCmdbServiceConfig"}}}, "type": "object"}]}, "ServiceNowCmdbConfigViewRequest": {"allOf": [{"$ref": "#/definitions/ServiceNowCmdbConfigBaseRequest"}, {"required": ["cmdb_account_id"], "properties": {"cmdb_account_id": {"type": "string", "description": "Id of the ServiceNow Account in Corestack"}}, "type": "object"}]}, "ServiceNowCmdbInventoryAttribute": {"properties": {"attribute_id": {"type": "string", "description": "Identifier for the Inventory attribute"}, "display_name": {"type": "string", "description": "Display Name of the Inventory attribute"}}, "type": "object"}, "ServiceNowCmdbListClassAttributesRequest": {"required": ["cmdb_account_id", "cmdb_ci_class_name", "tenant_id"], "properties": {"tenant_id": {"type": "string", "description": "Id of the Tenant that user has access to"}, "cmdb_account_id": {"type": "string", "description": "Id of the ServiceNow Account in Corestack"}, "cmdb_ci_class_name": {"type": "string", "description": "Cmdb CI Class Name"}}, "type": "object"}, "ServiceNowCmdbListClassAttributesResponse": {"properties": {"results": {"type": "array", "description": "List of Cmdb CI Class Attributes", "items": {"$ref": "#/definitions/ServiceNowCmdbCiClassAttribute"}}}, "type": "object"}, "ServiceNowCmdbListCmdbClassRequest": {"required": ["cmdb_account_id", "tenant_id"], "properties": {"tenant_id": {"type": "string", "description": "Id of the Tenant that user has access to"}, "cmdb_account_id": {"type": "string", "description": "Id of the ServiceNow Account in Corestack"}}, "type": "object"}, "ServiceNowCmdbListCmdbClassResponse": {"properties": {"results": {"type": "array", "description": "List of Cmdb CI Classes", "items": {"$ref": "#/definitions/ServiceNowCmdbCiClass"}}}, "type": "object"}, "ServiceNowCmdbResourceCategory": {"properties": {"resource_category": {"type": "string", "description": "Name of the Resource Category"}, "resource_types": {"type": "array", "description": "List of Resource Type", "items": {"$ref": "#/definitions/ServiceNowCmdbResourceType"}}}, "type": "object"}, "ServiceNowCmdbResourceMapping": {"required": ["resource", "resource_category", "resource_type"], "properties": {"resource_category": {"type": "string", "description": "Resource Category"}, "resource_type": {"type": "string", "description": "Resource Type"}, "resource": {"type": "string", "description": "Resource"}, "cmdb_ci_class_name": {"type": "string", "description": "Name of the ServiceNow Cmdb CI Instance Class"}, "attribute_mapping": {"description": "ServiceNow Cmdb CI attributes mapping", "$ref": "#/definitions/ServiceNowCmdbActionResourceMapping"}}, "type": "object"}, "ServiceNowCmdbResourceType": {"properties": {"resource_type": {"type": "string", "description": "Name of the Resource Type"}, "resources": {"type": "array", "description": "List of Resource", "items": {"type": "string"}}}, "type": "object"}, "ServiceNowCmdbRuleMapping": {"properties": {"locations": {"type": "array", "description": "List of locations to filter", "items": {"type": "string"}}, "cloud_accounts": {"type": "array", "description": "List of Cloud Account to filter", "items": {"type": "string"}}, "tags": {"type": "array", "description": "List of tag key/value pairs", "items": {"$ref": "#/definitions/KeyValuePair"}}}, "type": "object"}, "ServiceNowCmdbScopeDetails": {"required": ["scope"], "properties": {"scope": {"type": "string", "description": "Scope to Apply", "example": "master_account", "enum": ["master_account", "tenant", "cloud_account"], "x-cs-enum-type": "ServiceNowCmdbScope"}, "master_account_id": {"type": "string", "description": "Master Account Id"}, "tenant_id": {"type": "string", "description": "Id of the tenants that user has access to"}, "cloud_account_id": {"type": "string", "description": "Id of the Cloud Account"}}, "type": "object"}, "ServiceNowCmdbServiceConfig": {"properties": {"resource_mapping": {"type": "array", "description": "ServiceNow Cmdb sync resource level mapping", "items": {"$ref": "#/definitions/ServiceNowCmdbResourceMapping"}}, "rule_mapping": {"description": "ServiceNow Cmdb Sync Configuration Rule Details", "$ref": "#/definitions/ServiceNowCmdbRuleMapping"}}, "type": "object"}, "ServiceNowCmdbSyncProgress": {"properties": {"total": {"type": "integer", "description": "Total number of resources identified for ServiceNow Cmdb sync"}, "success": {"type": "integer", "description": "Number of resources that have been synced"}, "failed": {"type": "integer", "description": "Number of resources that have been failed to sync"}}, "type": "object"}, "ServiceNowCmdbSyncProgressResponse": {"properties": {"status": {"type": "string", "description": "ServiceNow Cmdb sync status", "example": "Ready", "enum": ["Ready", "Pending", "Waiting", "Failed", "Completed", "Cancelled"], "x-cs-enum-type": "BackgroundJobStatus"}, "progress": {"description": "Progress of the ServiceNow Cmdb sync", "$ref": "#/definitions/ServiceNowCmdbSyncProgress"}}, "type": "object"}, "ServiceNowCmdbSyncRequest": {"required": ["cloud_account_id"], "properties": {"cloud_account_id": {"type": "string", "description": "Id of the Cloud Account"}, "update_configuration_for_existing_records": {"type": "boolean", "description": "Configuration update flag"}}, "type": "object"}, "ServiceNowCmdbSyncResponse": {"properties": {"id": {"type": "string", "description": "Id of the Cmdb sync job"}}, "type": "object"}, "ServiceNowCmdbViewInventorySchemaRequest": {"required": ["resource_category", "resource_type", "service_name"], "properties": {"service_name": {"type": "string", "description": "Cloud Provider to select", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "resource_category": {"type": "string", "description": "Resource Category"}, "resource_type": {"type": "string", "description": "Resource Type"}, "resource": {"type": "string", "description": "Resource"}}, "type": "object"}, "ServiceTypeWiseUsage": {"required": ["service_name", "usage"], "properties": {"service_name": {"type": "string", "description": "Cloud Service Name"}, "usage": {"type": "number", "description": "Total usage of that cloud service"}}, "type": "object"}, "SetDefaultRequest": {"required": ["monitoring_template_uri"], "properties": {"monitoring_template_uri": {"type": "string", "description": "Specify the monitoring_template_uri of the template to mark it as default"}}, "type": "object"}, "SetDefaultResponse": {"required": ["message"], "properties": {"message": {"type": "string", "description": "set template as default response"}}, "type": "object"}, "SubscriptionModel": {"properties": {"action": {"type": "string", "description": "Action will be create for project master creation"}, "subscription_id": {"type": "string", "description": "Subscription id of user"}}, "type": "object"}, "SummaryCountResponse": {"required": ["violations"], "properties": {"violations": {"description": "Contains the summary of violations shared under Utilization/Standards for AWS/Azure", "$ref": "#/definitions/ViolationCategoryModel"}}, "type": "object"}, "SummaryModel": {"required": ["category", "count"], "properties": {"count": {"type": "string", "description": "Violations count for each violation category, i.e. Utilization/Standards"}, "category": {"type": "string", "description": "Category of violations i.e Utilization/Standards"}}, "type": "object"}, "SummaryResponseDataModel": {"required": ["data", "message", "status"], "properties": {"data": {"type": "object", "description": "Activity Configuration Summary Response"}, "message": {"type": "string", "description": "View Activity Response"}, "status": {"type": "string", "description": "Status of Activity Response"}}, "type": "object"}, "SwaggerResource": {"properties": {"service_name": {"type": "string", "description": "select the cloud account type", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "resource_category": {"type": "string", "description": "Resource Category"}, "resource_type": {"type": "string", "description": "Resource Type"}, "resource": {"type": "string", "description": "Resource"}, "operations": {"type": "array", "description": "Resource Operations", "items": {"$ref": "#/definitions/SwaggerResourceOperation"}}}, "type": "object"}, "SwaggerResourceOperation": {"properties": {"id": {"type": "string", "description": "Id of the Operation"}, "name": {"type": "string", "description": "Name of the Operation"}, "operation_id": {"type": "string", "description": "Operation Id of the resource"}, "activity_type": {"type": "string", "description": "Activity Type"}, "is_default": {"type": "boolean", "description": "Default Activity Flag"}}, "type": "object"}, "SwaggerResourceSchemaResponse": {"properties": {"results": {"type": "array", "description": "Resource List", "items": {"$ref": "#/definitions/SwaggerResource"}}}, "type": "object"}, "TagBaselineAvailableTag": {"properties": {"key": {"type": "string", "description": "Tag key"}, "values": {"type": "array", "description": "Values for the tag key", "items": {"type": "string"}}}, "type": "object"}, "TagBaselineAvailableTagBatchResponse": {"properties": {"results": {"type": "object", "description": "Map from identifier to response model", "additionalProperties": {"$ref": "#/definitions/TagBaselineAvailableTag"}}}, "type": "object"}, "TagBaselineAvailableTagFilters": {"properties": {"tag_key_query": {"type": "string", "description": "Text filter the tag keys"}, "filters": {"description": "Account filters for the tags", "$ref": "#/definitions/AccountFilters"}}, "type": "object"}, "TagBaselineAvailableTagListRequest": {"properties": {"list_context": {"description": "Optional list context", "$ref": "#/definitions/ListContext"}, "sort": {"type": "array", "description": "Sort criteria", "items": {"$ref": "#/definitions/TagBaselineAvailableTagSortCriteria"}}, "filters": {"description": "Filters for the request", "$ref": "#/definitions/TagBaselineAvailableTagFilters"}}, "type": "object"}, "TagBaselineAvailableTagSortCriteria": {"required": ["column"], "properties": {"column": {"type": "string", "example": "Key", "enum": ["Key"], "x-cs-enum-type": "TagBaselineAvailableTagSortColumn"}, "ascending": {"type": "boolean"}}, "type": "object"}, "TagBaselineConfiguration": {"required": ["scope", "tags"], "properties": {"title": {"type": "string", "description": "Name of the baseline"}, "description": {"type": "string", "description": "Description of the baseline"}, "scope": {"description": "At what scope level the baseline should work", "$ref": "#/definitions/TagBaselineScope"}, "tags": {"type": "object", "description": "Tag rules in this baseline", "additionalProperties": {"$ref": "#/definitions/TagBaselineRule"}}}, "type": "object"}, "TagBaselineDefinition": {"required": ["account_id", "is_active"], "properties": {"sysId": {"type": "string"}, "createdOn": {"type": "string", "format": "date-time"}, "updatedOn": {"type": "string", "format": "date-time"}, "account_id": {"type": "string", "description": "Account owning the tag baseline"}, "headVersion": {"$ref": "#/definitions/RecordIdentity"}, "releaseVersion": {"$ref": "#/definitions/RecordIdentity"}, "is_active": {"type": "boolean", "description": "States if the baseline definition is active or not"}}, "type": "object"}, "TagBaselineDefinitionVersion": {"properties": {"sysId": {"type": "string"}, "createdOn": {"type": "string", "format": "date-time"}, "updatedOn": {"type": "string", "format": "date-time"}, "version": {"type": "integer"}, "definition": {"$ref": "#/definitions/RecordIdentity"}, "details": {"$ref": "#/definitions/TagBaselineConfiguration"}, "predecessor": {"$ref": "#/definitions/RecordIdentity"}}, "type": "object"}, "TagBaselineReference": {"properties": {"baseline_id": {"type": "string"}, "baseline_version_id": {"type": "string"}}, "type": "object"}, "TagBaselineRule": {"required": ["__type"], "properties": {"category": {"type": "array", "description": "Categories for this tag", "items": {"type": "string"}}}, "discriminator": "__type", "type": "object", "x-cs-subtypes": [{"subtype_model": "TagBaselineRuleAllowedValues", "subtype_name": "TagBaselineRuleAllowedValues"}, {"subtype_model": "TagBaselineRuleRegex", "subtype_name": "TagBaselineRuleRegex"}, {"subtype_model": "TagBaselineRuleCondition", "subtype_name": "TagBaselineRuleCondition"}]}, "TagBaselineRuleAllowedValues": {"allOf": [{"$ref": "#/definitions/TagBaselineRule"}, {"required": ["allowed_values"], "properties": {"allowed_values": {"type": "array", "description": "Allowed values for this tag", "items": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "TagBaselineRuleAllowedValues"}, "TagBaselineRuleCondition": {"allOf": [{"$ref": "#/definitions/TagBaselineRule"}, {"properties": {"starts_with": {"type": "string", "description": "Allowed values should start with this text"}, "contains": {"type": "string", "description": "Allowed values should contain this text"}, "ends_with": {"type": "string", "description": "Allowed values should end with this text"}}, "type": "object"}], "x-cs-type-name": "TagBaselineRuleCondition"}, "TagBaselineRuleRegex": {"allOf": [{"$ref": "#/definitions/TagBaselineRule"}, {"required": ["regex_pattern"], "properties": {"regex_pattern": {"type": "string", "description": "Regular expression for allowed values for this tag"}}, "type": "object"}], "x-cs-type-name": "TagBaselineRuleRegex"}, "TagBaselineScope": {"required": ["__type"], "properties": {"inherit": {"type": "boolean", "description": "Allow inheriting rules from parent scope"}}, "discriminator": "__type", "type": "object", "x-cs-subtypes": [{"subtype_model": "TagBaselineScopeGlobal", "subtype_name": "TagBaselineScopeGlobal"}, {"subtype_model": "TagBaselineScopeTenant", "subtype_name": "TagBaselineScopeTenant"}, {"subtype_model": "TagBaselineScopeCloudAccount", "subtype_name": "TagBaselineScopeCloudAccount"}]}, "TagBaselineScopeCloudAccount": {"allOf": [{"$ref": "#/definitions/TagBaselineScope"}, {"properties": {"cloud_account_ids": {"type": "array", "items": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "TagBaselineScopeCloudAccount"}, "TagBaselineScopeGlobal": {"allOf": [{"$ref": "#/definitions/TagBaselineScope"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "TagBaselineScopeGlobal"}, "TagBaselineScopeTenant": {"allOf": [{"$ref": "#/definitions/TagBaselineScope"}, {"properties": {"tenant_ids": {"type": "array", "items": {"type": "string"}}}, "type": "object"}], "x-cs-type-name": "TagBaselineScopeTenant"}, "TagLevelTrendWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"required": ["granularity"], "properties": {"granularity": {"type": "string", "description": "Granularity to aggregate data", "example": "day", "enum": ["day", "month", "year"], "x-cs-enum-type": "TrendGranularity"}}, "type": "object"}], "x-cs-type-name": "TagLevelTrendWidgetConfiguration"}, "TagPatternListResponse": {"required": ["tagpatterns"], "properties": {"tagpatterns": {"type": "array", "description": "List of tag patterns", "items": {"$ref": "#/definitions/TagPatternsList"}}}, "type": "object"}, "TagPatternUpdateResponse": {"required": ["auto_create", "created_at", "match_type", "name", "scope", "tag_key", "tag_pattern_id", "tag_value_mapper", "updated_at"], "properties": {"tag_pattern_id": {"type": "string", "description": "Unique ID of the Tag pattern."}, "name": {"type": "string", "description": "Name of the Tag pattern."}, "created_at": {"type": "string", "description": "Tag pattern Creation time in UTC"}, "scope": {"type": "string", "description": "Scope of the tag pattern [Cloud Account,Tenant]."}, "tag_key": {"type": "string", "description": "Tag key associated with the tag pattern."}, "tag_value_mapper": {"type": "string", "description": "Tag value mapper of the tag pattern [Environment,Application,ApplicationGroup,CostCenter]."}, "updated_at": {"type": "string", "description": "Latest updated date of the tag pattern in UTC"}, "auto_create": {"type": "boolean", "description": "Is it auto create or not"}, "match_type": {"type": "string", "description": "Match type of the tag pattern [StringMatch, Regex]"}, "patterns": {"type": "array", "description": "Pattern to match", "items": {"type": "string"}}, "metadata": {"description": "Details about the file to be uploaded", "$ref": "#/definitions/MetaData"}}, "type": "object"}, "TagPatternsCreateResponse": {"required": ["tagpattern_id"], "properties": {"tagpattern_id": {"type": "string", "description": "Unique Id of the Tag Pattern"}}, "type": "object"}, "TagPatternsList": {"required": ["auto_create", "created_at", "match_type", "name", "scope", "tag_key", "tag_value_mapper", "tagpattern_id", "updated_at"], "properties": {"tagpattern_id": {"type": "string", "description": "Unique ID of the Tag pattern."}, "name": {"type": "string", "description": "Name of the tag pattern."}, "scope": {"type": "string", "description": "Scope of the tag pattern [Cloud Account,Tenant]"}, "match_type": {"type": "string", "description": "Match type of the tag pattern [StringMatch, Regex]"}, "tag_key": {"type": "string", "description": "Tag key associated with the tag pattern."}, "tag_value_mapper": {"type": "string", "description": "Tag value mapper of the tag pattern [Environment,Application,ApplicationGroup,CostCenter]"}, "created_at": {"type": "string", "description": "Created date of the tag pattern in UTC"}, "updated_at": {"type": "string", "description": "Latest updated date of the tag pattern in UTC"}, "auto_create": {"type": "boolean", "description": "Is it auto create or not"}}, "type": "object"}, "TagPatternsRemoveResModel": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Delete Response message."}}, "type": "object"}, "TagPatternsUpdateResponse": {"properties": {"tagpattern_id": {"type": "string", "description": "Unique ID of the Tag pattern"}}, "type": "object"}, "TagPostureBase": {"required": ["__type"], "properties": {"baseline_id": {"type": "string", "description": "Baseline used to generate posture"}, "baseline_version_id": {"type": "string", "description": "Baseline used to generate posture"}, "account_id": {"type": "string", "description": "Id of the CoreStack Account under which this tenant resides"}, "tenant_id": {"type": "string", "description": "Id of the CoreStack Tenant for the posture"}, "cloud": {"type": "string", "description": "Cloud Provider being summarized", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "cloud_account_id": {"type": "string", "description": "Cloud Account id for the posture"}}, "discriminator": "__type", "type": "object", "x-cs-subtypes": [{"subtype_model": "TagPostureCloudAccountSummary", "subtype_name": "TagPostureCloudAccountSummary"}, {"subtype_model": "TagPostureResourceBase", "subtype_name": "TagPostureResourceBase"}, {"subtype_model": "TagPostureResourceSummary", "subtype_name": "TagPostureResourceSummary"}, {"subtype_model": "TagPostureResource", "subtype_name": "TagPostureResource"}]}, "TagPostureCloudAccountSummary": {"allOf": [{"$ref": "#/definitions/TagPostureBase"}, {"properties": {"cloud_account_name": {"type": "string", "description": "Name of cloud account"}, "resource_coverage": {"description": "Resource coverage of the posture", "$ref": "#/definitions/TagPostureResourceCoverage"}, "tag_coverage": {"type": "array", "description": "Tag level coverage for the posture", "items": {"$ref": "#/definitions/TagPostureTagCoverage"}}, "remediation_allowed": {"type": "boolean", "description": "Whether tag remediation is allowed for this account"}}, "type": "object"}], "x-cs-type-name": "TagPostureCloudAccountSummary"}, "TagPostureCloudAccountSummaryBatchResponse": {"properties": {"results": {"type": "object", "description": "Map from identifier to response model", "additionalProperties": {"$ref": "#/definitions/TagPostureCloudAccountSummary"}}}, "type": "object"}, "TagPostureContext": {"properties": {"filter": {"$ref": "#/definitions/AccountFilters"}, "baseline_id": {"type": "string", "description": "Only return postures for the selected baseline"}, "resource_categories": {"type": "array", "description": "Resource categories to filter (all if missing)", "items": {"type": "string"}}, "resource_components": {"type": "array", "description": "Resource components to filter (all if missing)", "items": {"type": "string"}}, "resource_types": {"type": "array", "description": "Resources types to filter (all if missing)", "items": {"type": "string"}}, "resources": {"type": "array", "description": "Resources to filter (all if missing)", "items": {"type": "string"}}, "supports_remediation_only": {"type": "boolean", "description": "Whether to only return resources that support remediation"}, "text_query": {"type": "string", "description": "Text query for tag postures"}}, "type": "object"}, "TagPostureResource": {"allOf": [{"$ref": "#/definitions/TagPostureResourceBase"}, {"properties": {"resource_tags": {"type": "array", "description": "List of tags for the resource", "items": {"$ref": "#/definitions/TagPostureTagDetails"}}}, "type": "object"}], "x-cs-type-name": "TagPostureResource"}, "TagPostureResourceBase": {"allOf": [{"$ref": "#/definitions/TagPostureBase"}, {"properties": {"resource_id": {"type": "string", "description": "Identifier of the resource"}, "cloud_resource_id": {"type": "string", "description": "Cloud resource id"}, "resource_name": {"type": "string", "description": "Name of the resource"}, "resource_category": {"type": "string", "description": "Category of the resource"}, "resource_component": {"type": "string", "description": "Component of the resource"}, "resource_type": {"type": "string", "description": "Type of the resource"}, "resource_region": {"type": "string", "description": "Location of the resource"}}, "type": "object"}], "x-cs-type-name": "TagPostureResourceBase"}, "TagPostureResourceCoverage": {"properties": {"resource_count": {"type": "integer", "description": "Total number of resources"}, "valid_resource_count": {"type": "integer", "description": "Number of resources with 100% coverage"}, "tag_counts": {"description": "Count of tags for all resources", "$ref": "#/definitions/TagPostureSummaryCount"}}, "type": "object"}, "TagPostureResourceSummary": {"allOf": [{"$ref": "#/definitions/TagPostureResourceBase"}, {"properties": {"supports_remediation": {"type": "boolean", "description": "Whether or not the resource supports remediation"}, "resource_coverage": {"description": "Resource coverage of the posture", "$ref": "#/definitions/TagPostureResourceCoverage"}}, "type": "object"}], "x-cs-type-name": "TagPostureResourceSummary"}, "TagPostureResourceSummaryBatchResponse": {"properties": {"results": {"type": "object", "description": "Map from identifier to response model", "additionalProperties": {"$ref": "#/definitions/TagPostureResourceSummary"}}}, "type": "object"}, "TagPostureSnapshot": {"properties": {"snapshot_id": {"type": "string"}, "account_id": {"type": "string", "description": "Id of the account associated with the snapshot"}, "created_at": {"type": "string", "format": "date-time", "description": "When the snapshot was created"}, "updated_at": {"type": "string", "format": "date-time", "description": "When the snapshot was updated"}, "status": {"type": "string", "description": "Status of the snapshot", "example": "Running", "enum": ["Running", "Failed", "Success"], "x-cs-enum-type": "TagPostureSnapshotStatus"}, "reason": {"type": "string", "description": "Reason for triggering the snapshot", "example": "Manual", "enum": ["Manual", "Automatic"], "x-cs-enum-type": "TagPostureSnapshotReason"}, "progress": {"description": "Progress of the generation", "$ref": "#/definitions/TagPostureSnapshotProgress"}, "baselines": {"type": "array", "description": "List of baselines that are included in this snapshot", "items": {"$ref": "#/definitions/TagBaselineReference"}}}, "type": "object"}, "TagPostureSnapshotBatchResponse": {"properties": {"results": {"type": "object", "description": "Map from identifier to response model", "additionalProperties": {"$ref": "#/definitions/TagPostureSnapshot"}}}, "type": "object"}, "TagPostureSnapshotFilters": {"properties": {"status": {"type": "array", "description": "List of status to filter. (All if missing)", "items": {"type": "string", "description": "Status of the snapshot", "example": "Running", "enum": ["Running", "Failed", "Success"], "x-cs-enum-type": "TagPostureSnapshotStatus"}}}, "type": "object"}, "TagPostureSnapshotListRequest": {"properties": {"list_context": {"description": "Optional list context", "$ref": "#/definitions/ListContext"}, "sort": {"type": "array", "description": "Sort criteria", "items": {"$ref": "#/definitions/TagPostureSnapshotSortCriteria"}}, "filters": {"description": "Filters for the request", "$ref": "#/definitions/TagPostureSnapshotFilters"}}, "type": "object"}, "TagPostureSnapshotProgress": {"properties": {"total_cloud_accounts": {"type": "integer", "description": "Total number of cloud accounts in the snapshot"}, "processed_cloud_accounts": {"type": "integer", "description": "Number of cloud accounts that have been processed already"}}, "type": "object"}, "TagPostureSnapshotSortCriteria": {"required": ["column"], "properties": {"column": {"type": "string", "example": "CreatedAt", "enum": ["CreatedAt", "Status", "Reason"], "x-cs-enum-type": "TagPostureSnapshotSortColumn"}, "ascending": {"type": "boolean"}}, "type": "object"}, "TagPostureSummaryCount": {"properties": {"valid_count": {"type": "integer", "description": "Number of valid"}, "invalid_count": {"type": "integer", "description": "Number of invalid"}, "missing_keys_count": {"type": "integer", "description": "Number of missing"}, "auto_suggested_count": {"type": "integer", "description": "Number of suggestions"}}, "type": "object"}, "TagPostureSummaryListRequest": {"properties": {"list_context": {"description": "Optional list context", "$ref": "#/definitions/ListContext"}, "sort": {"type": "array", "description": "Sort criteria", "items": {"$ref": "#/definitions/TagPostureSummarySortCriteria"}}, "filters": {"description": "Filters for the request", "$ref": "#/definitions/TagPostureContext"}}, "type": "object"}, "TagPostureSummarySortCriteria": {"required": ["column"], "properties": {"column": {"type": "string", "example": "Cloud", "enum": ["Cloud", "CloudAccountName", "CloudResourceId", "InvalidTags", "MissingTags", "ResourceCategory", "ResourceComponent", "ResourceCoverage", "ResourceName", "ResourceRegion", "ResourceType", "TagCoverage"], "x-cs-enum-type": "TagPostureSummarySortColumn"}, "ascending": {"type": "boolean"}}, "type": "object"}, "TagPostureTagCoverage": {"properties": {"tag": {"type": "string", "description": "Tag key"}, "resource_counts": {"description": "Counts of resources for this tag", "$ref": "#/definitions/TagPostureSummaryCount"}}, "type": "object"}, "TagPostureTagDetails": {"properties": {"tag": {"type": "string", "description": "Tag key"}, "value": {"type": "string", "description": "Value of tag"}, "is_valid": {"type": "boolean", "description": "Whether the tag is valid"}, "auto_suggest": {"type": "array", "description": "Possible values for the key", "items": {"type": "string"}}}, "type": "object"}, "TagStatusDataResponseModel": {"required": ["created_at", "status", "tags"], "properties": {"status": {"type": "string", "description": "status of tag remediation"}, "tags": {"type": "object"}, "created_at": {"type": "string", "description": "created at"}}, "type": "object"}, "TaggedAndUntaggedByCloudResponseModel": {"properties": {"cloud_account_id": {"type": "string", "description": "cloud account id"}, "tagged_spend": {"type": "number", "description": "cost spend cloud wise for tagged"}, "tagged_count": {"type": "integer", "description": "tagged resource count"}, "untagged_spend": {"type": "number", "description": "cost spend cloud wise for untagged"}, "untagged_count": {"type": "integer", "description": "untagged resource count"}}, "type": "object"}, "TaggedAndUntaggedByProductCategoryResponseModel": {"properties": {"resource_type": {"type": "string", "description": "resource type name"}, "product_category": {"type": "string", "description": "product category name"}, "tagged_spend": {"type": "number", "description": "tagged cost spend by product category"}, "tagged_count": {"type": "integer", "description": "tagged resource count"}, "untagged_spend": {"type": "number", "description": "untagged cost spend by product category"}, "untagged_count": {"type": "integer", "description": "untagged resource count"}}, "type": "object"}, "TaggedAndUntaggedByRegionResponseModel": {"properties": {"cloud_account_id": {"type": "string", "description": "service account id"}, "region": {"type": "string", "description": "region name"}, "tagged_spend": {"type": "number", "description": "region wise spend on tag"}, "tagged_count": {"type": "integer", "description": "tagged resource count"}, "untagged_spend": {"type": "number", "description": "region wise spend on untagged"}, "untagged_count": {"type": "integer", "description": "untagged resource count"}}, "type": "object"}, "TaggedAndUntaggedCostTrendRequestModel": {"allOf": [{"$ref": "#/definitions/CommonCostRequest"}, {"required": ["granularity"], "properties": {"granularity": {"type": "string", "description": "Granularity to aggregate data", "example": "day", "enum": ["day", "month", "year"], "x-cs-enum-type": "TrendGranularity"}}, "type": "object"}]}, "TaggedAndUntaggedResourceByCloudRequestModel": {"allOf": [{"$ref": "#/definitions/CommonCostRequest"}, {"properties": {}, "type": "object"}]}, "TaggedAndUntaggedSpentByCloudResponse": {"properties": {"cloud": {"type": "array", "description": "cloud wise spend details", "items": {"$ref": "#/definitions/TaggedAndUntaggedByCloudResponseModel"}}, "product_category": {"type": "array", "description": "tag and untag spend on product category wise", "items": {"$ref": "#/definitions/TaggedAndUntaggedByProductCategoryResponseModel"}}, "region": {"type": "array", "description": "region wise spend details", "items": {"$ref": "#/definitions/TaggedAndUntaggedByRegionResponseModel"}}}, "type": "object"}, "TaggedAndUntaggedTrendByCloudResponse": {"properties": {"cloud_account_id": {"type": "string", "description": "product category type"}, "date": {"type": "string", "format": "date-time", "description": "Month in which the cost is spent"}, "tagged_spend": {"type": "number", "description": "Cost for all tagged resources in category"}, "tagged_count": {"type": "integer", "description": "tagged resource count"}, "untagged_spend": {"type": "number", "description": "Cost for all untagged resources in category"}, "untagged_count": {"type": "integer", "description": "untagged resource count"}}, "type": "object"}, "TaggedUntaggedResourcesByProductCategoryRequest": {"allOf": [{"$ref": "#/definitions/CommonCostRequest"}, {"properties": {}, "type": "object"}]}, "TaggedUntaggedResourcesByProductCategoryResponse": {"properties": {"untagged_resources": {"type": "number", "description": "Cost for all untagged resources in category"}, "tagged_resources": {"type": "number", "description": "Cost for all tagged resources in category"}, "product_category": {"type": "string", "description": "product category type"}}, "type": "object"}, "TemplateCreateResponse": {"required": ["template_id"], "properties": {"template_id": {"type": "string", "description": "Unique Id of the template"}}, "type": "object"}, "TemplateDataModelList": {"required": ["classification", "description", "dsl", "scope", "services", "template_id", "template_name", "type"], "properties": {"template_id": {"type": "string", "description": "Unique Id of the template"}, "services": {"type": "array", "description": "Service(s) associated with the template, for example, AWS, AzureRM, Openstack., etc", "items": {"type": "string"}}, "template_name": {"type": "string", "description": "Name of the template"}, "description": {"type": "string", "description": "Description about template"}, "type": {"type": "array", "description": "Type of the template like, Cloud, Monitoring, Orchestration., etc", "items": {"type": "string"}}, "dsl": {"type": "string", "description": "dsl of the template"}, "classification": {"type": "array", "description": "Classification of the Template", "items": {"type": "string"}}, "scope": {"type": "string", "description": "scope of template (Account,Tenant,Private)"}}, "type": "object"}, "TemplateExecuteReqModel": {"required": ["args", "cloud_accounts"], "properties": {"args": {"type": "object", "description": "Arguments to the template"}, "cloud_accounts": {"type": "array", "description": "Cloud account details to execute the template", "items": {"$ref": "#/definitions/CloudAccount"}}}, "type": "object"}, "TemplateExecuteResponse": {"required": ["data"], "properties": {"data": {"type": "object", "description": "Job identifier of the executed template"}}, "type": "object"}, "TemplateGetParamsReqModel": {"required": ["cloud_accounts"], "properties": {"cloud_accounts": {"type": "array", "description": "cloud account details to execute the template", "items": {"$ref": "#/definitions/CloudAccount"}}}, "type": "object"}, "TemplateGetParamsResponse": {"required": ["args", "cloud_accounts"], "properties": {"args": {"type": "object", "description": "Arguments to the template"}, "cloud_accounts": {"type": "array", "description": "Cloud account details to execute the template", "items": {"$ref": "#/definitions/CloudAccountDetailsResponse"}}}, "type": "object"}, "TemplateJobListResponse": {"required": ["jobs"], "properties": {"jobs": {"$ref": "#/definitions/TemplateJobsList"}}, "type": "object"}, "TemplateJobUpdateResponse": {"required": ["completed_at", "execution_type", "started_at", "status", "status_reason"], "properties": {"template_job_id": {"type": "string", "description": "Unique ID of the Template Job"}, "template_job_name": {"type": "string", "description": "Name of the Template Job"}, "status": {"type": "string", "description": "Overall status of the template execution"}, "status_reason": {"type": "string", "description": "Error message if failed"}, "started_at": {"type": "string", "description": "Template Job start time in UTC"}, "completed_at": {"type": "string", "description": "Template Job completion time in UTC"}, "execution_type": {"type": "string", "description": "Template Job execution type (on_demand/scheduled)"}}, "type": "object"}, "TemplateJobsList": {"required": ["job_actions", "name", "status", "status_reason", "template_job_id", "type", "username"], "properties": {"template_job_id": {"type": "string", "description": "Unique ID of the template job."}, "name": {"type": "string", "description": "Name of the template job."}, "status": {"type": "string", "description": "Overall status of the template execution"}, "type": {"type": "string", "description": "Type of the executed template [heat/mistral]"}, "status_reason": {"type": "string", "description": "Error message if failed"}, "username": {"type": "string", "description": "User who initiated the template execution"}, "job_actions": {"type": "array", "description": "list of actions supported for this job based on its type.", "items": {"type": "string"}}}, "type": "object"}, "TemplateListResponse": {"required": ["templates", "total_pages", "total_templates"], "properties": {"total_templates": {"type": "string", "description": "Total number of templates available"}, "total_pages": {"type": "string", "description": "Total number of pages"}, "templates": {"description": "Template Metadata Info.", "$ref": "#/definitions/TemplateDataModelList"}}, "type": "object"}, "TemplateRemoveResModel": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Delete Template Response message."}}, "type": "object"}, "TemplateUpdateResponse": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Response Message on template update"}}, "type": "object"}, "TemplateValidateReqModel": {"required": ["cloud_accounts"], "properties": {"cloud_accounts": {"type": "array", "description": "cloud account details to execute the template", "items": {"$ref": "#/definitions/CloudAccount"}}}, "type": "object"}, "TemplateValidateResponse": {"required": ["validation_status"], "properties": {"validation_status": {"type": "string", "description": "Job identifier of the executed template"}}, "type": "object"}, "TemplateViewResponse": {"required": ["classification", "content", "content_files", "content_type", "content_url", "created_at", "created_by", "description", "dsl", "resource_type", "resources", "scope", "services", "template_id", "template_name", "type", "updated_at", "updated_by"], "properties": {"template_id": {"type": "string", "description": "Unique Id of the template"}, "services": {"type": "array", "description": "Service(s) associated with the template, for example, AWS, AzureRM, Openstack., etc", "items": {"type": "string"}}, "template_name": {"type": "string", "description": "Name of the template"}, "content": {"type": "string", "description": "Raw content of the template which is usually in YAML or JSON format"}, "content_type": {"type": "string", "description": "Template content source (git, file)"}, "content_url": {"type": "string", "description": "Git project URL when the content type is git required only in case of content type git"}, "content_files": {"type": "string", "description": "Details about content like its data,filename"}, "description": {"type": "string", "description": "Usage of template"}, "resources": {"type": "string"}, "resource_type": {"type": "string"}, "status": {"type": "string", "description": "Status of the template[active/inactive]. Only active templates can be executed"}, "type": {"type": "array", "description": "Type of the template like Cloud, Monitoring, Orchestration., etc", "items": {"type": "string"}}, "dsl": {"type": "string", "description": "DSL of the template"}, "classification": {"type": "array", "description": "Classification of the template", "items": {"type": "string"}}, "scope": {"type": "string", "description": "Scope of the template [Account,Tenant,Private]"}, "created_by": {"type": "string", "description": "Name of the user who created the template."}, "created_at": {"type": "string", "description": "Template creation time"}, "updated_by": {"type": "string", "description": "Name of the user who updated the templated. "}, "updated_at": {"type": "string", "description": "Template updation time"}}, "type": "object"}, "TenantCreateResponse": {"required": ["tenant_id"], "properties": {"tenant_id": {"type": "string", "description": "Id of the newly created tenant. This will be used for performing tenant level operations such as createPolicy, createScript, onboardCloudAccount and so on."}}, "type": "object"}, "TenantDetails": {"required": ["account_id", "created_at", "description", "name", "status", "tenant_id"], "properties": {"tenant_id": {"type": "string", "description": "Id of the tenant. This will be used for performing tenant level operations such as createPolicy, createScript, onboardCloudAccount and so on."}, "name": {"type": "string", "description": "Unique name of the tenant provided as input while creating."}, "description": {"type": "string", "description": "Description of the tenant."}, "account_id": {"type": "string", "description": "Id of the CoreStack account under which this tenant resides."}, "status": {"type": "string", "description": "Status of the tenant can be active or suspended. When suspended no operations can be performed within that tenant."}, "created_at": {"type": "string", "description": "Created DateTime in UTC of the tenant."}}, "type": "object"}, "TenantRemovalResponse": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Response message."}}, "type": "object"}, "TenantUpdateResponse": {"required": ["tenant_id"], "properties": {"tenant_id": {"type": "string", "description": "Id of the updated tenant. This Id will be used for performing tenant level operations such as createPolicy, createScript, onboardCloudAccount and so on."}}, "type": "object"}, "TenantWiseUsageForCurrentAndLast3Months": {"required": ["currency", "total_cost"], "properties": {"tenant_name": {"type": "string", "description": "tenant name"}, "potential_cost_escalation": {"type": "object", "description": "cost escalation percentage w.r.t budget"}, "total_cost": {"type": "number", "description": "Total cost for the usage"}, "projected_cost": {"type": "number", "description": "forecasted cost"}, "budget": {"type": "object", "description": "set budget for the account"}, "projected_cost_saving": {"type": "number", "description": "projected cost that can be saved"}, "currency": {"type": "string", "description": "currency for the cost"}, "AWS_cost": {"type": "object", "description": "Aws cost"}, "Azure_cost": {"type": "object", "description": "Azure cost"}, "tenant_id": {"type": "string", "description": "tenant id"}, "GCP_cost": {"type": "object", "description": "GCP cost"}, "OCI_cost": {"type": "object", "description": "OCI cost"}}, "type": "object"}, "TextWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/WidgetConfiguration"}, {"properties": {"text": {"type": "string"}, "color": {"type": "string"}, "alignment": {"type": "string", "example": "Left", "enum": ["Left", "Center", "Right"], "x-cs-enum-type": "HorizontalAlignment"}, "preventWrapping": {"type": "boolean"}}, "type": "object"}], "x-cs-type-name": "TextWidgetConfiguration"}, "ThreatsByCloudAccountWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "ThreatsByCloudAccountWidgetConfiguration"}, "ThreatsByRegionWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "ThreatsByRegionWidgetConfiguration"}, "ThreatsConcentrationByProviderWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "ThreatsConcentrationByProviderWidgetConfiguration"}, "ThreatsTrendWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "ThreatsTrendWidgetConfiguration"}, "ThresholdActionConfigurationModel": {"properties": {"action_configuration": {"type": "array", "description": "action configuration", "items": {"type": "string"}}, "action_uri": {"type": "array", "description": "action uri", "items": {"type": "string"}}}, "type": "object"}, "ThresholdAlertDetailsModel": {"required": ["threshold_name", "threshold_uri"], "properties": {"threshold_name": {"type": "string", "description": "threshold name"}, "threshold_uri": {"type": "string", "description": "threshold uri"}}, "type": "object"}, "ThresholdAlertListModel": {"required": ["alert_notification_details", "budget_uri", "configuration_type", "created_at", "created_by", "id", "name", "tenant_id", "threshold_amount", "threshold_percentage", "threshold_uri", "updated_at", "updated_by"], "properties": {"id": {"type": "string", "description": "threshold id"}, "tenant_id": {"type": "string", "description": "tenant id"}, "created_by": {"type": "string", "description": "Name of the user who created the threshold alert."}, "created_at": {"type": "string", "description": "Created time to create threshold alert"}, "updated_by": {"type": "string", "description": "Name of the user who updated the the threshold alert."}, "updated_at": {"type": "string", "description": "Updated time to create threshold alert"}, "threshold_uri": {"type": "string", "description": "threshold uri"}, "threshold_percentage": {"type": "number", "description": "threshold percentage"}, "threshold_amount": {"type": "number", "description": "threshold amount"}, "configuration_type": {"type": "string", "description": "Configuration type"}, "alert_action_details": {"type": "array", "description": "alert action details", "items": {"type": "string"}}, "budget_uri": {"type": "string", "description": "threshold uri"}, "name": {"type": "string", "description": "Threshold Action name"}, "alert_notification_details": {"type": "array", "description": "Alert Notification Details", "items": {"$ref": "#/definitions/AlertNotificationDetailsModel"}}}, "type": "object"}, "ThresholdAlertListResModel": {"required": ["threshold_details"], "properties": {"threshold_details": {"type": "array", "description": "Threshold Details", "items": {"$ref": "#/definitions/ThresholdAlertListModel"}}}, "type": "object"}, "ThresholdAlertUpdateReqModel": {"required": ["budget_uri", "threshold_details"], "properties": {"budget_uri": {"type": "string", "description": "budget uri"}, "threshold_details": {"type": "array", "description": "Threshold Details", "items": {"$ref": "#/definitions/ThresholdDetailsModel"}}}, "type": "object"}, "ThresholdAlertUpdateResModel": {"required": ["threshold_details"], "properties": {"threshold_details": {"type": "array", "items": {"$ref": "#/definitions/ThresholdAlertDetailsModel"}}}, "type": "object"}, "ThresholdAlertViewListReqModel": {"required": ["budget_uri"], "properties": {"budget_uri": {"type": "string", "description": "budget uri"}}, "type": "object"}, "ThresholdDetailsModel": {"required": ["alert_action_details", "alert_notification_details", "configuration_type", "created_at", "created_by", "id", "tenant_id", "threshold_name", "threshold_percentage", "updated_at", "updated_by"], "properties": {"threshold_percentage": {"type": "number", "description": "threshold percentage"}, "threshold_name": {"type": "string", "description": "threshold name"}, "alert_notification_details": {"description": "alert notification details", "$ref": "#/definitions/ThresholdNotificationConfigurationModel"}, "configuration_type": {"type": "string", "description": "Configuration type"}, "alert_action_details": {"description": "alert action details", "$ref": "#/definitions/ThresholdActionConfigurationModel"}, "tenant_id": {"type": "string", "description": "tenant id"}, "created_by": {"type": "string", "description": "Name of the user who created the threshold alert."}, "created_at": {"type": "string", "description": "Created time to create threshold alert"}, "updated_by": {"type": "string", "description": "Name of the user who updated the the threshold alert."}, "updated_at": {"type": "string", "description": "Updated time to create threshold alert"}, "id": {"type": "string", "description": "Threshold alert id which can be retrieved from View Budget Threshold Alerts API"}}, "type": "object"}, "ThresholdNotificationConfigurationModel": {"properties": {"notification_configuration": {"type": "array", "description": "notification configuration", "items": {"$ref": "#/definitions/NotificationConfigurationModel"}}, "notification_uri": {"type": "array", "description": "notification uri", "items": {"type": "string"}}}, "type": "object"}, "TimeDetails": {"required": ["hour", "minute", "seconds"], "properties": {"seconds": {"type": "string", "description": "The Template/Script/Policy is scheduled at which second. Allowed values: 00-60"}, "minute": {"type": "string", "description": "The Template/Script/Policy is scheduled at which minute. Allowed values: 00-60"}, "hour": {"type": "string", "description": "The Template/Script/Policy is scheduled at which hour. Allowed values: 01-23"}}, "type": "object"}, "TimeDuration": {"properties": {"amount": {"type": "integer"}, "unit": {"type": "string", "example": "NANOS", "enum": ["NANOS", "MICROS", "MILLIS", "SECONDS", "MINUTES", "HOURS", "HALF_DAYS", "DAYS", "WEEKS", "MONTHS", "YEARS", "DECADES", "CENTURIES", "MILLENNIA", "ERAS", "FOREVER"], "x-cs-enum-type": "ChronoUnit"}}, "type": "object"}, "TimezoneModel": {"required": ["id", "raw_offset"], "properties": {"id": {"type": "string", "description": "Id of the Timezone such as Asia/Kolkata, Asia/Dubai and so on."}, "raw_offset": {"type": "string", "description": "Raw offset of the timezone. It means the amount of time in milliseconds to add to UTC to get standard time in the required time zone."}}, "type": "object"}, "TokenTenantModel": {"properties": {"id": {"type": "string", "description": "Id of the tenant. This will be used for performing tenant level operations such as createPolicy, createScript, onboardCloudAccount and so on."}, "name": {"type": "string", "description": "Unique name of the tenant provided as input when creating."}, "master_tenant": {"type": "boolean", "description": "If user created under particular tenant it will be set to True or else False"}, "roles": {"type": "object", "description": "Roles"}}, "type": "object"}, "TopBudgetByTenantRequest": {"allOf": [{"$ref": "#/definitions/CommonCostRequest"}, {"properties": {}, "type": "object"}]}, "TopBudgetByTenantResponse": {"properties": {"tenant_id": {"type": "string"}, "budget_details": {"type": "array", "items": {"$ref": "#/definitions/Budget"}}}, "type": "object"}, "TopBudgetByTenantWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "TopBudgetByTenantWidgetConfiguration"}, "TopCostOptimizationWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"required": ["optimizationSelection"], "properties": {"optimizationSelection": {"type": "string", "description": "Type of Optimization", "example": "Region", "enum": ["Region", "ProductCategory"], "x-cs-enum-type": "OptimizationSelection"}}, "type": "object"}], "x-cs-type-name": "TopCostOptimizationWidgetConfiguration"}, "TopRecommendations": {"required": ["message", "status", "top_recommendations"], "properties": {"status": {"type": "string", "description": "Response status on resource wise top recommendations"}, "message": {"type": "string", "description": "top recommendations list"}, "top_recommendations": {"type": "object", "description": "Top Recommendation"}}, "type": "object"}, "UnitRateCrawlerConfiguration": {"required": ["__type"], "properties": {}, "discriminator": "__type", "type": "object", "x-cs-subtypes": [{"subtype_model": "UnitRateCrawlerConfigurationForAzureEA", "subtype_name": "UnitRateCrawlerConfigurationForAzureEA"}]}, "UnitRateCrawlerConfigurationForAzureEA": {"allOf": [{"$ref": "#/definitions/UnitRateCrawlerConfiguration"}, {"properties": {"parent_account_id": {"type": "string"}, "enrollment_id": {"type": "string"}, "subscription_id": {"type": "string"}, "account_id": {"type": "string"}, "currency_code": {"type": "string", "description": "currency of the cost. Example 'currency':'USD'", "example": "INR", "enum": ["INR", "GBP", "DKK", "CAD", "EUR", "USD", "AUD", "SEK", "BRL", "JPY", "CNY", "KRW", "TWD"], "x-cs-enum-type": "Currency"}}, "type": "object"}], "x-cs-type-name": "UnitRateCrawlerConfigurationForAzureEA"}, "UpdateActivityRequestModel": {"required": ["activity_id"], "properties": {"activity_id": {"type": "array", "description": "Update Activity Request Body: Example: \"activity_id\":[\"**********\"]", "items": {"type": "string"}}}, "type": "object"}, "UpdateActivityResponseModel": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Update Activity Response"}}, "type": "object"}, "UpdateBlueprintResponse": {"required": ["blueprint_id", "message", "status"], "properties": {"status": {"type": "string", "description": "Status of the update call for the blueprint"}, "message": {"type": "string", "description": "Message of the update call for the blueprint"}, "blueprint_id": {"type": "string", "description": "Blueprint ID"}}, "type": "object"}, "UpdateMarkupRequest": {"allOf": [{"$ref": "#/definitions/MarkupDetails"}, {"properties": {}, "type": "object"}]}, "UpdateMarkupResponse": {"properties": {"name": {"type": "string", "description": "Updated Rule name"}}, "type": "object"}, "UpdateNotificationSettingRequest": {"required": ["exclude_me"], "properties": {"exclude_me": {"type": "boolean", "description": "Provide true/false whether to exclude the user email to get notification", "default": false}, "emails": {"type": "array", "description": "Provide the emails to get notifications", "items": {"type": "string"}}, "webhooks": {"type": "array", "description": "Provide the webhooks to get notifications", "items": {"type": "string"}}, "microsoft_teams_webhooks": {"type": "array", "description": "Provide the microsoft teams webhooks to get notifications", "items": {"type": "string"}}}, "type": "object"}, "UpdateNotificationSettingResponse": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Message of update notification setting"}}, "type": "object"}, "UpdatePolicyRequest": {"required": ["message"], "properties": {"message": {"type": "string", "description": "Response Message on update"}}, "type": "object"}, "UpdatePolicyRequestModel": {"required": ["category", "classification", "cloud", "content", "name", "scope", "sub_classification"], "properties": {"name": {"type": "string", "description": "policy name which is unique and does not allow space or special character"}, "display_name": {"type": "string", "description": "Display name of policy which allow space this is to mostly show on the ui"}, "description": {"type": "string", "description": "A brief explanation of the policy."}, "type": {"type": "array", "description": "Indicates the type of policy", "items": {"type": "string"}}, "category": {"type": "string", "description": "The category will be either service or resource"}, "content": {"type": "string", "description": "The policy content"}, "is_system_policy": {"type": "boolean", "description": "Flag to identify system policies"}, "metadata": {"description": "Metadata about policy", "$ref": "#/definitions/PolicyMetadata"}, "engine_type": {"type": "string", "description": "Engine type of the policy", "example": "corestack_policy", "enum": ["corestack_policy", "aws_organization_policy", "azure_policy", "chef_inspec", "congress", "aws_config", "gcp_organization_policy", "gcp_policy", "kubernetes_policy", "oracle_cloud_guard"], "x-cs-enum-type": "PolicyEngineType"}, "cloud": {"type": "array", "description": "Displays the cloud associated with the policy, for example, AWS, Azure etc", "items": {"type": "string"}}, "classification": {"type": "string", "description": "Policies are classified based on the basis of the activity they perform, for example provisioning, Account Management, Utilization, etc. This value is displayed in this field"}, "sub_classification": {"type": "string", "description": "Sub classification for policy"}, "scope": {"type": "string", "description": "The scope of the policy Account scope - All users under that account will have access to view and execute Only Account admins can update/delete the policies, Tenant Scope - Users with access to the specific tenant will haveaccess to policies who can describe or execute policies. Tenant admins can  only update/delete. Private Scope - User who created will only have access", "example": "tenant", "enum": ["tenant", "private", "account"], "x-cs-enum-type": "AccountScope"}, "content_type": {"type": "string", "description": "Policy content source (git, file)", "example": "git", "enum": ["git", "file"], "x-cs-enum-type": "ContentType"}, "content_password_or_key": {"type": "string", "description": "Password or private key to access of Git repo if repo is authenticated required if the content type is git"}, "content_username": {"type": "string", "description": "Username of Git repo if repo is authenticated required if the content type is git"}, "content_url": {"type": "string", "description": "Git project URL when the content type is git required if the content type is git"}, "content_path": {"type": "string", "description": "Root path of the policy in git repo required if the content type is git"}, "severity": {"type": "string", "description": "Severity of policy", "example": "low", "enum": ["low", "medium", "high"], "x-cs-enum-type": "PolicySeverity"}}, "type": "object"}, "UpdateRoleAssignment": {"properties": {"tenant_id": {"type": "string", "description": "ID of the tenant within the CoreStack account"}, "role_names": {"type": "array", "description": "Name of the Roles to be assigned to the user under a tenant", "items": {"type": "string"}}}, "type": "object"}, "UpdateScheduleRequest": {"required": ["attributes", "name", "recurrence", "resource", "schedule"], "properties": {"name": {"type": "string", "description": "Schedule Name to be create"}, "description": {"type": "string", "description": "Description of the schedule"}, "recurrence": {"type": "string", "description": "Recurrence of the schedule", "example": "Once", "enum": ["Once", "Minutes", "Hours", "Daily", "Weekly", "Monthly", "Annually"], "x-cs-enum-type": "ScheduleRecurrence"}, "schedule": {"description": "Schedule date and time details", "$ref": "#/definitions/DateAndTimeDetails"}, "resource": {"type": "array", "description": "Template/Script/Policy Id.can be retrieved using the List Policy Schedules", "items": {"type": "string"}}, "attributes": {"description": "Attribute Details", "$ref": "#/definitions/AttributeDetails"}, "args": {"type": "object", "description": "Input Parameters for the Template/Script/Policy"}}, "type": "object"}, "UpdateScheduleRequestScript": {"required": ["attributes", "name", "recurrence", "resource", "schedule"], "properties": {"name": {"type": "string", "description": "Schedule Name to be create"}, "description": {"type": "string", "description": "Description of the schedule"}, "recurrence": {"type": "string", "description": "Recurrence of the schedule", "example": "Once", "enum": ["Once", "Minutes", "Hours", "Daily", "Weekly", "Monthly", "Annually"], "x-cs-enum-type": "ScheduleRecurrence"}, "schedule": {"description": "Schedule date and time details", "$ref": "#/definitions/DateAndTimeDetails"}, "resource": {"type": "array", "description": "Template/Script/Policy Id.can be retrieved using the List Policy Schedules", "items": {"type": "string"}}, "attributes": {"description": "Attribute Details", "$ref": "#/definitions/AttributeDetails"}, "args": {"description": "Input Parameters for the Template/Script/Policy", "$ref": "#/definitions/ArgsDetails"}}, "type": "object"}, "UpdateScheduleResponse": {"required": ["id", "message", "status"], "properties": {"status": {"type": "string", "description": "Status of the Update Schedule Call"}, "message": {"type": "string", "description": "Message of the Update Schedule Call"}, "id": {"type": "string", "description": "Schedule ID"}}, "type": "object"}, "UpdateTenantRequest": {"properties": {"description": {"type": "string", "description": "Description of the the tenant."}, "metadata": {"type": "object", "description": "metadata is freeform JSON. It allows to store custom keys and values. It will be useful for storing information about an external applications that will refer to CoreStack tenant."}, "account_id": {"type": "string", "description": "Id of the CoreStack account under which the tenant to be updated."}, "status": {"type": "string", "description": "Status of the tenant can be active or suspended. When suspended no operations can be performed within that tenant.", "example": "active", "enum": ["active", "suspended"], "x-cs-enum-type": "TenantStatus"}}, "type": "object"}, "UsageDetails": {"required": ["avg_percentage", "reserved_hours", "unused_hours", "used_hours"], "properties": {"reserved_hours": {"type": "integer", "description": "How many hours are reserved"}, "avg_percentage": {"type": "integer", "description": "Average Percentage used"}, "used_hours": {"type": "integer", "description": "How many hours are used"}, "unused_hours": {"type": "integer", "description": "How many hours are unused"}}, "type": "object"}, "User": {"properties": {"sysId": {"type": "string"}, "createdOn": {"type": "string", "format": "date-time"}, "updatedOn": {"type": "string", "format": "date-time"}, "firstName": {"type": "string"}, "lastName": {"type": "string"}, "emailAddress": {"type": "string"}, "phoneNumber": {"type": "string"}, "roles": {"type": "array", "items": {"$ref": "#/definitions/RecordIdentity"}}, "groups": {"type": "array", "items": {"$ref": "#/definitions/RecordIdentity"}}, "origin": {"type": "string"}}, "type": "object"}, "UserCreateRequest": {"required": ["account_id", "email", "role_assignment", "timezone_id", "username"], "properties": {"username": {"type": "string", "description": "The unique username for the user to be created. This value is expected to be unique across all accounts. Hence it is recommended that you use the email address as the value here. Validations:- Min length - 5, Alphanumeric"}, "email": {"type": "string", "description": "Email ID of the user. This wil be unique across all the CoreStack accounts"}, "timezone_id": {"type": "string", "description": "ID of the timezone to be set for th user. For a valid list of timezone values to use, please refer https://en.wikipedia.org/wiki/List_of_tz_database_time_zones"}, "account_id": {"type": "string", "description": "ID of the Account in CoreStack. It will be available in the authToken API response"}, "first_name": {"type": "string", "description": "First Name of the user. It can be only alphanumeric"}, "last_name": {"type": "string", "description": "Last Name of the user. It can be only alphanumeric"}, "role_assignment": {"type": "array", "description": "List of roles assignments for the user. The same user can be assigned different roles in different tenants", "items": {"$ref": "#/definitions/AddRoleAssignment"}}, "is_accesskey_required": {"type": "boolean", "description": "Is Access Key to be generated for this user", "default": false}}, "type": "object"}, "UserCreateResponse": {"required": ["user_id"], "properties": {"user_id": {"type": "string", "description": "ID of the newly created User"}}, "type": "object"}, "UserDelegation": {"allOf": [{"$ref": "#/definitions/UserDelegationRequest"}, {"properties": {"source_master_account_id": {"type": "string", "description": "User delegation source account master id"}, "created_at": {"type": "string", "format": "date-time", "description": "Date and Time of Creation"}, "created_by": {"type": "string", "description": "User that created delegation"}, "updated_at": {"type": "string", "format": "date-time", "description": "Date and Time of Last Update"}, "updated_by": {"type": "string", "description": "User that last updated delegation"}}, "type": "object"}]}, "UserDelegationBatchResponse": {"properties": {"results": {"type": "object", "description": "Map from identifier to response model", "additionalProperties": {"$ref": "#/definitions/UserDelegation"}}}, "type": "object"}, "UserDelegationDeleteResponse": {"properties": {"message": {"type": "string", "description": "Response message."}}, "type": "object"}, "UserDelegationListRequest": {"properties": {"list_context": {"description": "Optional list context", "$ref": "#/definitions/ListContext"}, "sort": {"type": "array", "description": "Sort criteria", "items": {"$ref": "#/definitions/UserDelegationSortCriteria"}}}, "type": "object"}, "UserDelegationRequest": {"properties": {"source_user_groups": {"type": "array", "items": {"type": "string", "description": "User delegation source user groups"}}, "source_roles": {"type": "array", "items": {"type": "string", "description": "User delegation source roles"}}, "source_users": {"type": "array", "items": {"type": "string", "description": "User delegation source users"}}, "target_master_account_id": {"type": "string", "description": "User delegation target account master id"}, "target_roles": {"type": "array", "items": {"type": "string", "description": "User delegation target roles"}}, "target_user_groups": {"type": "array", "items": {"type": "string", "description": "User delegation target user groups"}}}, "type": "object"}, "UserDelegationResponse": {"properties": {"id": {"type": "string", "description": "User delegation id"}}, "type": "object"}, "UserDelegationRole": {"properties": {"id": {"type": "string", "description": "Role id"}, "name": {"type": "string", "description": "Role name"}}, "type": "object"}, "UserDelegationSortCriteria": {"required": ["column"], "properties": {"column": {"type": "string", "example": "CreatedAt", "enum": ["CreatedAt"], "x-cs-enum-type": "UserDelegationSortColumn"}, "ascending": {"type": "boolean"}}, "type": "object"}, "UserDelegationSummary": {"properties": {"master_account_id": {"type": "string", "description": "User delegation master account id"}, "master_account_name": {"type": "string", "description": "User delegation master account name"}, "hierarchy_level": {"type": "string", "description": "User delegation hierarchy level"}, "tenants": {"type": "array", "description": "Tenants in the delegation", "items": {"$ref": "#/definitions/UserDelegationTenant"}}, "user_groups": {"type": "array", "description": "UserGroups in the delegation", "items": {"$ref": "#/definitions/UserDelegationUserGroup"}}}, "type": "object"}, "UserDelegationTenant": {"properties": {"tenant_id": {"type": "string", "description": "Tenant id"}, "tenant_name": {"type": "string", "description": "Tenant name"}, "roles": {"type": "array", "description": "Delegation roles", "items": {"$ref": "#/definitions/UserDelegationRole"}}}, "type": "object"}, "UserDelegationUserGroup": {"properties": {"id": {"type": "string", "description": "User group id"}, "name": {"type": "string", "description": "User group name"}}, "type": "object"}, "UserDeleteResponse": {"properties": {"message": {"type": "string", "description": "Response message."}}, "type": "object"}, "UserDescribeResponse": {"required": ["email", "first_name", "last_name", "role_assignment", "status", "timezone_id", "user_id", "username"], "properties": {"user_id": {"type": "string", "description": "ID of the User. This is an auto generated and unique in the CoreStack system"}, "username": {"type": "string", "description": "Username is unique in the CoreStack system. User can use this to login to CoreStack portal in addition to email"}, "status": {"type": "string", "description": "Current Status of the user - active or inactive. Inactive user cannot login or use AccessKeys."}, "email": {"type": "string", "description": "Email of the User. This is unique in the CoreStack system."}, "first_name": {"type": "string", "description": "First Name of the user. It can be only alphanumeric."}, "last_name": {"type": "string", "description": "Last Name of the user. It can be only alphanumeric."}, "role_assignment": {"type": "array", "description": "List of roles assignments for the user. The same user can be assigned different roles in different tenants", "items": {"$ref": "#/definitions/RoleAssignment"}}, "timezone_id": {"type": "string", "description": "ID of the Timezone such as Asia/Kolkata, Asia/Dubai and so on"}, "created_by": {"type": "string", "description": "Name of the user/admin who created this user"}, "created_at": {"type": "string", "description": "DateTime when the user was created"}, "updated_by": {"type": "string", "description": "Name of the user/admin last updated this user"}, "updated_at": {"type": "string", "description": "DateTime when the user was last updated"}, "sso_userid": {"type": "string", "description": "User's Single Sign-on Id, if CoreStack is deployed using SingleSignOn (SSO) model"}, "account_id": {"type": "string", "description": "ID of the Account in CoreStack. It will be available in the authToken API response"}, "is_accesskey_available": {"type": "boolean", "description": "Is Access Key available for this user."}, "source_user_id": {"type": "string", "description": "source user id"}}, "type": "object"}, "UserDetails": {"required": ["email", "role_assignment", "status", "timezone_id", "user_id", "username"], "properties": {"user_id": {"type": "string", "description": "ID of the User. This is an auto generated and unique in the CoreStack system"}, "username": {"type": "string", "description": "Username is unique in the CoreStack system. User can use this to login to CoreStack portal in addition to email"}, "status": {"type": "string", "description": "Current Status of the user - active or inactive. Inactive user cannot login or use AccessKeys"}, "email": {"type": "string", "description": "Email of the User. This is unique in the CoreStack system"}, "role_assignment": {"type": "array", "description": "List of roles assignments or the user. The same user can be assigned different roles in different tenants", "items": {"$ref": "#/definitions/RoleAssignment"}}, "timezone_id": {"type": "string", "description": "Id of the Timezone such as Asia/Kolkata, Asia/Dubai and so on"}, "source_user_id": {"type": "string", "description": "source user id"}}, "type": "object"}, "UserGroupCreateRequest": {"required": ["group_name", "roles", "scope", "tenant_ids", "users"], "properties": {"group_name": {"type": "string", "description": "The unique group name for the user group to be created."}, "tenant_ids": {"type": "array", "description": "List of tenant IDs within the corestack account", "items": {"type": "string"}}, "roles": {"type": "array", "description": "List of Role IDs under tenant", "items": {"type": "string"}}, "users": {"type": "array", "description": "List of User IDs", "items": {"type": "string"}}, "scope": {"type": "string", "description": "Scope of UserGroup"}}, "type": "object"}, "UserGroupCreateResponse": {"required": ["group_id"], "properties": {"group_id": {"type": "string", "description": "ID of UserGroup created. This ID auto generated and unique in CoreStack system"}}, "type": "object"}, "UserGroupData": {"required": ["group_id", "group_name", "roles", "tenant_id", "tenant_name", "total_roles", "total_users", "users"], "properties": {"group_id": {"type": "string", "description": "ID of the UserGroup. This is auto generated and unique in CoreStack system"}, "group_name": {"type": "string", "description": "UserGroup name in the CoreStack system."}, "tenant_id": {"type": "string", "description": "ID of tenant within the CoreStack account"}, "tenant_name": {"type": "string", "description": "Name of tenant within the CoreStack account"}, "created_by": {"type": "string", "description": "Name of the user who created this user group"}, "created_at": {"type": "string", "description": "DateTime(UTC) when the user group was created."}, "updated_by": {"type": "string", "description": "Name of the user last updated this user group"}, "updated_at": {"type": "string", "description": "DateTime(UTC) when the user group was last updated. "}, "roles": {"type": "array", "description": "List of role details assigned to UserGroup", "items": {"description": "Role details assigned to UserGroup", "$ref": "#/definitions/ListRole"}}, "users": {"type": "array", "description": "List of users details assigned to UserGroup", "items": {"description": "User details assigned to UserGroup", "$ref": "#/definitions/ListUser"}}, "total_roles": {"type": "integer", "description": "Total number of roles assigned to UserGroup"}, "total_users": {"type": "integer", "description": "Total number of users assigned to UserGroup"}}, "type": "object"}, "UserGroupListResponse": {"required": ["total_count"], "properties": {"total_count": {"type": "integer", "description": "Total Number of Usergroups"}, "user_groups": {"description": "List of usergroups data", "$ref": "#/definitions/UserGroupData"}}, "type": "object"}, "UserGroupSummary": {"properties": {"name": {"type": "string", "description": "Name of the User"}, "scope": {"type": "string", "description": "Scope of UserGroup"}}, "type": "object"}, "UserGroupSummaryBatchResponse": {"properties": {"results": {"type": "object", "description": "Map from identifier to response model", "additionalProperties": {"$ref": "#/definitions/UserGroupSummary"}}}, "type": "object"}, "UserInviteRequest": {"required": ["email", "master_account_id", "tenants"], "properties": {"email": {"type": "string", "description": "Email ID of the user. This wil be unique across all the CoreStack accounts"}, "tenants": {"type": "array", "description": "List of roles assignments for the user. The same user can be assigned different roles in different tenants", "items": {"$ref": "#/definitions/UserInviteTenantRoles"}}, "master_account_id": {"type": "string", "description": "ID of the Account Master in CoreStack"}, "user_groups": {"type": "array", "items": {"type": "string", "description": "Ids of the Usergroups"}}}, "type": "object"}, "UserInviteResponse": {"properties": {"user_id": {"type": "string", "description": "ID of the newly invited User"}}, "type": "object"}, "UserInviteTenantRoles": {"required": ["role_ids", "tenant_id"], "properties": {"tenant_id": {"type": "string", "description": "ID of the tenant within the CoreStack account"}, "role_ids": {"type": "array", "description": "Ids of the Roles to be assigned to the user under a tenant", "items": {"type": "string"}}}, "type": "object"}, "UserModel": {"required": ["active_tenant_id", "crm_id", "email", "id", "master_account_id", "master_account_name", "mfa_enabled", "name", "preferred_language", "product_bundle_name", "timezone"], "properties": {"name": {"type": "string", "description": "Name of the user."}, "id": {"type": "string", "description": "Id of the user. This will be used for performing user level operations such as getUser, changePassword and so on."}, "email": {"type": "string", "description": "Email Id of the user. This wil be unique."}, "active_tenant_id": {"type": "string", "description": "Active tenant id."}, "timezone": {"description": "Contains information about the timezone set for the user.", "$ref": "#/definitions/TimezoneModel"}, "preferred_language": {"type": "string", "description": "Language preferred by the user"}, "mfa_enabled": {"type": "string", "description": "Checks if the account is mfa enabled or not"}, "master_account_id": {"type": "string", "description": "Master Account ID of the user."}, "master_account_name": {"type": "string", "description": "Master Account Name of the user."}, "product_bundle_name": {"type": "string", "description": "Project Bundle Name of the users."}, "crm_id": {"type": "string", "description": "Customer Relationship Management ID"}, "master_account_ids": {"type": "array", "description": "list of master account ids", "items": {"type": "string"}}}, "type": "object"}, "UserPreference": {"properties": {"path": {"type": "string", "description": "Path is combination of id/key/value of user preference"}, "name": {"type": "string", "description": "Name of the user preference"}, "value": {"type": "string", "description": "Value of the user preference which is a JSON string"}, "created_at": {"type": "string", "format": "date-time", "description": "When the user preference was created"}, "update_at": {"type": "string", "format": "date-time", "description": "When the user preference was updated"}}, "type": "object"}, "UserPreferenceDeleteRequest": {"properties": {"path": {"type": "string", "description": "Path of the user preference"}, "name": {"type": "string", "description": "Name of the user preference"}}, "type": "object"}, "UserPreferenceGetRequest": {"properties": {"path": {"type": "string", "description": "Path of the user preference"}, "name": {"type": "string", "description": "Name of the user preference"}}, "type": "object"}, "UserPreferenceListRequest": {"properties": {"path": {"type": "string", "description": "Path of the user preference"}}, "type": "object"}, "UserProfileActiveTenantRequest": {"properties": {"tenant_id": {"type": "string", "description": "Tenant ID to set as active"}}, "type": "object"}, "UserProfileActiveTenantResponse": {"properties": {"id": {"type": "string", "description": "ID for user that was updated"}, "tenant_id": {"type": "string", "description": "ID for the new active tenant"}}, "type": "object"}, "UserResponseList": {"required": ["total_count", "users"], "properties": {"total_count": {"type": "integer", "description": "Number of users in CoreStack account."}, "users": {"type": "array", "description": "List all users within a CoreStack account.", "items": {"$ref": "#/definitions/UserDetails"}}}, "type": "object"}, "UserSummary": {"properties": {"name": {"type": "string", "description": "Name of the User"}, "email": {"type": "string", "description": "User email"}, "status": {"type": "string", "description": "Status of the user", "example": "active", "enum": ["active", "suspended", "deleted", "pending_activation", "verified", "rejected"], "x-cs-enum-type": "UserStatus"}}, "type": "object"}, "UserSummaryBatchResponse": {"properties": {"results": {"type": "object", "description": "Map from identifier to response model", "additionalProperties": {"$ref": "#/definitions/UserSummary"}}}, "type": "object"}, "UserTenantList": {"required": ["email", "roles", "status", "user_id", "username"], "properties": {"user_id": {"type": "string", "description": "ID of the User. This is an auto generated and unique in the CoreStack system"}, "username": {"type": "string", "description": "Username is unique in the CoreStack system. User can use this to login to CoreStack portal in addition to email"}, "status": {"type": "string", "description": "Current Status of the user - active or inactive. Inactive user cannot login or use AccessKeys"}, "email": {"type": "string", "description": "Email of the User. This is unique in the CoreStack system"}, "roles": {"type": "array", "description": "List of roles assignments for the user. The same user can be assigned with different roles in a tenant", "items": {"$ref": "#/definitions/RoleDetails"}}}, "type": "object"}, "UserTenantResponseList": {"required": ["total_count", "users"], "properties": {"total_count": {"type": "integer", "description": "Number of users in CoreStack account."}, "users": {"type": "array", "description": "List all users within a CoreStack account.", "items": {"$ref": "#/definitions/UserTenantList"}}}, "type": "object"}, "UserUpdateRequest": {"required": ["email", "timezone_id"], "properties": {"email": {"type": "string", "description": "Email ID of the user. This wil be unique across all the CoreStack accounts"}, "first_name": {"type": "string", "description": "First Name of the user. It can be only alphanumeric"}, "last_name": {"type": "string", "description": "Last Name of the user. It can be only alphanumeric"}, "timezone_id": {"type": "string", "description": "ID of the timezone to be set for th user. For a valid list of timezone values to use, please refer https://en.wikipedia.org/wiki/List_of_tz_database_time_zones"}, "role_assignment": {"type": "array", "description": "List of roles assignments for the user. The same user can be assigned different roles in different tenants", "items": {"$ref": "#/definitions/UpdateRoleAssignment"}}}, "type": "object"}, "UserUpdateResponse": {"required": ["user_id"], "properties": {"user_id": {"type": "string", "description": "ID of the updated User"}}, "type": "object"}, "UserVerificationRequest": {"required": ["email"], "properties": {"email": {"type": "string", "description": "User email"}}, "type": "object"}, "UserVerificationResponse": {"properties": {"user_id": {"type": "string", "description": "User id"}, "token": {"type": "string"}, "reset_key": {"type": "string"}, "status": {"type": "string"}}, "type": "object"}, "UtilizationDetails": {"required": ["date", "percentage"], "properties": {"date": {"type": "string", "description": "Day wise utilization"}, "percentage": {"type": "integer", "description": "Utilization by percentage for that date"}}, "type": "object"}, "ValidateCredentialsRequest": {"required": ["auth_values", "service"], "properties": {"service": {"type": "string", "description": "Name of the service"}, "auth_values": {"type": "object", "description": "Auth values of the cloud account. Examples:\n                                                                       Azure\n                                                                           \"auth_values\": {\n                                                                               \"tenant_id\": \"*******\",\n                                                                               \"application_id\": \"*******\",\n                                                                               \"application_secret\": \"*******\",\n                                                                               \"cloud_type\": \"Azure_Global/ Azure_Government/Azure_China\"\n                                                                           }\n                                                                       \n                                                                       Azure CSP-Direct\n                                                                           \"auth_values\": {\n                                                                                 \"tenant_id\": \"*******\",\n                                                                                 \"application_id\": \"*******\",\n                                                                                 \"application_secret\": \"*******\",\n                                                                                 \"cloud_type\": \"Azure_Global\",\n                                                                                 \"authentication_type\": \"app/authorization_code\",\n                                                                                 \"redirect_uri\": \"*******\", (Only if authentication_type \n                                                                                                                 is authorization_code)\n                                                                                 \"authorization_code\": \"*******\" (Only if authentication_type \n                                                                                                                 is authorization_code)\n                                                                               }\n                                                                       \n                                                                       Azure EA:\n                                                                           \"auth_values\":{\n                                                                             \"protocol\": \"api_key\",\n                                                                             \"cloud_type\": \"Azure_Global/ Azure_Government/Azure_China\",\n                                                                             \"enrollment_id\": \"******\",\n                                                                             \"api_key\": \"******\"\n                                                                           },\n                                                                           {\n                                                                             \"protocol\": \"application\",\n                                                                             \"cloud_type\": \"Azure_Global/ Azure_Government/Azure_China\",\n                                                                             \"enrollment_id\": \"********\",\n                                                                             \"tenant_id\": \"******\",\n                                                                             \"application_id\": \"*******\",\n                                                                             \"application_secret\": \"******\",\n                                                                             \"subscription_id\": \"\"\n                                                                           }\n                                                                       \n                                                                       GCP:\n                                                                           \"auth_values\": {\n                                                                               \"client_id\": \"*******\",\n                                                                               \"client_secret\": \"*******\",\n                                                                               \"project_id\": \"*******\",\n                                                                               \"redirect_uri\": \"*******\",\n                                                                               \"authorization_code\": \"*******\",\n                                                                               \"account_type\": \"linked_project_account/billing_account\",\n                                                                               \"protocol\": \"oauth2\",\n                                                                               \"bucket_name\": \"*******\",(Only if account_type is \n                                                                                                         billing_account)\n                                                                               \"billing_account\": \"******\", (Only if account_type is \n                                                                                                             billing_account)\n                                                                               \"data_set_id\": \"*******\"(Only if account_type is \n                                                                                                        billing_account)\n                                                                             }\n                                   \n                                                                       AWS Access Key:\n                                                                           \"auth_values\":\n                                                                           {\n                                                                               \"protocol\": \"access_key\",\n                                                                               \"account_type\": \"master_account/linked_account\",\n                                                                               \"cloud_type\": \"aws_standard\",\n                                                                               \"custom_billing_required\": \"false\",\n                                                                               \"access_key\": \"*******\",\n                                                                               \"secret_key\": \"*******\",\n                                                                               \"bucket_name\": \"*******\" (It is only applicable for master_account)\n                                                                           }\n                                                                       AWS Assume Role:\n                                                                           \"auth_values\":\n                                                                           {\n                                                                               \"protocol\": \"assume_role\",\n                                                                               \"account_type\": \"master_account/linked_account\",\n                                                                               \"cloud_type\": \"aws_standard\",\n                                                                               \"custom_billing_required\": \"false\",\n                                                                               \"assume_role_arn\": \"*******\",\n                                                                               \"assume_role_external_id\": \"*******\",\n                                                                               \"bucket_name\": \"*******\" (It is only applicable for master_account)\n                                                                           }"}}, "type": "object"}, "ValidateCredentialsResponse": {"required": ["account_id", "cloud_account_name"], "properties": {"account_id": {"type": "string", "description": "Account id"}, "cloud_account_name": {"type": "string", "description": "Cloud account"}, "master_accounts": {"type": "array", "description": "List of master accounts.", "items": {"$ref": "#/definitions/MasterAccountSummary"}}}, "type": "object"}, "ValidationResult": {"properties": {"field": {"type": "string"}, "reason": {"type": "string"}}, "type": "object"}, "ValidationResults": {"properties": {"entries": {"type": "array", "items": {"$ref": "#/definitions/ValidationResult"}}}, "type": "object"}, "VerifyUserResponseModel": {"required": ["account_master_name", "tenant_names", "timezone", "user_email", "user_id"], "properties": {"user_id": {"type": "string", "description": "user id"}, "user_email": {"type": "string", "description": "user email"}, "tenant_names": {"type": "array", "description": "user tenant names", "items": {"type": "string"}}, "account_master_name": {"type": "string", "description": "user name"}, "timezone": {"type": "string", "description": "Contains information about the timezone set for the user."}}, "type": "object"}, "ViewAppliedRequest": {"required": ["cloud_account_id", "monitoring_template_uri"], "properties": {"monitoring_template_uri": {"type": "string", "description": "Specify the monitoring_template_uri of the applied template to view what is applied. Template URI can be obtained from List operation alert configuration templates"}, "cloud_account_id": {"type": "string", "description": "Cloud account id is unique can be obtained from the list cloud account api."}, "resource_type": {"type": "string", "description": "Resource Type can be obtained from List Operation visibility details"}, "resource": {"type": "string", "description": "Resource can be obtained from get operations resource details"}, "metric_name": {"type": "string", "description": "Metric name can be obtained from List Operation visibility details"}, "criticality": {"type": "string", "description": "Specify the criticality", "example": "High", "enum": ["High", "Low", "Medium"], "x-cs-enum-type": "TemplateAlertCriticality"}, "metric_type": {"type": "string", "description": "Specify the metric_type", "example": "Availability", "enum": ["Availability", "Capacity", "Failure", "Performance", "Security", "Success", "Utilization"], "x-cs-enum-type": "TemplateAlertMetricType"}, "status": {"type": "string", "description": "The data to be filtered based on the specified status", "example": "completed", "enum": ["completed", "delete_failed", "delete_in_progress", "deleted", "enabled", "failed", "skipped"], "x-cs-enum-type": "AppliedAlertStatus"}}, "type": "object"}, "ViewAppliedResponse": {"required": ["applied_records", "message", "page_count", "total_count"], "properties": {"message": {"type": "string", "description": "Applied resource details retrieved successfully"}, "total_count": {"type": "integer", "description": "total records count"}, "page_count": {"type": "integer", "description": "Count of number of pages"}, "applied_records": {"description": "view applied response data", "$ref": "#/definitions/ViewAppliedResponseItem"}}, "type": "object"}, "ViewAppliedResponseItem": {"properties": {"resource": {"type": "string", "description": "Resource details retrieved successfully"}, "metric_name": {"type": "string", "description": "Metric name retrieved successfully"}, "criticality": {"type": "string", "description": "Criticality retrieved successfully"}, "metric_type": {"type": "string", "description": "metric_type retrieved successfully"}, "resource_filter": {"type": "string", "description": "Resource filter retrieved successfully"}, "status": {"type": "string", "description": "Status retrieved successfully"}, "metric_configurations": {"description": "Metric Configurations retrieved successfully", "$ref": "#/definitions/MetricConfigItems"}, "last_applied_date": {"type": "string", "description": "Last applied date retrieved successfully"}, "resource_type": {"type": "string", "description": "Resource type retrieved successfully"}, "status_message": {"type": "string", "description": "Status message retrieved successfully"}}, "type": "object"}, "ViewBlueprintDetails": {"required": ["created_at", "created_by", "description", "id", "name", "resources", "scope", "status", "updated_at", "updated_by"], "properties": {"id": {"type": "string", "description": "Blueprint ID"}, "name": {"type": "string", "description": "Blueprint Name"}, "description": {"type": "string", "description": "Blueprints Description"}, "resources": {"type": "array", "description": "Resource Details", "items": {"$ref": "#/definitions/ResourcesDetails"}}, "scope": {"type": "string", "description": "Scope of the blueprint"}, "status": {"type": "string", "description": "Status of the blueprint"}, "created_by": {"type": "string", "description": "Who has created the blueprint"}, "created_at": {"type": "string", "description": "When was the blueprint created"}, "updated_by": {"type": "string", "description": "Who has updated the blueprint"}, "updated_at": {"type": "string", "description": "When was the blueprint updated"}}, "type": "object"}, "ViewConfigurationRequest": {"required": ["template_uri"], "properties": {"template_uri": {"type": "string", "description": "Template URI"}}, "type": "object"}, "ViewConfigurationResponse": {"required": ["data", "message"], "properties": {"message": {"type": "string", "description": "Message of View Configuration"}, "data": {"type": "object", "description": "View Configuration Listing"}}, "type": "object"}, "ViewScheduleResponse": {"required": ["args", "created_at", "created_by", "description", "execution_logs", "name", "next_run", "recurrence", "resource", "schedule", "type", "updated_at", "updated_by"], "properties": {"name": {"type": "string", "description": "Schedule Name"}, "type": {"type": "string", "description": "Schedule type", "example": "template", "enum": ["template", "script", "policy"], "x-cs-enum-type": "ScheduleType"}, "description": {"type": "string", "description": "Description of the schedule"}, "recurrence": {"type": "string", "description": "Re-occurence of the schedule"}, "next_run": {"type": "string", "description": "When will the schedule run for the next time"}, "schedule": {"type": "object", "description": "Schedule date and time details"}, "args": {"type": "object", "description": "Input Parameters for that Template/Policy/Script that is scheduled"}, "resource": {"type": "array", "description": "Template/Policy/Script Details that is scheduled", "items": {"$ref": "#/definitions/ResourceViewDetails"}}, "execution_logs": {"type": "array", "description": "Execution Log Details", "items": {"$ref": "#/definitions/ExecutionLogDetails"}}, "created_at": {"type": "string", "description": "When the schedule is created"}, "created_by": {"type": "string", "description": "Who has created the schedule"}, "updated_by": {"type": "string", "description": "Who has updated the schedule"}, "updated_at": {"type": "string", "description": "When the schedule is updated"}}, "type": "object"}, "ViewViolationModel": {"required": ["category", "cloud_account_id", "cloud_account_name", "count", "name", "severity", "tenant_id", "tenant_name", "violation_category"], "properties": {"count": {"type": "integer", "description": "Count of a particular violation in a particular cloud account"}, "category": {"type": "string", "description": "Category under which a particular violation falls in a particular cloud account"}, "tenant_name": {"type": "string", "description": "Tenant under which the cloud account resides"}, "name": {"type": "string", "description": "Name of the violation"}, "cloud_account_id": {"type": "string", "description": "ID of the cloud account"}, "violation_category": {"type": "string", "description": "Category of a violation i.e. standards/utilization"}, "cloud_account_name": {"type": "string", "description": "Cloud account name"}, "tenant_id": {"type": "string", "description": "ID of the tenant"}, "severity": {"type": "string", "description": "Severity of the violation"}}, "type": "object"}, "ViewViolationResponse": {"required": ["details", "page_count", "total_count"], "properties": {"total_count": {"type": "integer", "description": "Total violations count"}, "page_count": {"type": "string", "description": "Count of number of pages"}, "details": {"type": "array", "description": "Details of violation", "items": {"$ref": "#/definitions/ViewViolationModel"}}}, "type": "object"}, "ViolationCategoryModel": {"required": ["standards", "utilization"], "properties": {"utilization": {"description": "Contains the category and the number of violations under Utilization", "$ref": "#/definitions/SummaryModel"}, "standards": {"description": "Contains the category and the number of violations under Standards", "$ref": "#/definitions/SummaryModel"}}, "type": "object"}, "VisibilityFilterResponse": {"required": ["cloud_accounts", "guardrails", "tenants"], "properties": {"cloud_accounts": {"type": "array", "description": "Service accounts to filter violations based on service accounts", "items": {"$ref": "#/definitions/ServiceAccountsModel"}}, "guardrails": {"type": "array", "description": "Guardrail to filter violations based on guardrail", "items": {"$ref": "#/definitions/GuardrailModel"}}, "tenants": {"type": "array", "description": "Tenants to filter violations based on tenant", "items": {"$ref": "#/definitions/ProjectsModel"}}}, "type": "object"}, "VulnerabilityByCloudAccountWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "VulnerabilityByCloudAccountWidgetConfiguration"}, "VulnerabilityByRegionWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "VulnerabilityByRegionWidgetConfiguration"}, "VulnerabilityTrendWidgetConfiguration": {"allOf": [{"$ref": "#/definitions/BaseChartWidgetConfigurationModel"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "VulnerabilityTrendWidgetConfiguration"}, "WellArchitectedAssessmentRunCreateMilestoneRequest": {"properties": {"name": {"type": "string", "description": "Name of the milestone to create."}}, "type": "object"}, "WellArchitectedFramework": {"properties": {"created_on": {"type": "string", "format": "date-time", "description": "Framework created on"}, "created_by": {"type": "string", "description": "Username who created the framework. null for Marketplace frameworks."}, "updated_on": {"type": "string", "format": "date-time", "description": "Framework updated on"}, "updated_by": {"type": "string", "description": "Username who updated the framework. null for Marketplace frameworks."}, "framework_id": {"type": "string", "description": "ID of Framework"}, "hyperscaler_framework_id": {"type": "string", "description": "ID of framework"}, "framework_type": {"type": "string", "description": "Type of the Framework", "example": "Custom", "enum": ["Custom", "Marketplace"], "x-cs-enum-type": "WellArchitectedFrameworkType"}, "account_id": {"type": "string", "description": "Master account id associated with the framework. null for Marketplace frameworks"}, "tenant_id": {"type": "string", "description": "Tenant associated with the framework. null for Marketplace frameworks"}, "name": {"type": "string", "description": "Name of the Framework"}, "description": {"type": "string", "description": "Description for Framework"}, "version": {"type": "string", "description": "Version of the Framework"}, "valid_service_types": {"type": "array", "description": "Valid Service Types", "items": {"type": "string", "description": "Cloud Provider to select", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}}, "logo": {"type": "string", "description": "Logo of Framework"}, "status": {"type": "string", "description": "Framework status", "example": "Draft", "enum": ["Draft", "Active", "Inactive"], "x-cs-enum-type": "WellArchitectedFrameworkStatus"}, "pillars": {"type": "array", "description": "The Pillars in the Framework", "items": {"$ref": "#/definitions/WellArchitectedFrameworkPillar"}}}, "type": "object"}, "WellArchitectedFrameworkAssessmentAWSSyncFields": {"properties": {"cloud_account_id": {"type": "string", "description": "ID of cloud account"}, "region": {"type": "string", "description": "Name of region"}}, "type": "object"}, "WellArchitectedFrameworkAssessmentConfiguration": {"properties": {"workload_id": {"type": "string", "description": "ID of the Workload Definition to use for this assessment"}, "framework_ids": {"type": "array", "items": {"type": "string", "description": "IDs of the Frameworks to use for this assessment"}}, "sync_with_hyperscaler": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentSync"}}, "type": "object"}, "WellArchitectedFrameworkAssessmentContext": {"properties": {"framework_id": {"type": "string", "description": "ID of the Framework. This can be retrieved using the Well Architected Framework List API."}, "pillar_id": {"type": "string", "description": "ID of the Pillar associated with the Framework"}, "question_id": {"type": "string", "description": "ID of the Question associated with the Pillar"}, "best_practice_id": {"type": "string", "description": "ID of the Bestpractice associated with the Question"}}, "type": "object"}, "WellArchitectedFrameworkAssessmentDefinition": {"required": ["is_active", "tenant_id"], "properties": {"sysId": {"type": "string", "description": "ID of the Assessment Definition"}, "createdOn": {"type": "string", "format": "date-time", "description": "Assessment Definition created on"}, "updatedOn": {"type": "string", "format": "date-time", "description": "Assessment Definition updated on"}, "tenant_id": {"type": "string", "description": "Tenant owning the assessment"}, "owner": {"type": "string", "description": "Owner of the assessment"}, "approver": {"type": "string", "description": "Approver of the assessment"}, "name": {"type": "string", "description": "Name of the assessment"}, "description": {"type": "string", "description": "Description of the assessment"}, "headVersion": {"$ref": "#/definitions/RecordIdentity"}, "releaseVersion": {"$ref": "#/definitions/RecordIdentity"}, "is_active": {"type": "boolean", "description": "States if the assessment is active or not"}, "notification_configuration": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentNotification"}}, "type": "object"}, "WellArchitectedFrameworkAssessmentDefinitionVersion": {"properties": {"sysId": {"type": "string", "description": "ID of the Assessment Definition Version"}, "createdOn": {"type": "string", "format": "date-time", "description": "Assessment Version created on"}, "updatedOn": {"type": "string", "format": "date-time", "description": "Assessment Version updated on"}, "version": {"type": "integer", "description": "Version number"}, "version_state": {"type": "string", "description": "State of the version", "example": "Draft", "enum": ["Draft", "Approved", "Rejected"], "x-cs-enum-type": "VersionState"}, "definition": {"$ref": "#/definitions/RecordIdentity"}, "details": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentConfiguration"}, "predecessor": {"$ref": "#/definitions/RecordIdentity"}}, "type": "object"}, "WellArchitectedFrameworkAssessmentNotification": {"properties": {"email_recipients": {"type": "array", "items": {"type": "string", "description": "Mail IDs of the users for email notification"}}, "webhooks": {"type": "array", "description": "webhooks to trigger notifications", "items": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentNotificationWebHook"}}}, "type": "object"}, "WellArchitectedFrameworkAssessmentNotificationWebHook": {"required": ["__type"], "properties": {"webhook_id": {"type": "string", "description": "Webhook ID to trigger notification"}}, "discriminator": "__type", "type": "object", "x-cs-type-name": "WellArchitectedFrameworkAssessmentNotificationWebHook", "x-cs-subtypes": [{"subtype_model": "WellArchitectedFrameworkAssessmentNotificationWebHookForMicrosoftTeams", "subtype_name": "WellArchitectedFrameworkAssessmentNotificationWebHookForMicrosoftTeams"}, {"subtype_model": "WellArchitectedFrameworkAssessmentNotificationWebHookForStandardType", "subtype_name": "WellArchitectedFrameworkAssessmentNotificationWebHookForStandardType"}]}, "WellArchitectedFrameworkAssessmentNotificationWebHookForMicrosoftTeams": {"allOf": [{"$ref": "#/definitions/WellArchitectedFrameworkAssessmentNotificationWebHook"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "WellArchitectedFrameworkAssessmentNotificationWebHookForMicrosoftTeams"}, "WellArchitectedFrameworkAssessmentNotificationWebHookForStandardType": {"allOf": [{"$ref": "#/definitions/WellArchitectedFrameworkAssessmentNotificationWebHook"}, {"properties": {}, "type": "object"}], "x-cs-type-name": "WellArchitectedFrameworkAssessmentNotificationWebHookForStandardType"}, "WellArchitectedFrameworkAssessmentRun": {"properties": {"sysId": {"type": "string", "description": "ID of the Assessment run"}, "createdOn": {"type": "string", "format": "date-time", "description": "Assessment run created on"}, "updatedOn": {"type": "string", "format": "date-time", "description": "Assessment run updated on"}, "status": {"type": "string", "description": "Status of the assessment run", "example": "InProgress", "enum": ["InProgress", "Abandoned", "Completed"], "x-cs-enum-type": "WellArchitectedFrameworkAssessmentRunStatus"}, "assessment_version": {"description": "The version of the Assessment used for this run", "$ref": "#/definitions/RecordIdentity"}, "workload_version": {"description": "The version of the Workload used for this run", "$ref": "#/definitions/RecordIdentity"}, "hyperscaler_workload_id": {"type": "string", "description": "ARN of workload created when synced to AWS"}}, "type": "object"}, "WellArchitectedFrameworkAssessmentRunAnswer": {"properties": {"best_practice_id": {"type": "string", "description": "Identity of the Best Practice"}, "status": {"type": "string", "description": "Status of the question or best practice", "example": "Open", "enum": ["Open", "NotApplicable", "Verified", "VerifiedWithException"], "x-cs-enum-type": "WellArchitectedFrameworkAssessmentRunAnswerStatus"}, "createdBy": {"type": "string", "description": "User ID of user who provided this answer"}, "createdOn": {"type": "string", "format": "date-time", "description": "When the answer was provided"}, "owner": {"type": "string", "description": "User ID of the owner of this answer"}, "assigned_to": {"type": "array", "description": "List of user IDs assigned to this answer", "items": {"type": "string"}}, "attachment_ids": {"type": "array", "description": "List of Attachment IDs assigned to this answer", "items": {"type": "string"}}, "comment_id": {"type": "string", "description": "Unique ID for this comment"}, "comment": {"type": "string", "description": "Comment added to this answer"}, "recommendation": {"type": "string", "description": "Markdown text of the recommendation if edited by the user"}}, "type": "object"}, "WellArchitectedFrameworkAssessmentRunAnswerRequest": {"properties": {"framework_id": {"type": "string", "description": "Identity of the Framework"}, "pillar_id": {"type": "string", "description": "Identity of the Pillar"}, "question_id": {"type": "string", "description": "Identity of the Question"}, "answer": {"description": "Answer to add to question", "$ref": "#/definitions/WellArchitectedFrameworkAssessmentRunAnswer"}}, "type": "object"}, "WellArchitectedFrameworkAssessmentRunCreateRequest": {"properties": {"assessment_version": {"description": "The version of the Assessment used for this run", "$ref": "#/definitions/RecordIdentity"}, "workload_version": {"description": "The version of the Workload used for this run", "$ref": "#/definitions/RecordIdentity"}}, "type": "object"}, "WellArchitectedFrameworkAssessmentRunHistory": {"properties": {"sysId": {"type": "string", "description": "ID of the Assessment run history"}, "createdOn": {"type": "string", "format": "date-time", "description": "Assessment run created on"}, "updatedOn": {"type": "string", "format": "date-time", "description": "Assessment run updated on"}, "assessment_run": {"description": "The Assessment Run this history is for", "$ref": "#/definitions/RecordIdentity"}, "predecessor": {"description": "Previous history entry", "$ref": "#/definitions/RecordIdentity"}, "triggered_contexts": {"type": "array", "description": "Contexts that triggered the scan", "items": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentContext"}}, "background_job": {"description": "Background job associated with a relevant scan. If null, background job has completed.", "$ref": "#/definitions/RecordIdentity"}, "milestone": {"type": "string", "description": "Name of the milestone (only present if this history entry represents a milestone)"}, "policy_scans": {"type": "array", "description": "Scans associated with this history step", "items": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentRunPolicyScan"}}, "hyperscaler_milestone_number": {"type": "integer", "description": "Milestone number "}}, "type": "object"}, "WellArchitectedFrameworkAssessmentRunHistoryRequest": {"properties": {"assessment_run_ids": {"type": "array", "items": {"$ref": "#/definitions/RecordIdentity"}}}, "type": "object"}, "WellArchitectedFrameworkAssessmentRunPolicyScan": {"properties": {"context": {"description": "Context for the policy execution.", "$ref": "#/definitions/WellArchitectedFrameworkAssessmentContext"}, "cloud_account_id": {"type": "string", "description": "ID of the cloud account for this policy Job execution"}, "policy_uri": {"type": "string", "description": "External Identity of the Policy"}, "policy_job_id": {"type": "string", "description": "Identity of the Policy Job"}, "status": {"type": "string", "description": "Status of the policy scan", "example": "Queued", "enum": ["Queued", "InProgress", "Success", "Failed"], "x-cs-enum-type": "WellArchitectedFrameworkAssessmentRunPolicyScanStatus"}, "failure": {"type": "string", "description": "Reason for failure of the policy scan"}, "started": {"type": "string", "format": "date-time"}, "completed": {"type": "string", "format": "date-time"}, "evaluated_resource_count": {"type": "integer"}, "violated_resource_count": {"type": "integer"}}, "type": "object"}, "WellArchitectedFrameworkAssessmentRunQuestion": {"properties": {"sysId": {"type": "string", "description": "ID of the Assessment run question"}, "createdOn": {"type": "string", "format": "date-time", "description": "Assessment run question created on"}, "updatedOn": {"type": "string", "format": "date-time", "description": "Assessment run question created on"}, "assessment_run_history": {"description": "The entry in the Assessment Run History this question is for", "$ref": "#/definitions/RecordIdentity"}, "framework_id": {"type": "string", "description": "Identity of the Framework"}, "pillar_id": {"type": "string", "description": "Identity of the Pillar"}, "question_id": {"type": "string", "description": "Identity of the Question"}, "answers": {"type": "array", "items": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentRunAnswer"}}}, "type": "object"}, "WellArchitectedFrameworkAssessmentRunQuestionRequest": {"properties": {"assessment_run_history_ids": {"type": "array", "items": {"$ref": "#/definitions/RecordIdentity"}}}, "type": "object"}, "WellArchitectedFrameworkAssessmentRunRequest": {"properties": {"assessment_definition_ids": {"type": "array", "items": {"$ref": "#/definitions/RecordIdentity"}}}, "type": "object"}, "WellArchitectedFrameworkAssessmentRunSetStateRequest": {"properties": {"status": {"type": "string", "description": "Status of the assessment run", "example": "InProgress", "enum": ["InProgress", "Abandoned", "Completed"], "x-cs-enum-type": "WellArchitectedFrameworkAssessmentRunStatus"}}, "type": "object"}, "WellArchitectedFrameworkAssessmentRunViolationRequest": {"properties": {"policy_job_id": {"type": "string", "description": "Identity of the Policy Job"}}, "type": "object"}, "WellArchitectedFrameworkAssessmentSync": {"properties": {"AWS": {"$ref": "#/definitions/WellArchitectedFrameworkAssessmentAWSSyncFields"}}, "type": "object"}, "WellArchitectedFrameworkBestPractice": {"properties": {"framework_id": {"type": "string", "description": "ID of the framework associated with the best practice"}, "pillar_id": {"type": "string", "description": "ID of the pillar associated with the best practice"}, "question_id": {"type": "string", "description": "ID for the question associated with the best practice"}, "best_practice_id": {"type": "string", "description": "ID for the best practice"}, "hyperscaler_best_practice_id": {"type": "string", "description": "ID of best practice"}, "best_practice": {"type": "string", "description": "Best practice at question level"}, "description": {"type": "string", "description": "Statement of the best practice"}, "recommendation": {"type": "string", "description": "Statement of the best practice"}, "nature": {"type": "string", "description": "Nature of the best practice", "example": "Automated", "enum": ["Automated", "Manual"], "x-cs-enum-type": "WellArchitectedFrameworkBestPracticeNature"}, "risk": {"type": "string", "description": "Risk of the best practice", "example": "Low", "enum": ["Low", "Medium", "High", "None"], "x-cs-enum-type": "WellArchitectedFrameworkRisk"}, "policy_uris": {"type": "array", "description": "URIs of the Policies associated with this best practice", "items": {"type": "string"}}}, "type": "object"}, "WellArchitectedFrameworkBestPracticeRequest": {"properties": {"best_practices": {"type": "array", "description": "Best Practices to process", "items": {"$ref": "#/definitions/WellArchitectedFrameworkBestPractice"}}}, "type": "object"}, "WellArchitectedFrameworkPillar": {"properties": {"framework_id": {"type": "string", "description": "Framework id for the Pillar"}, "pillar_id": {"type": "string", "description": "Unique Id of the Pillar"}, "hyperscaler_pillar_id": {"type": "string", "description": "Unique Id of pillar"}, "pillar": {"type": "string", "description": "Name of Pillar for the Framework"}, "description": {"type": "string", "description": "Description of the Pillar"}, "icon": {"type": "string", "description": "Icon for the pillar"}, "questions": {"type": "array", "items": {"$ref": "#/definitions/RecordIdentity"}}}, "type": "object"}, "WellArchitectedFrameworkPillarRequest": {"properties": {"pillars": {"type": "array", "description": "Pillars to process", "items": {"$ref": "#/definitions/WellArchitectedFrameworkPillar"}}}, "type": "object"}, "WellArchitectedFrameworkPolicyId": {"properties": {"framework_id": {"type": "string", "description": "ID of the framework associated with the best practice"}, "pillar_id": {"type": "string", "description": "ID of the pillar associated with the best practice"}, "question_id": {"type": "string", "description": "ID for the question associated with the best practice"}, "best_practice_id": {"type": "string", "description": "ID for the best practice"}, "policy_uri": {"type": "string", "description": "External Identity of the Policy"}}, "type": "object"}, "WellArchitectedFrameworkPolicyParams": {"allOf": [{"$ref": "#/definitions/WellArchitectedFrameworkPolicyId"}, {"properties": {"params": {"type": "string", "description": "Policy execution parameters, encoded as a JSON string"}}, "type": "object"}]}, "WellArchitectedFrameworkQuestion": {"properties": {"created_on": {"type": "string", "format": "date-time", "description": "Well Architected Question created on"}, "updated_on": {"type": "string", "format": "date-time", "description": "Well Architected Question updated on"}, "framework_id": {"type": "string", "description": "ID of the framework associated with the question"}, "pillar_id": {"type": "string", "description": "ID of the pillar associated with the question"}, "question_id": {"type": "string", "description": "ID for the particular question"}, "hyperscaler_question_id": {"type": "string", "description": "Id of question"}, "question": {"type": "string", "description": "Question"}, "description": {"type": "string", "description": "Description for the question"}, "best_practices": {"type": "array", "items": {"$ref": "#/definitions/RecordIdentity"}}}, "type": "object"}, "WellArchitectedFrameworkQuestionRequest": {"properties": {"questions": {"type": "array", "description": "Questions to process", "items": {"$ref": "#/definitions/WellArchitectedFrameworkQuestion"}}}, "type": "object"}, "WellArchitectedFrameworkReport": {"properties": {"sys_id": {"type": "string", "description": "Unique ID for the report"}, "assessment_run": {"description": "The Assessment Run this report is for", "$ref": "#/definitions/RecordIdentity"}, "framework_id": {"type": "string", "description": "Identity of the Framework"}, "background_job": {"description": "Identity of the background job used to generate the report. null if the job has completed", "$ref": "#/definitions/RecordIdentity"}, "attachment_id": {"type": "string", "description": "ID of the attachment where the report contents are stored. This will be null until the report has been successfully generated"}}, "type": "object"}, "WellArchitectedFrameworkReportCreateRequest": {"properties": {"assessment_run": {"description": "The Assessment Run this report is for", "$ref": "#/definitions/RecordIdentity"}, "assessment_run_history": {"description": "ID of the assessment run history", "$ref": "#/definitions/RecordIdentity"}, "framework_id": {"type": "string", "description": "Identity of the Framework"}, "report_type": {"type": "string", "description": "Type of Well Architected report", "example": "Full", "enum": ["Full", "Summary"], "x-cs-enum-type": "WellArchitectedReportType"}}, "type": "object"}, "WidgetComposition": {"properties": {"config": {"$ref": "#/definitions/WidgetConfiguration"}, "outline": {"$ref": "#/definitions/WidgetOutline"}}, "type": "object"}, "WidgetConfiguration": {"required": ["__type", "id"], "properties": {"id": {"type": "string"}, "size": {"type": "integer"}, "name": {"type": "string"}, "description": {"type": "string"}, "refreshRateInSeconds": {"type": "integer"}, "manualFontScaling": {"type": "boolean"}, "fontMultiplier": {"type": "number"}, "toolbarBehavior": {"type": "string", "description": "Behavior of the widget toolbar", "example": "AlwaysShow", "enum": ["AlwaysShow", "AutoHide", "Collapsible", "Hide"], "x-cs-enum-type": "WidgetToolbarBehavior"}}, "discriminator": "__type", "type": "object", "x-cs-subtypes": [{"subtype_model": "GroupingWidgetConfiguration", "subtype_name": "GroupingWidgetConfiguration"}, {"subtype_model": "ImageWidgetConfiguration", "subtype_name": "ImageWidgetConfiguration"}, {"subtype_model": "TextWidgetConfiguration", "subtype_name": "TextWidgetConfiguration"}, {"subtype_model": "BaseDataWidgetConfigurationModel", "subtype_name": "BaseDataWidgetConfigurationModel"}, {"subtype_model": "BaseChartWidgetConfigurationModel", "subtype_name": "BaseChartWidgetConfigurationModel"}, {"subtype_model": "FilterWidgetConfiguration", "subtype_name": "FilterWidgetConfiguration"}, {"subtype_model": "FilterContextWidgetConfigurationModel", "subtype_name": "FilterContextWidgetConfigurationModel"}, {"subtype_model": "CloudForecasterForSixMonthsWidgetConfiguration", "subtype_name": "CloudForecasterForSixMonthsWidgetConfiguration"}, {"subtype_model": "CostSpendByCloudWidgetConfiguration", "subtype_name": "CostSpendByCloudWidgetConfiguration"}, {"subtype_model": "CostSpendByCloudAccountWidgetConfiguration", "subtype_name": "CostSpendByCloudAccountWidgetConfiguration"}, {"subtype_model": "CostSpendByCloudResourceWidgetConfiguration", "subtype_name": "CostSpendByCloudResourceWidgetConfiguration"}, {"subtype_model": "CostSpendByCloudTenantWidgetConfiguration", "subtype_name": "CostSpendByCloudTenantWidgetConfiguration"}, {"subtype_model": "CostSpendByRegionWidgetConfiguration", "subtype_name": "CostSpendByRegionWidgetConfiguration"}, {"subtype_model": "CostTrendByCloudWidgetConfiguration", "subtype_name": "CostTrendByCloudWidgetConfiguration"}, {"subtype_model": "CostAnomalyByCloudWidgetConfiguration", "subtype_name": "CostAnomalyByCloudWidgetConfiguration"}, {"subtype_model": "CostSummaryWidgetConfigurationModel", "subtype_name": "CostSummaryWidgetConfigurationModel"}, {"subtype_model": "ResourceByProductCategoryWidgetConfiguration", "subtype_name": "ResourceByProductCategoryWidgetConfiguration"}, {"subtype_model": "TopBudgetByTenantWidgetConfiguration", "subtype_name": "TopBudgetByTenantWidgetConfiguration"}, {"subtype_model": "BudgetDriftWidgetConfiguration", "subtype_name": "BudgetDriftWidgetConfiguration"}, {"subtype_model": "TopCostOptimizationWidgetConfiguration", "subtype_name": "TopCostOptimizationWidgetConfiguration"}, {"subtype_model": "CostOptimizationByOptimizationTypeWidgetConfiguration", "subtype_name": "CostOptimizationByOptimizationTypeWidgetConfiguration"}, {"subtype_model": "CostOptimizationTrendWidgetConfiguration", "subtype_name": "CostOptimizationTrendWidgetConfiguration"}, {"subtype_model": "CostSpendByBillingTypeWidgetConfiguration", "subtype_name": "CostSpendByBillingTypeWidgetConfiguration"}, {"subtype_model": "CostSpendByTagLevelWidgetConfiguration", "subtype_name": "CostSpendByTagLevelWidgetConfiguration"}, {"subtype_model": "CostAnomalyImpactByBillingWidgetConfiguration", "subtype_name": "CostAnomalyImpactByBillingWidgetConfiguration"}, {"subtype_model": "CostAnomalyImpactByEventWidgetConfiguration", "subtype_name": "CostAnomalyImpactByEventWidgetConfiguration"}, {"subtype_model": "VulnerabilityByCloudAccountWidgetConfiguration", "subtype_name": "VulnerabilityByCloudAccountWidgetConfiguration"}, {"subtype_model": "VulnerabilityByRegionWidgetConfiguration", "subtype_name": "VulnerabilityByRegionWidgetConfiguration"}, {"subtype_model": "VulnerabilityTrendWidgetConfiguration", "subtype_name": "VulnerabilityTrendWidgetConfiguration"}, {"subtype_model": "TagLevelTrendWidgetConfiguration", "subtype_name": "TagLevelTrendWidgetConfiguration"}, {"subtype_model": "ThreatsTrendWidgetConfiguration", "subtype_name": "ThreatsTrendWidgetConfiguration"}, {"subtype_model": "ThreatsConcentrationByProviderWidgetConfiguration", "subtype_name": "ThreatsConcentrationByProviderWidgetConfiguration"}, {"subtype_model": "ThreatsByCloudAccountWidgetConfiguration", "subtype_name": "ThreatsByCloudAccountWidgetConfiguration"}, {"subtype_model": "ThreatsByRegionWidgetConfiguration", "subtype_name": "ThreatsByRegionWidgetConfiguration"}, {"subtype_model": "MisconfigurationViolationsTrendWidgetConfiguration", "subtype_name": "MisconfigurationViolationsTrendWidgetConfiguration"}, {"subtype_model": "MisconfigurationViolationsByCloudAccountWidgetConfiguration", "subtype_name": "MisconfigurationViolationsByCloudAccountWidgetConfiguration"}, {"subtype_model": "MisconfigurationViolationsByRegionWidgetConfiguration", "subtype_name": "MisconfigurationViolationsByRegionWidgetConfiguration"}, {"subtype_model": "MisconfigurationViolationsByCloudProviderWidgetConfiguration", "subtype_name": "MisconfigurationViolationsByCloudProviderWidgetConfiguration"}, {"subtype_model": "ControlViolationsWithHighRiskLevelWidgetConfiguration", "subtype_name": "ControlViolationsWithHighRiskLevelWidgetConfiguration"}, {"subtype_model": "ControlViolationsWithStandardCoverageWidgetConfiguration", "subtype_name": "ControlViolationsWithStandardCoverageWidgetConfiguration"}, {"subtype_model": "ControlHealthWidgetConfiguration", "subtype_name": "ControlHealthWidgetConfiguration"}, {"subtype_model": "AccessViolationsTrendWidgetConfiguration", "subtype_name": "AccessViolationsTrendWidgetConfiguration"}, {"subtype_model": "AccessViolationsByCloudAccountWidgetConfiguration", "subtype_name": "AccessViolationsByCloudAccountWidgetConfiguration"}]}, "WidgetNavigationDescriptor": {"properties": {"context": {"type": "string", "description": "Context of the navigation if the Widget supports more than one (e.g. columns)"}, "portal_path": {"type": "array", "description": "Path of the portal to navigate to", "items": {"type": "string"}}}, "type": "object"}, "WidgetOutline": {"properties": {"left": {"type": "integer"}, "top": {"type": "integer"}, "width": {"type": "integer"}, "height": {"type": "integer"}}, "type": "object"}, "WorkSpaceReportModel": {"required": ["data"], "properties": {"data": {"type": "object", "description": "Returned Workspace"}}, "type": "object"}, "WorkloadConfiguration": {"properties": {"tiers": {"type": "array", "description": "Tiers composing the workload", "items": {"$ref": "#/definitions/WorkloadTierConfiguration"}}, "tags": {"type": "array", "description": "List of tag key/value pairs", "items": {"$ref": "#/definitions/KeyValuePair"}}}, "type": "object"}, "WorkloadDefinition": {"required": ["is_active", "tenant_id"], "properties": {"sysId": {"type": "string", "description": "ID of the Workload Definition"}, "createdOn": {"type": "string", "format": "date-time", "description": "Workload Definition created on"}, "updatedOn": {"type": "string", "format": "date-time", "description": "Workload Definition updated on"}, "tenant_id": {"type": "string", "description": "Tenant owning the workload"}, "owner": {"type": "string", "description": "Owner of the workload"}, "name": {"type": "string", "description": "Name of the workload"}, "description": {"type": "string", "description": "Description of the workload"}, "workload_type": {"type": "string", "description": "Type of the workload"}, "headVersion": {"$ref": "#/definitions/RecordIdentity"}, "releaseVersion": {"$ref": "#/definitions/RecordIdentity"}, "is_active": {"type": "boolean", "description": "States if the workload is active or not"}, "attachments": {"type": "array", "description": "List of attachment IDs associated with this workload", "items": {"type": "string"}}}, "type": "object"}, "WorkloadDefinitionListRequest": {"properties": {"list_context": {"description": "Optional list context", "$ref": "#/definitions/ListContext"}, "sort": {"type": "array", "description": "Sort criteria", "items": {"$ref": "#/definitions/WorkloadDefinitionListSortCriteria"}}, "filters": {"description": "Filters for the request", "$ref": "#/definitions/WorkloadFilter"}}, "type": "object"}, "WorkloadDefinitionListSortCriteria": {"required": ["column"], "properties": {"column": {"type": "string", "example": "Name", "enum": ["Name", "WorkloadType", "CreatedOn"], "x-cs-enum-type": "WorkloadDefinitionListSortColumn"}, "ascending": {"type": "boolean"}}, "type": "object"}, "WorkloadDefinitionVersion": {"properties": {"sysId": {"type": "string", "description": "ID of the Workload Definition Version"}, "createdOn": {"type": "string", "format": "date-time", "description": "Workload Definition Version created on"}, "updatedOn": {"type": "string", "format": "date-time", "description": "Workload Definition Version updated on"}, "version": {"type": "integer", "description": "Version number"}, "definition": {"$ref": "#/definitions/RecordIdentity"}, "details": {"$ref": "#/definitions/WorkloadConfiguration"}, "predecessor": {"$ref": "#/definitions/RecordIdentity"}}, "type": "object"}, "WorkloadFilter": {"properties": {"tenant_id": {"type": "string", "description": "Tenant id"}, "query": {"$ref": "#/definitions/QueryOperator"}}, "type": "object"}, "WorkloadQueryCloud": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"clouds": {"type": "array", "items": {"type": "string", "description": "Cloud provider"}}}, "type": "object"}], "x-cs-type-name": "WorkloadQueryCloud"}, "WorkloadQueryCloudAccount": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"cloud_account_ids": {"type": "array", "items": {"type": "string", "description": "Id of cloud account"}}}, "type": "object"}], "x-cs-type-name": "WorkloadQueryCloudAccount"}, "WorkloadQueryRequest": {"properties": {"list_context": {"description": "Optional list context", "$ref": "#/definitions/ListContext"}, "sort": {"type": "array", "description": "Sort criteria", "items": {"$ref": "#/definitions/WorkloadQuerySortCriteria"}}, "filters": {"description": "Filters for the request", "$ref": "#/definitions/WorkloadTierConfiguration"}}, "type": "object"}, "WorkloadQuerySortCriteria": {"required": ["column"], "properties": {"column": {"type": "string", "example": "CloudAccountName", "enum": ["CloudAccountName", "Cloud", "ResourceID", "ResourceCategory", "ResourceType", "Resource", "ResourceRegion"], "x-cs-enum-type": "WorkloadQuerySortColumn"}, "ascending": {"type": "boolean"}}, "type": "object"}, "WorkloadQueryWorkloadOwner": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"workload_owners": {"type": "array", "items": {"type": "string", "description": "Owner of Workload"}}}, "type": "object"}], "x-cs-type-name": "WorkloadQueryWorkloadOwner"}, "WorkloadQueryWorkloadType": {"allOf": [{"$ref": "#/definitions/QueryOperator"}, {"properties": {"workload_types": {"type": "array", "items": {"type": "string", "description": "Type of the Workload"}}}, "type": "object"}], "x-cs-type-name": "WorkloadQueryWorkloadType"}, "WorkloadResource": {"properties": {"service_account_id": {"type": "string", "description": "ID of account that resource belongs to"}, "resource_filter": {"type": "string", "description": "Resource Filter"}, "category": {"type": "string", "description": "Category of resource"}, "resource_type": {"type": "string", "description": "Resource Type of resource"}, "resource": {"type": "string", "description": "Resource (service_resource)"}, "operation_id": {"type": "string", "description": "OperationId associated with resource"}, "location": {"type": "string", "description": "Location of resource"}, "check_resource_element": {"type": "string", "description": "Resource identifier"}, "resource_name": {"type": "string", "description": "Resource name. For any resource type that does not support a name field, resource_name will be null."}, "tags": {"type": "object", "description": "Tags associated with resource", "additionalProperties": {"type": "string"}}, "status": {"type": "string", "description": "Status of the resource"}, "created_at": {"type": "string", "format": "date-time", "description": "When resource was created"}, "updated_at": {"type": "string", "format": "date-time", "description": "When resource was last updated"}}, "type": "object"}, "WorkloadServiceResource": {"properties": {"cloud": {"type": "string", "description": "Cloud Provider", "example": "AWS", "enum": ["AWS", "Azure", "Azure_CSP-Direct", "Azure_EA", "GCP", "OCI", "VMware"], "x-cs-enum-type": "CloudServiceName"}, "category": {"type": "string", "description": "Resource Category"}, "resource_type": {"type": "string", "description": "Resource Type"}, "resource": {"type": "string", "description": "Resource Name"}, "supports_tags": {"type": "boolean", "description": "Whether resource has tag support"}}, "type": "object"}, "WorkloadServiceResourceRegion": {"properties": {"region": {"type": "string", "description": "Resource Region"}}, "type": "object"}, "WorkloadServiceResourceRegionRequest": {"properties": {"cloud_account_ids": {"type": "array", "description": "Which cloud account ids to fetch regions for", "items": {"type": "string"}}}, "type": "object"}, "WorkloadTierConfiguration": {"properties": {"name": {"type": "string", "description": "Name of the workload tier"}, "description": {"type": "string", "description": "Description of the tier"}, "owner": {"type": "string", "description": "Owner of the tier"}, "cloud_account_id": {"type": "array", "items": {"type": "string", "description": "Cloud Accounts from which to select resources"}}, "resource_filter": {"$ref": "#/definitions/QueryOperator"}}, "type": "object"}, "ZoneModel": {"required": ["count", "zone"], "properties": {"zone": {"type": "string", "description": "zone name"}, "count": {"type": "integer", "description": "total count details"}}, "type": "object"}}, "responses": {"ParseError": {"description": "When a mask can't be parsed"}, "MaskError": {"description": "When any error occurs on mask"}}}
